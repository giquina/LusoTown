{
  "name": "lusotown-web",
  "version": "1.0.0",
  "description": "LusoTown Web Application",
  "engines": {
    "node": "22.x",
    "npm": "9.x"
  },
  "scripts": {
    "preinstall": "npx --yes npm@9 --version >/dev/null 2>&1 && (node -e \"try{require('child_process').execSync('npm -v',{stdio:'inherit'})}catch(e){}\") || true",
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "export": "next build && next export",
    "deploy": "npm run build && vercel --prod",
    "auto-fix": "eslint --ext .ts,.tsx src --fix || true",
    "deployment-monitor": "node scripts/deployment-monitor.js",
    "deploy:auto": "npm run auto-fix && npm run build && vercel --prod",
    "optimize-images": "node scripts/optimize-portuguese-images.js",
    "generate-placeholders": "node scripts/optimize-portuguese-images.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "test:unit": "jest --testPathPattern=__tests__/components|__tests__/contexts|__tests__/utils",
    "test:integration": "jest --testPathPattern=__tests__/integration",
    "test:performance": "jest --testPathPattern=__tests__/performance",
    "test:e2e": "playwright test",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:debug": "playwright test --debug",
    "test:portuguese": "jest --testNamePattern='Portuguese|portuguÃªs'",
    "audit:security": "node scripts/security-audit.js",
    "audit:hardcoding": "node scripts/hardcoding-audit.js",
    "audit:content": "node scripts/content-quality-check.js",
    "test:mobile": "jest --testNamePattern='mobile|Mobile'",
    "test:mobile-ux": "jest --testPathPattern=__tests__/mobile-ux-tests",
    "test:mobile-validation": "node -e \"const { validateFullPage } = require('./src/utils/mobile-ux-validator'); validateFullPage().then(r => console.log('Mobile Score:', r.score + '/100')).catch(console.error);\"",
    "test:mobile-suite": "jest src/__tests__/mobile-ux-tests.ts --verbose",
    "test:responsive": "jest --testNamePattern='responsive|breakpoint|viewport'",
    "test:portuguese-mobile": "jest --testNamePattern='portuguese.*mobile|mobile.*portuguese'",
    "test:touch-targets": "jest --testNamePattern='touch|gesture|tap'",
    "test:security": "jest --testNamePattern='security|Security|XSS|SQL'",
    "test:accessibility": "jest --testNamePattern='accessibility|a11y|screen reader'",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:performance && npm run test:mobile-ux",
    "db:migrate": "node scripts/apply-migration.js",
    "db:migrate:streaming": "node scripts/apply-streaming-migration.js",
    "db:migrate:streaming:complete": "node scripts/apply-complete-streaming-migration.js",
    "verify:creator-monetization": "node scripts/verify-creator-monetization.js",
    "audit:monthly": "npm run audit:hardcoding && npm run audit:content && npm run lint",
    "docs:update": "node scripts/docs/documentation-agent.js",
    "docs:validate": "node scripts/docs/validate-documentation.js",
    "docs:capture": "node scripts/docs/capture-instructions.js --scan",
    "docs:summary": "node scripts/docs/capture-instructions.js --summary",
    "docs:maintenance": "node scripts/docs/periodic-maintenance.js",
    "docs:install-hooks": "bash scripts/docs/install-git-hooks.sh",
    "docs:dashboard": "node scripts/docs/documentation-dashboard.js",
    "docs:task-integration": "node scripts/docs/task-integration.js",
    "docs:full": "npm run docs:update && npm run docs:capture && npm run docs:validate && npm run docs:dashboard",
    "docs:intelligent": "node scripts/docs/intelligent-documentation-engine.js",
    "docs:conversation": "node scripts/docs/conversation-intelligence.js",
    "docs:integration": "node scripts/docs/integration-hub.js",
    "docs:rules": "node scripts/docs/automation-rules-engine.js",
    "docs:orchestrator": "node scripts/docs/intelligent-documentation-orchestrator.js",
    "docs:intelligent-full": "node scripts/docs/intelligent-documentation-orchestrator.js",
    "docs:master-analytics": "node scripts/docs/intelligent-documentation-orchestrator.js",
    "docs:health-check": "node -e \"const Orchestrator = require('./scripts/docs/intelligent-documentation-orchestrator'); new Orchestrator().checkSystemHealth().then(r => console.log('Health:', r.overallHealth + '%')).catch(console.error);\"",
    "docs:cultural-audit": "node -e \"const Orchestrator = require('./scripts/docs/intelligent-documentation-orchestrator'); new Orchestrator().runCulturalConsistencyAudit().then(r => console.log('Cultural audit completed')).catch(console.error);\"",
    "docs:workflow": "node -e \"const Orchestrator = require('./scripts/docs/intelligent-documentation-orchestrator'); const workflow = process.argv[2]; if (!workflow) { console.log('Usage: npm run docs:workflow <workflow-name>'); process.exit(1); } new Orchestrator().executeWorkflow(workflow, 'manual').then(() => console.log('Workflow executed')).catch(console.error);\"",
    "docs:analytics": "node scripts/docs/intelligent-documentation-engine.js && node scripts/docs/conversation-intelligence.js && node scripts/docs/integration-hub.js && node scripts/docs/automation-rules-engine.js",
    "docs:queue": "node -e \"const Rules = require('./scripts/docs/automation-rules-engine'); new Rules().getTaskQueueStatus().then(r => console.log('Queue:', r.pending, 'pending tasks')).catch(console.error);\"",
    "postinstall": "npm run docs:install-hooks || true"
  },
  "dependencies": {
    "@headlessui/react": "^2.2.7",
    "@heroicons/react": "^2.2.0",
    "@lusotown/design-tokens": "file:../packages/design-tokens",
    "@lusotown/ui": "file:../packages/ui",
    "@stripe/stripe-js": "^7.8.0",
    "@supabase/auth-helpers-nextjs": "^0.10.0",
    "@supabase/supabase-js": "^2.54.0",
    "@tailwindcss/forms": "^0.5.7",
    "@tailwindcss/line-clamp": "^0.4.4",
    "@tailwindcss/typography": "^0.5.10",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/redis": "^4.0.10",
    "@types/socket.io": "^3.0.1",
    "@upstash/redis": "^1.35.3",
    "clsx": "^2.1.1",
    "date-fns": "^4.1.0",
    "dotenv": "^17.2.1",
    "framer-motion": "^10.16.4",
    "hls.js": "^1.5.13",
    "html5-qrcode": "^2.3.8",
    "ioredis": "^5.7.0",
    "isomorphic-dompurify": "^2.26.0",
    "jsonwebtoken": "^9.0.2",
    "lucide-react": "^0.294.0",
    "next": "^14.0.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-hot-toast": "^2.5.2",
    "react-native-web": "^0.19.11",
    "redis": "^5.8.1",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.8.1",
    "stripe": "^18.4.0",
    "tailwind-merge": "^3.3.1",
    "zod": "^4.1.0"
  },
  "devDependencies": {
    "@playwright/test": "^1.55.0",
    "@testing-library/jest-dom": "^6.7.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/jest": "^30.0.0",
    "@types/node": "^20.0.0",
    "@types/react": "^18.2.0",
    "@types/react-dom": "^18.2.0",
    "@types/react-native": "^0.72.5",
    "autoprefixer": "^10.4.16",
    "critters": "^0.0.23",
    "eslint": "^8.57.1",
    "eslint-config-next": "^14.0.0",
    "eslint-plugin-react": "^7.37.5",
    "jest": "^30.0.5",
    "jest-environment-jsdom": "^30.0.5",
    "playwright": "^1.55.0",
    "postcss": "^8.4.31",
    "puppeteer": "^24.16.2",
    "sharp": "^0.34.3",
    "tailwindcss": "^3.3.5",
    "typescript": "^5.2.0"
  },
  "author": "LusoTown Team",
  "license": "MIT"
}
