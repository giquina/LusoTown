"use client";

import { useState } from 'react';
import { motion } from 'framer-motion';
import { useLanguage } from '@/context/LanguageContext';\nimport { PORTUGUESE_SPEAKING_COUNTRIES, PRIMARY_COUNTRIES } from '@/config/portuguese-countries';\nimport { \n  CheckIcon, \n  ExclamationCircleIcon, \n  GiftIcon,\n  BuildingOffice2Icon,\n  HeartIcon,\n  MusicalNoteIcon,\n  AcademicCapIcon\n} from '@heroicons/react/24/outline';\n\ninterface EnhancedSignupFormProps {\n  formData: any;\n  onInputChange: (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => void;\n  onSubmit: (e: React.FormEvent) => void;\n  isSubmitting: boolean;\n  error: string;\n  success: string;\n  emailError: string;\n  passwordStrength: number;\n  selectedAudience: 'business' | 'romantic' | 'both' | '';\n  onInterestToggle: (interest: string) => void;\n  onPrimaryInterestToggle: (interest: string) => void;\n}\n\nexport function EnhancedSignupForm({\n  formData,\n  onInputChange,\n  onSubmit,\n  isSubmitting,\n  error,\n  success,\n  emailError,\n  passwordStrength,\n  selectedAudience,\n  onInterestToggle,\n  onPrimaryInterestToggle\n}: EnhancedSignupFormProps) {\n  const { language, t } = useLanguage();\n\n  // Enhanced interest categories based on selected audience\n  const getInterestCategories = () => {\n    const baseInterests = [\n      { key: 'fado', label: '🎵 Fado', description: 'Traditional Portuguese music' },\n      { key: 'food', label: '🍽️ Portuguese Cuisine', description: 'Cooking and food events' },\n      { key: 'culture', label: '🏛️ Cultural Events', description: 'Festivals and celebrations' },\n      { key: 'dance', label: '💃 Dancing', description: 'Traditional and modern dance' },\n      { key: 'language', label: '🗣️ Language Exchange', description: 'Practice Portuguese/English' },\n    ];\n\n    const businessInterests = [\n      { key: 'business', label: '💼 Business Networking', description: 'Professional connections' },\n      { key: 'entrepreneurship', label: '🚀 Entrepreneurship', description: 'Startup ecosystem' },\n      { key: 'finance', label: '💰 Finance & Investment', description: 'Financial services' },\n      { key: 'technology', label: '💻 Technology', description: 'Tech industry networking' },\n      { key: 'consulting', label: '📊 Consulting', description: 'Professional services' },\n      { key: 'trade', label: '🌍 International Trade', description: 'Import/export business' }\n    ];\n\n    const romanticInterests = [\n      { key: 'dating', label: '❤️ Romance', description: 'Finding meaningful relationships' },\n      { key: 'kizomba', label: '💃 Kizomba Dancing', description: 'Sensual partner dancing' },\n      { key: 'wine-tasting', label: '🍷 Wine Culture', description: 'Portuguese wine appreciation' },\n      { key: 'poetry', label: '📝 Poetry & Literature', description: 'Cultural expression' },\n      { key: 'travel', label: '✈️ Cultural Travel', description: 'Exploring Portuguese heritage' },\n      { key: 'family-traditions', label: '👨‍👩‍👧‍👦 Family Traditions', description: 'Cultural celebrations' }\n    ];\n\n    if (selectedAudience === 'business') {\n      return { base: baseInterests, specific: businessInterests };\n    } else if (selectedAudience === 'romantic') {\n      return { base: baseInterests, specific: romanticInterests };\n    } else {\n      return { base: baseInterests, specific: [...businessInterests, ...romanticInterests] };\n    }\n  };\n\n  const interests = getInterestCategories();\n\n  return (\n    <div className=\"bg-white/90 backdrop-blur-lg rounded-2xl shadow-2xl p-6 sm:p-8 border border-white/50\">\n      {/* Enhanced Form Header */}\n      <div className=\"text-center mb-8\">\n        <div className=\"inline-flex items-center gap-2 bg-green-50 rounded-full px-4 py-2 text-green-600 font-medium mb-4 text-sm\">\n          <CheckIcon className=\"h-4 w-4\" />\n          {language === 'pt' ? 'Grátis para Participar' : 'Free to Join'}\n        </div>\n        \n        <h2 className=\"text-3xl font-bold text-gray-900 mb-2\">\n          {selectedAudience === 'business' \n            ? (language === 'pt' ? 'Networking Profissional' : 'Professional Networking')\n            : selectedAudience === 'romantic'\n            ? (language === 'pt' ? 'Conexões Românticas' : 'Romantic Connections')\n            : (language === 'pt' ? 'Junte-se Hoje - Grátis' : 'Join Today - FREE')\n          }\n        </h2>\n        \n        <p className=\"text-gray-600 mb-6\">\n          {selectedAudience === 'business'\n            ? (language === 'pt' ? 'Conecte-se com a elite empresarial portuguesa' : 'Connect with Portuguese business elite')\n            : selectedAudience === 'romantic'\n            ? (language === 'pt' ? 'Encontre alguém que entenda sua alma' : 'Find someone who understands your soul')\n            : (language === 'pt' ? 'Acesso gratuito à comunidade • Sem barreiras à participação' : 'Free community access • No barriers to participation')\n          }\n        </p>\n\n        {/* Audience-specific stats */}\n        <div className=\"flex items-center justify-center gap-6 text-sm text-gray-500 mb-6 flex-wrap\">\n          {selectedAudience === 'business' ? (\n            <>\n              <div className=\"flex items-center gap-1\">\n                <BuildingOffice2Icon className=\"h-4 w-4\" />\n                <span>2,150+ {language === 'pt' ? 'Estudantes' : 'Students'}</span>\n              </div>\n              <div className=\"flex items-center gap-1\">\n                <AcademicCapIcon className=\"h-4 w-4\" />\n                <span>8 {language === 'pt' ? 'Universidades' : 'Universities'}</span>\n              </div>\n            </>\n          ) : selectedAudience === 'romantic' ? (\n            <>\n              <div className=\"flex items-center gap-1\">\n                <HeartIcon className=\"h-4 w-4 text-red-400\" />\n                <span>{language === 'pt' ? 'Compatibilidade Cultural' : 'Cultural Compatibility'}</span>\n              </div>\n              <div className=\"flex items-center gap-1\">\n                <MusicalNoteIcon className=\"h-4 w-4 text-purple-400\" />\n                <span>{language === 'pt' ? 'Eventos Íntimos' : 'Intimate Events'}</span>\n              </div>\n            </>\n          ) : (\n            <>\n              <div className=\"flex items-center gap-1\">\n                <CheckIcon className=\"h-4 w-4 text-green-400\" />\n                <span>750+ {language === 'pt' ? 'Membros' : 'Members'}</span>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n\n      {/* Error/Success Messages */}\n      {error && (\n        <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg flex items-center gap-3\">\n          <ExclamationCircleIcon className=\"h-5 w-5 text-red-500 flex-shrink-0\" />\n          <p className=\"text-sm text-red-700\">{error}</p>\n        </div>\n      )}\n\n      {success && (\n        <div className=\"mb-6 p-4 bg-green-50 border border-green-200 rounded-lg flex items-center gap-3\">\n          <CheckIcon className=\"h-5 w-5 text-green-500 flex-shrink-0\" />\n          <p className=\"text-sm text-green-700\">{success}</p>\n        </div>\n      )}\n\n      <form onSubmit={onSubmit} className=\"space-y-6\">\n        {/* Basic Information Section */}\n        <div className=\"space-y-4\">\n          <h3 className=\"text-lg font-semibold text-gray-900 border-b border-gray-200 pb-2\">\n            {language === 'pt' ? 'Informações Básicas' : 'Basic Information'}\n          </h3>\n          \n          <div className=\"grid sm:grid-cols-2 gap-4\">\n            <div>\n              <label htmlFor=\"firstName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                {language === 'pt' ? 'Primeiro Nome' : 'First Name'}\n              </label>\n              <input\n                type=\"text\"\n                id=\"firstName\"\n                name=\"firstName\"\n                value={formData.firstName}\n                onChange={onInputChange}\n                disabled={isSubmitting}\n                required\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-400 focus:border-transparent bg-white/90 backdrop-blur-sm disabled:opacity-50\"\n                placeholder={language === 'pt' ? 'Maria' : 'Maria'}\n              />\n            </div>\n            \n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                {language === 'pt' ? 'Email Profissional' : 'Professional Email'}\n              </label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={onInputChange}\n                disabled={isSubmitting}\n                required\n                className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:border-transparent bg-white/90 backdrop-blur-sm disabled:opacity-50 transition-colors ${\n                  emailError\n                    ? \"border-red-300 focus:ring-red-400\"\n                    : formData.email && !emailError\n                    ? \"border-green-300 focus:ring-green-400\"\n                    : \"border-gray-300 focus:ring-primary-400\"\n                }`}\n                placeholder=\"maria@empresa.com\"\n              />\n              {emailError && (\n                <p className=\"mt-1 text-sm text-red-600\">{emailError}</p>\n              )}\n              {formData.email && !emailError && (\n                <p className=\"mt-1 text-sm text-green-600 flex items-center gap-1\">\n                  <CheckIcon className=\"h-4 w-4\" />\n                  {language === 'pt' ? 'Email válido' : 'Valid email'}\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Password Section */}\n        <div className=\"space-y-4\">\n          <div className=\"grid sm:grid-cols-2 gap-4\">\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                {language === 'pt' ? 'Senha' : 'Password'}\n              </label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                value={formData.password}\n                onChange={onInputChange}\n                disabled={isSubmitting}\n                required\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-400 focus:border-transparent bg-white/90 backdrop-blur-sm disabled:opacity-50\"\n                placeholder={language === 'pt' ? 'Digite uma senha segura' : 'Enter a secure password'}\n                minLength={6}\n              />\n              {formData.password && (\n                <div className=\"mt-2\">\n                  <div className=\"flex gap-1 mb-1\">\n                    {[1, 2, 3, 4].map((level) => (\n                      <div\n                        key={level}\n                        className={`h-2 flex-1 rounded-full transition-colors ${\n                          passwordStrength >= level\n                            ? passwordStrength <= 1\n                              ? \"bg-red-400\"\n                              : passwordStrength <= 2\n                              ? \"bg-yellow-400\"\n                              : passwordStrength <= 3\n                              ? \"bg-blue-400\"\n                              : \"bg-green-400\"\n                            : \"bg-gray-200\"\n                        }`}\n                      />\n                    ))}\n                  </div>\n                  <p\n                    className={`text-xs ${\n                      passwordStrength <= 1\n                        ? \"text-red-600\"\n                        : passwordStrength <= 2\n                        ? \"text-yellow-600\"\n                        : passwordStrength <= 3\n                        ? \"text-blue-600\"\n                        : \"text-green-600\"\n                    }`}\n                  >\n                    {passwordStrength <= 1\n                      ? (language === 'pt' ? 'Senha fraca' : 'Weak password')\n                      : passwordStrength <= 2\n                      ? (language === 'pt' ? 'Senha razoável' : 'Fair password')\n                      : passwordStrength <= 3\n                      ? (language === 'pt' ? 'Senha boa' : 'Good password')\n                      : (language === 'pt' ? 'Senha forte' : 'Strong password')}\n                  </p>\n                </div>\n              )}\n            </div>\n            \n            <div>\n              <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                {language === 'pt' ? 'Confirmar Senha' : 'Confirm Password'}\n              </label>\n              <input\n                type=\"password\"\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                value={formData.confirmPassword}\n                onChange={onInputChange}\n                disabled={isSubmitting}\n                required\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-400 focus:border-transparent bg-white/90 backdrop-blur-sm disabled:opacity-50\"\n                placeholder={language === 'pt' ? 'Confirme sua senha' : 'Confirm your password'}\n                minLength={6}\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Cultural Heritage Section */}\n        <div className=\"bg-gradient-to-r from-primary-50 to-secondary-50 p-6 rounded-xl border border-primary-100\">\n          <h3 className=\"font-semibold text-gray-900 mb-6 flex items-center gap-2\">\n            🇵🇹 {language === 'pt' ? 'Sua Herança Cultural' : 'Your Cultural Heritage'}\n          </h3>\n\n          <div className=\"grid sm:grid-cols-2 gap-4 mb-6\">\n            <div>\n              <label htmlFor=\"portugueseOrigin\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                {language === 'pt' ? 'Origem Portuguesa' : 'Portuguese Origin'}\n              </label>\n              <select\n                id=\"portugueseOrigin\"\n                name=\"portugueseOrigin\"\n                value={formData.portugueseOrigin}\n                onChange={onInputChange}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-400 focus:border-transparent bg-white/90\"\n              >\n                <option value=\"\">\n                  {language === 'pt' ? 'Selecione sua origem (opcional)' : 'Select your origin (optional)'}\n                </option>\n                {PRIMARY_COUNTRIES.map((country) => (\n                  <option key={country.code} value={country.code.toLowerCase()}>\n                    {country.flag} {language === 'pt' ? country.namePortuguese : country.name}\n                  </option>\n                ))}\n                <option value=\"uk-born\">\n                  🇬🇧 {language === 'pt' ? 'Nascido no Reino Unido com herança portuguesa' : 'UK-born with Portuguese heritage'}\n                </option>\n              </select>\n            </div>\n\n            <div>\n              <label htmlFor=\"ukLocation\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                {language === 'pt' ? 'Localização no Reino Unido' : 'UK Location'}\n              </label>\n              <select\n                id=\"ukLocation\"\n                name=\"ukLocation\"\n                value={formData.ukLocation}\n                onChange={onInputChange}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-400 focus:border-transparent bg-white/90\"\n              >\n                <option value=\"\">\n                  {language === 'pt' ? 'Selecione sua área' : 'Select your area'}\n                </option>\n                <optgroup label={language === 'pt' ? 'Londres (Áreas Portuguesas)' : 'London (Portuguese Areas)'}>\n                  <option value=\"stockwell\">🇵🇹 Stockwell</option>\n                  <option value=\"vauxhall\">🏛️ Vauxhall</option>\n                  <option value=\"elephant-castle\">🐘 Elephant & Castle</option>\n                  <option value=\"bermondsey\">🏢 Bermondsey</option>\n                  <option value=\"lambeth\">🌉 Lambeth</option>\n                </optgroup>\n                <optgroup label={language === 'pt' ? 'Outras Cidades' : 'Other Cities'}>\n                  <option value=\"manchester\">📍 Manchester</option>\n                  <option value=\"birmingham\">📍 Birmingham</option>\n                  <option value=\"leeds\">📍 Leeds</option>\n                  <option value=\"liverpool\">📍 Liverpool</option>\n                  <option value=\"edinburgh\">📍 Edinburgh</option>\n                  <option value=\"glasgow\">📍 Glasgow</option>\n                </optgroup>\n              </select>\n            </div>\n          </div>\n\n          {/* Enhanced Interest Selection */}\n          <div className=\"mb-6\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-4\">\n              {language === 'pt' ? 'O que te interessa? (Selecione todos que se aplicam)' : 'What interests you? (Select all that apply)'}\n            </label>\n            \n            {/* Base Cultural Interests */}\n            <div className=\"mb-4\">\n              <h4 className=\"text-sm font-medium text-gray-600 mb-3\">\n                {language === 'pt' ? '🎭 Interesses Culturais' : '🎭 Cultural Interests'}\n              </h4>\n              <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-2\">\n                {interests.base.map((interest) => (\n                  <button\n                    key={interest.key}\n                    type=\"button\"\n                    onClick={() => onInterestToggle(interest.key)}\n                    className={`text-left p-3 rounded-lg text-xs transition-all ${\n                      formData.interests.includes(interest.key)\n                        ? \"bg-primary-500 text-white shadow-md transform scale-105\"\n                        : \"bg-white/60 text-gray-700 hover:bg-white border border-gray-200 hover:shadow-sm\"\n                    }`}\n                    title={interest.description}\n                  >\n                    {interest.label}\n                  </button>\n                ))}\n              </div>\n            </div>\n            \n            {/* Audience-Specific Interests */}\n            <div>\n              <h4 className=\"text-sm font-medium text-gray-600 mb-3\">\n                {selectedAudience === 'business' \n                  ? (language === 'pt' ? '💼 Interesses Profissionais' : '💼 Professional Interests')\n                  : selectedAudience === 'romantic'\n                  ? (language === 'pt' ? '❤️ Interesses Românticos' : '❤️ Romantic Interests')\n                  : (language === 'pt' ? '⭐ Interesses Especializados' : '⭐ Specialized Interests')\n                }\n              </h4>\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2\">\n                {interests.specific.map((interest) => (\n                  <button\n                    key={interest.key}\n                    type=\"button\"\n                    onClick={() => onPrimaryInterestToggle(interest.key)}\n                    className={`text-left p-3 rounded-lg text-xs transition-all ${\n                      formData.primaryInterests?.includes(interest.key)\n                        ? \"bg-secondary-500 text-white shadow-md transform scale-105\"\n                        : \"bg-white/60 text-gray-700 hover:bg-white border border-gray-200 hover:shadow-sm\"\n                    }`}\n                    title={interest.description}\n                  >\n                    {interest.label}\n                  </button>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Referral Code */}\n        <div>\n          <label htmlFor=\"referralCode\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n            <div className=\"flex items-center gap-2\">\n              <GiftIcon className=\"h-4 w-4 text-green-600\" />\n              {language === 'pt' ? 'Código de Indicação (Opcional)' : 'Referral Code (Optional)'}\n            </div>\n          </label>\n          <input\n            type=\"text\"\n            id=\"referralCode\"\n            name=\"referralCode\"\n            value={formData.referralCode}\n            onChange={onInputChange}\n            disabled={isSubmitting}\n            className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-400 focus:border-transparent bg-white/90 backdrop-blur-sm disabled:opacity-50 uppercase\"\n            placeholder={language === 'pt' ? 'Ex: JOÃO1234' : 'e.g., MARIA1234'}\n            maxLength={20}\n          />\n          {formData.referralCode && (\n            <p className=\"mt-1 text-sm text-green-600 flex items-center gap-1\">\n              <GiftIcon className=\"h-4 w-4\" />\n              {language === 'pt' ? 'Ganhe 25% de desconto no primeiro mês!' : 'Get 25% off your first month!'}\n            </p>\n          )}\n        </div>\n\n        {/* Terms and Conditions */}\n        <div className=\"space-y-4\">\n          <div className=\"flex items-start space-x-3\">\n            <input\n              id=\"ageConfirmation\"\n              name=\"ageConfirmation\"\n              type=\"checkbox\"\n              checked={formData.ageConfirmation}\n              onChange={onInputChange}\n              disabled={isSubmitting}\n              required\n              className=\"h-4 w-4 text-primary-400 focus:ring-primary-400 border-gray-300 rounded mt-1 flex-shrink-0 disabled:opacity-50\"\n            />\n            <label htmlFor=\"ageConfirmation\" className=\"text-sm text-gray-700\">\n              {language === 'pt' \n                ? 'Concordo em seguir as diretrizes da comunidade e respeitar todos os membros independentemente da idade'\n                : 'I agree to follow community guidelines and respect all members regardless of age'\n              }\n            </label>\n          </div>\n\n          <div className=\"flex items-start space-x-3\">\n            <input\n              id=\"agreeTerms\"\n              name=\"agreeTerms\"\n              type=\"checkbox\"\n              checked={formData.agreeTerms}\n              onChange={onInputChange}\n              disabled={isSubmitting}\n              required\n              className=\"h-4 w-4 text-primary-400 focus:ring-primary-400 border-gray-300 rounded mt-1 flex-shrink-0 disabled:opacity-50\"\n            />\n            <label htmlFor=\"agreeTerms\" className=\"text-sm text-gray-700\">\n              {language === 'pt' ? 'Concordo com os ' : 'I agree to LusoTown\\'s '}\n              <a href=\"/terms\" className=\"text-primary-400 hover:text-primary-500 underline\">\n                {language === 'pt' ? 'Termos de Serviço' : 'Terms of Service'}\n              </a>\n              {', '}\n              <a href=\"/privacy\" className=\"text-primary-400 hover:text-primary-500 underline\">\n                {language === 'pt' ? 'Política de Privacidade' : 'Privacy Policy'}\n              </a>\n              {language === 'pt' ? ' e ' : ', and '}\n              <a href=\"/community-guidelines\" className=\"text-primary-400 hover:text-primary-500 underline\">\n                {language === 'pt' ? 'Diretrizes da Comunidade' : 'Community Guidelines'}\n              </a>\n            </label>\n          </div>\n        </div>\n\n        {/* Submit Button */}\n        <motion.button\n          type=\"submit\"\n          disabled={isSubmitting || !!success}\n          whileHover={{ scale: 1.02, y: -2 }}\n          whileTap={{ scale: 0.98 }}\n          className=\"w-full bg-gradient-to-r from-green-600 to-green-700 text-white rounded-2xl shadow-2xl hover:shadow-3xl transform transition-all duration-300 cursor-pointer group py-6 disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none\"\n        >\n          {isSubmitting ? (\n            <span className=\"flex items-center justify-center gap-2 text-xl font-black\">\n              <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n              {language === 'pt' ? 'Criando Conta...' : 'Creating Account...'}\n            </span>\n          ) : success ? (\n            <span className=\"flex items-center justify-center gap-2 text-xl font-black\">\n              <CheckIcon className=\"h-6 w-6\" />\n              {language === 'pt' ? 'Conta Criada!' : 'Account Created!'}\n            </span>\n          ) : (\n            <span className=\"flex items-center justify-center gap-4 text-xl font-black\">\n              <span className=\"text-xl\">🇵🇹</span>\n              <span>\n                {selectedAudience === 'business'\n                  ? (language === 'pt' ? 'Entrar na Rede Profissional - GRÁTIS' : 'Join Business Network - FREE')\n                  : selectedAudience === 'romantic'\n                  ? (language === 'pt' ? 'Encontrar Conexões - GRÁTIS' : 'Find Connections - FREE')\n                  : (language === 'pt' ? 'Juntar-se a 750+ Falantes de Português - GRÁTIS' : 'Join 750+ Portuguese Speakers - FREE')\n                }\n              </span>\n              <span className=\"text-2xl\">→</span>\n            </span>\n          )}\n        </motion.button>\n      </form>\n    </div>\n  );\n}\n\nexport default EnhancedSignupForm;