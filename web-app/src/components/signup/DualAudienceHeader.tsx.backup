"use client";

import { useState } from 'react';
import { motion } from 'framer-motion';
import { useLanguage } from '@/context/LanguageContext';
import { 
  BuildingOffice2Icon, 
  HeartIcon, 
  UserGroupIcon, 
  SparklesIcon 
} from '@heroicons/react/24/outline';
import CulturalFlagCarousel from './CulturalFlagCarousel';

interface DualAudienceHeaderProps {
  selectedAudience: 'business' | 'romantic' | 'both' | '';
  onAudienceSelect: (audience: 'business' | 'romantic' | 'both') => void;
}

export function DualAudienceHeader({ selectedAudience, onAudienceSelect }: DualAudienceHeaderProps) {
  const { language, t } = useLanguage();

  const audienceOptions = [
    {
      id: 'business' as const,
      title: language === 'pt' ? 'Networking Profissional' : 'Professional Networking',
      subtitle: language === 'pt' ? 'Conecte-se com a elite empresarial portuguesa' : 'Connect with Portuguese business elite',
      icon: BuildingOffice2Icon,
      gradient: 'from-blue-600 to-indigo-700',\n      hoverGradient: 'hover:from-blue-700 hover:to-indigo-800',\n      benefits: [\n        language === 'pt' ? '2.150+ estudantes universitários' : '2,150+ university students',\n        language === 'pt' ? '8 universidades parceiras' : '8 partner universities',\n        language === 'pt' ? 'Eventos VIP de networking' : 'VIP networking events'\n      ]\n    },\n    {\n      id: 'romantic' as const,\n      title: language === 'pt' ? 'Conexões Românticas' : 'Romantic Connections',\n      subtitle: language === 'pt' ? 'Encontre alguém que entenda sua alma portuguesa' : 'Find someone who understands your Portuguese soul',\n      icon: HeartIcon,\n      gradient: 'from-red-500 to-pink-600',\n      hoverGradient: 'hover:from-red-600 hover:to-pink-700',\n      benefits: [\n        language === 'pt' ? 'Compatibilidade cultural' : 'Cultural compatibility matching',\n        language === 'pt' ? 'Eventos sociais íntimos' : 'Intimate social events',\n        language === 'pt' ? 'Conexões autênticas' : 'Authentic connections'\n      ]\n    },\n    {\n      id: 'both' as const,\n      title: language === 'pt' ? 'Tudo Incluído' : 'Everything Included',\n      subtitle: language === 'pt' ? 'Negócios e romance em uma plataforma completa' : 'Business and romance in one complete platform',\n      icon: SparklesIcon,\n      gradient: 'from-purple-600 to-pink-600',\n      hoverGradient: 'hover:from-purple-700 hover:to-pink-700',\n      benefits: [\n        language === 'pt' ? 'Acesso total à comunidade' : 'Full community access',\n        language === 'pt' ? 'Todos os eventos e recursos' : 'All events and features',\n        language === 'pt' ? 'Flexibilidade máxima' : 'Maximum flexibility'\n      ]\n    }\n  ];\n\n  return (\n    <div className=\"bg-gradient-to-br from-primary-50 via-white to-secondary-50 py-12\">\n      <div className=\"container-width\">\n        {/* Cultural Flag Animation Header */}\n        <motion.div \n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          className=\"text-center mb-12\"\n        >\n          <CulturalFlagCarousel className=\"mb-6\" size=\"xl\" />\n          \n          <h1 className=\"text-4xl sm:text-5xl lg:text-6xl font-black text-gray-900 mb-6 leading-tight\">\n            <span className=\"bg-gradient-to-r from-green-600 via-red-600 to-yellow-500 bg-clip-text text-transparent\">\n              {language === 'pt' ? 'Finalmente!' : 'Finally!'}\n            </span>\n            <br />\n            {language === 'pt' ? 'Sua Comunidade Portuguesa Completa' : 'Your Complete Portuguese Community'}\n          </h1>\n          \n          <p className=\"text-xl text-gray-700 mb-4 max-w-4xl mx-auto\">\n            {language === 'pt' \n              ? 'De negócios de alto nível a conexões românticas autênticas - tudo em uma plataforma cultural portuguesa'\n              : 'From high-level business to authentic romantic connections - all in one Portuguese cultural platform'\n            }\n          </p>\n          \n          <div className=\"flex items-center justify-center gap-6 text-lg text-gray-600 flex-wrap\">\n            <div className=\"flex items-center gap-2\">\n              <UserGroupIcon className=\"w-5 h-5 text-green-600\" />\n              <span className=\"font-semibold\">750+ {language === 'pt' ? 'Membros' : 'Members'}</span>\n            </div>\n            <div className=\"w-2 h-2 bg-gray-400 rounded-full hidden sm:block\" />\n            <div className=\"flex items-center gap-2\">\n              <BuildingOffice2Icon className=\"w-5 h-5 text-blue-600\" />\n              <span className=\"font-semibold\">8 {language === 'pt' ? 'Universidades' : 'Universities'}</span>\n            </div>\n            <div className=\"w-2 h-2 bg-gray-400 rounded-full hidden sm:block\" />\n            <div className=\"flex items-center gap-2\">\n              <HeartIcon className=\"w-5 h-5 text-red-600\" />\n              <span className=\"font-semibold\">{language === 'pt' ? 'Conexões Culturais' : 'Cultural Connections'}</span>\n            </div>\n          </div>\n        </motion.div>\n\n        {/* Audience Selection Cards */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, delay: 0.3 }}\n          className=\"mb-12\"\n        >\n          <h2 className=\"text-2xl font-bold text-center text-gray-900 mb-8\">\n            {language === 'pt' ? 'Escolha Sua Jornada' : 'Choose Your Journey'}\n          </h2>\n          \n          <div className=\"grid md:grid-cols-3 gap-6 max-w-5xl mx-auto\">\n            {audienceOptions.map((option) => {\n              const IconComponent = option.icon;\n              const isSelected = selectedAudience === option.id;\n              \n              return (\n                <motion.button\n                  key={option.id}\n                  onClick={() => onAudienceSelect(option.id)}\n                  className={`\n                    relative p-6 rounded-2xl border-2 transition-all duration-300 text-left\n                    ${\n                      isSelected\n                        ? 'border-primary-500 bg-white shadow-2xl scale-105'\n                        : 'border-gray-200 bg-white/80 hover:border-gray-300 hover:shadow-lg hover:scale-102'\n                    }\n                  `}\n                  whileHover={{ y: -4 }}\n                  whileTap={{ scale: 0.98 }}\n                >\n                  {/* Selection indicator */}\n                  {isSelected && (\n                    <motion.div\n                      initial={{ scale: 0 }}\n                      animate={{ scale: 1 }}\n                      className=\"absolute -top-3 -right-3 w-8 h-8 bg-primary-500 rounded-full flex items-center justify-center shadow-lg\"\n                    >\n                      <span className=\"text-white font-bold text-sm\">✓</span>\n                    </motion.div>\n                  )}\n                  \n                  {/* Icon with gradient background */}\n                  <div className={`w-16 h-16 rounded-xl bg-gradient-to-r ${option.gradient} ${option.hoverGradient} flex items-center justify-center mb-4 shadow-lg`}>\n                    <IconComponent className=\"h-8 w-8 text-white\" />\n                  </div>\n                  \n                  {/* Content */}\n                  <h3 className=\"text-xl font-bold text-gray-900 mb-2\">{option.title}</h3>\n                  <p className=\"text-gray-600 mb-4 text-sm leading-relaxed\">{option.subtitle}</p>\n                  \n                  {/* Benefits list */}\n                  <div className=\"space-y-2\">\n                    {option.benefits.map((benefit, index) => (\n                      <div key={index} className=\"flex items-center gap-2\">\n                        <div className=\"w-2 h-2 bg-primary-500 rounded-full\" />\n                        <span className=\"text-xs text-gray-600\">{benefit}</span>\n                      </div>\n                    ))}\n                  </div>\n                  \n                  {/* Call to action */}\n                  <div className={`mt-4 px-4 py-2 rounded-lg text-center text-sm font-medium transition-colors ${\n                    isSelected \n                      ? 'bg-primary-500 text-white' \n                      : 'bg-gray-100 text-gray-700 group-hover:bg-gray-200'\n                  }`}>\n                    {isSelected \n                      ? (language === 'pt' ? 'Selecionado' : 'Selected')\n                      : (language === 'pt' ? 'Selecionar' : 'Select')\n                    }\n                  </div>\n                </motion.button>\n              );\n            })}\n          </div>\n        </motion.div>\n        \n        {/* Selected audience confirmation */}\n        {selectedAudience && (\n          <motion.div\n            initial={{ opacity: 0, scale: 0.9 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ duration: 0.5 }}\n            className=\"text-center\"\n          >\n            <div className=\"inline-flex items-center gap-3 bg-gradient-to-r from-green-100 to-blue-100 border border-green-200 rounded-full px-6 py-3 shadow-lg\">\n              <div className=\"w-3 h-3 bg-green-500 rounded-full animate-pulse\" />\n              <span className=\"text-sm font-bold text-gray-800\">\n                {language === 'pt' \n                  ? `Perfeito! Vamos personalizar sua experiência para ${audienceOptions.find(opt => opt.id === selectedAudience)?.title.toLowerCase()}`\n                  : `Perfect! Let's customize your experience for ${audienceOptions.find(opt => opt.id === selectedAudience)?.title.toLowerCase()}`\n                }\n              </span>\n            </div>\n          </motion.div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default DualAudienceHeader;