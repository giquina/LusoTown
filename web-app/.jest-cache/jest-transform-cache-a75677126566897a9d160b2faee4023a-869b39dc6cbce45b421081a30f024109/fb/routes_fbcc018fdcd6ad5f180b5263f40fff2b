2a860dd69a24ecdeb1c0bca30541fda2
/**
 * Centralized Application Routes Configuration
 *
 * Use these constants instead of hardcoded strings like "/events" or full URLs.
 * Provides type-safe route navigation and URL generation helpers.
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    BRAZILIAN_ROUTES: function() {
        return BRAZILIAN_ROUTES;
    },
    PORTUGUESE_ROUTES: function() {
        return PORTUGUESE_ROUTES;
    },
    QUERY_PARAMS: function() {
        return QUERY_PARAMS;
    },
    ROUTES: function() {
        return ROUTES;
    },
    ROUTE_CATEGORIES: function() {
        return ROUTE_CATEGORIES;
    },
    ROUTE_PATTERNS: function() {
        return ROUTE_PATTERNS;
    },
    buildRoute: function() {
        return buildRoute;
    },
    buildRouteWithQuery: function() {
        return buildRouteWithQuery;
    },
    getBreadcrumbPath: function() {
        return getBreadcrumbPath;
    },
    isAdminRoute: function() {
        return isAdminRoute;
    },
    isProtectedRoute: function() {
        return isProtectedRoute;
    },
    isPublicRoute: function() {
        return isPublicRoute;
    },
    routePath: function() {
        return routePath;
    },
    routeUrl: function() {
        return routeUrl;
    }
});
const _site = require("./site");
const ROUTES = {
    // Core Pages
    home: "/",
    dashboard: "/dashboard",
    admin: "/admin",
    // Authentication
    signup: "/signup",
    login: "/login",
    forgotPassword: "/forgot-password",
    // Onboarding / Application
    apply: "/apply",
    // Events & Activities
    events: "/events",
    eventsCreate: "/events/create",
    eventsEdit: "/events/edit",
    groups: "/groups",
    groupsCreate: "/groups/create",
    groupsJoin: "/groups/join",
    londonTours: "/london-tours",
    tours: "/tours",
    // Community Features
    matches: "/matches",
    feed: "/feed",
    community: "/community",
    myNetwork: "/my-network",
    myEvents: "/my-events",
    favorites: "/favorites",
    saved: "/saved",
    // Services
    transport: "/transport",
    transportGroup: "/transport?mode=group",
    transportLuxury: "/transport?type=luxury",
    services: "/services",
    // Business
    businessDirectory: "/business-directory",
    businessNetworking: "/business-networking",
    directory: "/directory",
    businessSubmit: "/business-directory/submit",
    businessClaim: "/business-directory/claim",
    // Streaming & Media
    live: "/live",
    tv: "/tv",
    streaming: "/streaming",
    streamingDashboard: "/streaming/dashboard",
    streamingCreate: "/streaming/create",
    // Membership & Subscriptions
    subscription: "/subscription",
    pricing: "/pricing",
    premiumMembership: "/premium-membership",
    membershipUpgrade: "/membership/upgrade",
    culturalMembership: "/cultural-membership",
    socialMembership: "/social-membership",
    communityMembership: "/community-membership",
    businessMembership: "/business-membership",
    // Educational & Partnerships
    students: "/students",
    instituteCamoes: "/instituto-camoes",
    partnerships: "/partnerships",
    universities: "/universities",
    mentorship: "/mentorship",
    corporatePartnerships: "/corporate-partnerships",
    portugueseInstitutionalPartnerships: "/portuguese-institutional-partnerships",
    // Cultural Communities
    brazilianEliteCulture: "/brazilian-elite-culture",
    portugueseSpeakingNations: "/portuguese-speaking-nations",
    // Support & Information
    help: "/help",
    faq: "/faq",
    howItWorks: "/how-it-works",
    contact: "/contact",
    about: "/about",
    // Community Guidelines & Safety
    rules: "/rules",
    communityGuidelines: "/community-guidelines",
    safety: "/safety",
    safetyReport: "/safety/report",
    // Legal & Policy
    terms: "/terms",
    privacy: "/privacy",
    cookies: "/cookies",
    unsubscribe: "/unsubscribe",
    emailPreferences: "/email-preferences",
    // Marketing & Growth
    referrals: "/referrals",
    successStories: "/success-stories",
    caseStudies: "/case-studies",
    // Housing & Local Services
    housingAssistance: "/housing-assistance",
    neighborhoodGroups: "/neighborhood-groups",
    localServices: "/local-services",
    // Communication
    forums: "/forums",
    messages: "/messages",
    notifications: "/notifications",
    // Professional
    careers: "/careers",
    host: "/host",
    hostApplication: "/host/apply",
    // User Account
    profile: "/profile",
    profileEdit: "/profile/edit",
    settings: "/settings",
    billing: "/billing",
    // API Routes
    api: {
        auth: "/api/auth",
        events: "/api/events",
        users: "/api/users",
        matches: "/api/matches",
        business: "/api/business",
        streaming: "/api/streaming",
        transport: "/api/transport",
        payments: "/api/payments",
        webhooks: "/api/webhooks"
    }
};
const QUERY_PARAMS = {
    mode: "mode",
    type: "type",
    category: "category",
    location: "location",
    date: "date",
    price: "price",
    language: "language",
    search: "search",
    filter: "filter",
    sort: "sort",
    page: "page",
    limit: "limit",
    tab: "tab",
    ref: "ref",
    utm_source: "utm_source",
    utm_medium: "utm_medium",
    utm_campaign: "utm_campaign"
};
const ROUTE_PATTERNS = {
    eventDetail: "/events/[id]",
    groupDetail: "/groups/[id]",
    businessDetail: "/business-directory/[id]",
    userProfile: "/profile/[id]",
    streamingChannel: "/streaming/[channel]",
    universityPartnership: "/universities/[university]"
};
const ROUTE_CATEGORIES = {
    public: [
        "home",
        "events",
        "businessDirectory",
        "about",
        "contact",
        "pricing",
        "howItWorks",
        "tours",
        "instituteCamoes",
        "brazilianEliteCulture",
        "portugueseSpeakingNations"
    ],
    auth: [
        "signup",
        "login",
        "forgotPassword"
    ],
    protected: [
        "dashboard",
        "matches",
        "feed",
        "myNetwork",
        "myEvents",
        "favorites",
        "transport",
        "streaming",
        "subscription"
    ],
    admin: [
        "admin"
    ]
};
const routePath = (key)=>{
    const route = ROUTES[key];
    return typeof route === "string" ? route : "/";
};
const routeUrl = (key)=>{
    const route = ROUTES[key];
    return typeof route === "string" ? (0, _site.absoluteUrl)(route) : (0, _site.absoluteUrl)("/");
};
const buildRoute = (pattern, params)=>{
    let route = pattern;
    Object.entries(params).forEach(([key, value])=>{
        route = route.replace(`[${key}]`, value);
    });
    return route;
};
const buildRouteWithQuery = (route, queryParams)=>{
    const params = new URLSearchParams();
    Object.entries(queryParams).forEach(([key, value])=>{
        if (value !== undefined && value !== null) {
            params.append(key, String(value));
        }
    });
    const queryString = params.toString();
    return queryString ? `${route}?${queryString}` : route;
};
const isPublicRoute = (route)=>{
    return ROUTE_CATEGORIES.public.some((key)=>ROUTES[key] === route);
};
const isProtectedRoute = (route)=>{
    return ROUTE_CATEGORIES.protected.some((key)=>ROUTES[key] === route);
};
const isAdminRoute = (route)=>{
    return ROUTE_CATEGORIES.admin.some((key)=>ROUTES[key] === route);
};
const getBreadcrumbPath = (route)=>{
    const segments = route.split("/").filter(Boolean);
    return segments.map((_, index)=>`/${segments.slice(0, index + 1).join("/")}`);
};
const PORTUGUESE_ROUTES = {
    culturalEvents: buildRouteWithQuery(ROUTES.events, {
        category: "cultural"
    }),
    portugueseBusiness: buildRouteWithQuery(ROUTES.businessDirectory, {
        language: "pt"
    }),
    portugalConsulate: "/portugal-consulate",
    portugueseClasses: "/portuguese-classes",
    fadoEvents: buildRouteWithQuery(ROUTES.events, {
        category: "fado"
    }),
    footballGroups: buildRouteWithQuery(ROUTES.groups, {
        category: "football"
    })
};
const BRAZILIAN_ROUTES = {
    eliteCulture: ROUTES.brazilianEliteCulture,
    casaDoBrasil: "/casa-do-brasil",
    brazilianBusiness: buildRouteWithQuery(ROUTES.businessDirectory, {
        country: "brazil"
    }),
    brazilianEvents: buildRouteWithQuery(ROUTES.events, {
        category: "brazilian"
    }),
    carnivalEvents: buildRouteWithQuery(ROUTES.events, {
        category: "carnival"
    }),
    festaJunina: buildRouteWithQuery(ROUTES.events, {
        category: "festa-junina"
    }),
    capoeira: buildRouteWithQuery(ROUTES.events, {
        category: "capoeira"
    })
};

//# sourceMappingURL=data:application/json;base64,