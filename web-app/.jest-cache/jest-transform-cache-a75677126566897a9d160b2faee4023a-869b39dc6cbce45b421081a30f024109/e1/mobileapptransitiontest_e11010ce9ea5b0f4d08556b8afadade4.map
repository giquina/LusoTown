{"version":3,"sources":["/workspaces/LusoTown/web-app/__tests__/mobile-app-transition.test.tsx"],"sourcesContent":["/**\n * Mobile App Transition Tests\n * \n * Tests for Phase 1 implementation of mobile app transition strategy,\n * including device detection, app download prompts, and PWA functionality\n * for the Portuguese-speaking community.\n */\n\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport { jest } from '@jest/globals';\nimport { MobileDeviceDetector, getDeviceInfo, checkAppInstallation } from '@/lib/mobile-detection';\nimport MobileRedirectProvider, { MobileDownloadPrompt, useMobileRedirect } from '@/components/MobileRedirectProvider';\nimport AppDownloadLanding from '@/components/AppDownloadLanding';\nimport { LanguageProvider } from '@/context/LanguageContext';\nimport { MOBILE_APP_CONFIG } from '@/config/mobile-app';\n\n// Mock Next.js dynamic imports\njest.mock('next/dynamic', () => (fn: any) => fn());\n\n// Mock user agent for different devices\nconst mockUserAgent = (userAgent: string) => {\n  Object.defineProperty(navigator, 'userAgent', {\n    value: userAgent,\n    configurable: true,\n  });\n};\n\n// Mock localStorage\nconst mockLocalStorage = () => {\n  const storage: Record<string, string> = {};\n  return {\n    getItem: (key: string) => storage[key] || null,\n    setItem: (key: string, value: string) => {\n      storage[key] = value;\n    },\n    removeItem: (key: string) => {\n      delete storage[key];\n    },\n    clear: () => {\n      Object.keys(storage).forEach(key => delete storage[key]);\n    }\n  };\n};\n\nObject.defineProperty(window, 'localStorage', {\n  value: mockLocalStorage(),\n});\n\n// Mock window properties\nObject.defineProperty(window, 'innerWidth', {\n  value: 375,\n  configurable: true,\n});\n\nObject.defineProperty(window, 'innerHeight', {\n  value: 667,\n  configurable: true,\n});\n\n// Test component for using mobile redirect context\nfunction TestComponent() {\n  const {\n    deviceInfo,\n    showDownloadPrompt,\n    showLandingPage,\n    triggerAppDownload,\n    dismissPrompt\n  } = useMobileRedirect();\n\n  return (\n    <div>\n      <div data-testid=\"device-type\">\n        {deviceInfo?.isMobile ? 'mobile' : deviceInfo?.isTablet ? 'tablet' : 'desktop'}\n      </div>\n      <div data-testid=\"show-prompt\">{showDownloadPrompt ? 'true' : 'false'}</div>\n      <div data-testid=\"show-landing\">{showLandingPage ? 'true' : 'false'}</div>\n      <button onClick={() => triggerAppDownload()} data-testid=\"download-btn\">\n        Download App\n      </button>\n      <button onClick={dismissPrompt} data-testid=\"dismiss-btn\">\n        Dismiss\n      </button>\n    </div>\n  );\n}\n\ndescribe('MobileDeviceDetector', () => {\n  let detector: MobileDeviceDetector;\n\n  beforeEach(() => {\n    detector = MobileDeviceDetector.getInstance();\n    detector.resetCache();\n  });\n\n  afterEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('Device Detection', () => {\n    test('detects iOS mobile devices', () => {\n      mockUserAgent('Mozilla/5.0 (iPhone; CPU iPhone OS 14_0 like Mac OS X) AppleWebKit/605.1.15');\n      \n      const deviceInfo = detector.getDeviceInfo();\n      \n      expect(deviceInfo.isMobile).toBe(true);\n      expect(deviceInfo.isIOS).toBe(true);\n      expect(deviceInfo.isAndroid).toBe(false);\n      expect(deviceInfo.isDesktop).toBe(false);\n    });\n\n    test('detects Android mobile devices', () => {\n      mockUserAgent('Mozilla/5.0 (Linux; Android 11; SM-G991B) AppleWebKit/537.36');\n      \n      const deviceInfo = detector.getDeviceInfo();\n      \n      expect(deviceInfo.isMobile).toBe(true);\n      expect(deviceInfo.isAndroid).toBe(true);\n      expect(deviceInfo.isIOS).toBe(false);\n      expect(deviceInfo.isDesktop).toBe(false);\n    });\n\n    test('detects desktop devices', () => {\n      mockUserAgent('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36');\n      Object.defineProperty(window, 'innerWidth', { value: 1024 });\n      \n      const deviceInfo = detector.getDeviceInfo();\n      \n      expect(deviceInfo.isDesktop).toBe(true);\n      expect(deviceInfo.isMobile).toBe(false);\n      expect(deviceInfo.isTablet).toBe(false);\n    });\n\n    test('detects tablet devices', () => {\n      mockUserAgent('Mozilla/5.0 (iPad; CPU OS 14_0 like Mac OS X) AppleWebKit/605.1.15');\n      Object.defineProperty(window, 'innerWidth', { value: 768 });\n      \n      const deviceInfo = detector.getDeviceInfo();\n      \n      expect(deviceInfo.isTablet).toBe(true);\n      expect(deviceInfo.isMobile).toBe(false);\n      expect(deviceInfo.isDesktop).toBe(false);\n    });\n  });\n\n  describe('App Store URLs', () => {\n    test('returns iOS App Store URL for iOS devices', () => {\n      mockUserAgent('Mozilla/5.0 (iPhone; CPU iPhone OS 14_0 like Mac OS X)');\n      \n      const url = detector.getAppStoreUrl();\n      \n      expect(url).toBe(MOBILE_APP_CONFIG.stores.ios.url);\n    });\n\n    test('returns Google Play Store URL for Android devices', () => {\n      mockUserAgent('Mozilla/5.0 (Linux; Android 11; SM-G991B)');\n      \n      const url = detector.getAppStoreUrl();\n      \n      expect(url).toBe(MOBILE_APP_CONFIG.stores.android.url);\n    });\n  });\n\n  describe('Download Choice Tracking', () => {\n    test('tracks user download choice', () => {\n      mockUserAgent('Mozilla/5.0 (iPhone; CPU iPhone OS 14_0 like Mac OS X)');\n      \n      detector.trackDownloadChoice('download_app', 'ios');\n      \n      const choice = detector.getPreviousDownloadChoice();\n      expect(choice).toBeTruthy();\n      expect(choice?.choice).toBe('download_app');\n      expect(choice?.platform).toBe('ios');\n    });\n\n    test('respects user choice to continue with web', () => {\n      detector.trackDownloadChoice('continue_web');\n      \n      const shouldShow = detector.shouldShowDownloadPrompt();\n      \n      expect(shouldShow).toBe(false);\n    });\n\n    test('does not show prompt on desktop', () => {\n      mockUserAgent('Mozilla/5.0 (Windows NT 10.0; Win64; x64)');\n      Object.defineProperty(window, 'innerWidth', { value: 1024 });\n      \n      const shouldShow = detector.shouldShowDownloadPrompt();\n      \n      expect(shouldShow).toBe(false);\n    });\n  });\n});\n\ndescribe('MobileRedirectProvider', () => {\n  const renderWithLanguageProvider = (component: React.ReactNode) => {\n    return render(\n      <LanguageProvider>\n        <MobileRedirectProvider>\n          {component}\n        </MobileRedirectProvider>\n      </LanguageProvider>\n    );\n  };\n\n  beforeEach(() => {\n    mockUserAgent('Mozilla/5.0 (iPhone; CPU iPhone OS 14_0 like Mac OS X)');\n    Object.defineProperty(window, 'innerWidth', { value: 375 });\n    localStorage.clear();\n  });\n\n  test('provides mobile redirect context', async () => {\n    renderWithLanguageProvider(<TestComponent />);\n    \n    await waitFor(() => {\n      expect(screen.getByTestId('device-type')).toHaveTextContent('mobile');\n    });\n  });\n\n  test('tracks download attempts', async () => {\n    const mockOpen = jest.spyOn(window, 'open').mockImplementation(() => null);\n    \n    renderWithLanguageProvider(<TestComponent />);\n    \n    await waitFor(() => {\n      fireEvent.click(screen.getByTestId('download-btn'));\n    });\n    \n    expect(mockOpen).toHaveBeenCalledWith(\n      MOBILE_APP_CONFIG.stores.ios.url,\n      '_blank'\n    );\n    \n    mockOpen.mockRestore();\n  });\n\n  test('dismisses prompts correctly', async () => {\n    renderWithLanguageProvider(<TestComponent />);\n    \n    await waitFor(() => {\n      fireEvent.click(screen.getByTestId('dismiss-btn'));\n    });\n    \n    await waitFor(() => {\n      expect(screen.getByTestId('show-prompt')).toHaveTextContent('false');\n      expect(screen.getByTestId('show-landing')).toHaveTextContent('false');\n    });\n  });\n});\n\ndescribe('MobileDownloadPrompt', () => {\n  const renderPrompt = (forceShow = true) => {\n    return render(\n      <LanguageProvider>\n        <MobileRedirectProvider forceShow={forceShow}>\n          <MobileDownloadPrompt />\n        </MobileRedirectProvider>\n      </LanguageProvider>\n    );\n  };\n\n  beforeEach(() => {\n    mockUserAgent('Mozilla/5.0 (iPhone; CPU iPhone OS 14_0 like Mac OS X)');\n    Object.defineProperty(window, 'innerWidth', { value: 375 });\n  });\n\n  test('renders download prompt for mobile users', async () => {\n    renderPrompt();\n    \n    await waitFor(() => {\n      expect(screen.getByText('Get the LusoTown App')).toBeInTheDocument();\n      expect(screen.getByText('Better experience for Portuguese community')).toBeInTheDocument();\n    });\n  });\n\n  test('shows appropriate download button', async () => {\n    renderPrompt();\n    \n    await waitFor(() => {\n      expect(screen.getByText('Get App')).toBeInTheDocument();\n    });\n  });\n\n  test('includes dismiss option', async () => {\n    renderPrompt();\n    \n    await waitFor(() => {\n      expect(screen.getByText('Not now')).toBeInTheDocument();\n    });\n  });\n});\n\ndescribe('AppDownloadLanding', () => {\n  const renderLanding = () => {\n    return render(\n      <LanguageProvider>\n        <MobileRedirectProvider forceShow={true}>\n          <AppDownloadLanding />\n        </MobileRedirectProvider>\n      </LanguageProvider>\n    );\n  };\n\n  beforeEach(() => {\n    mockUserAgent('Mozilla/5.0 (iPhone; CPU iPhone OS 14_0 like Mac OS X)');\n    Object.defineProperty(window, 'innerWidth', { value: 375 });\n  });\n\n  test('renders full landing page content', async () => {\n    renderLanding();\n    \n    await waitFor(() => {\n      // Check hero content\n      expect(screen.getByText(/Get the LusoTown App/)).toBeInTheDocument();\n      expect(screen.getByText(/Join 2,750\\+ Portuguese speakers/)).toBeInTheDocument();\n    });\n  });\n\n  test('displays community statistics', async () => {\n    renderLanding();\n    \n    await waitFor(() => {\n      expect(screen.getByText('2,750+')).toBeInTheDocument();\n      expect(screen.getByText('Portuguese Speakers')).toBeInTheDocument();\n      expect(screen.getByText('450+')).toBeInTheDocument();\n      expect(screen.getByText('Cultural Events')).toBeInTheDocument();\n    });\n  });\n\n  test('shows Portuguese cultural elements', async () => {\n    renderLanding();\n    \n    await waitFor(() => {\n      // Check for Portuguese cultural flags/emojis in the background\n      const culturalElements = document.querySelectorAll('[style*=\"🇵🇹\"], [style*=\"🇧🇷\"]');\n      expect(culturalElements.length).toBeGreaterThan(0);\n    });\n  });\n\n  test('includes app store download buttons', async () => {\n    renderLanding();\n    \n    await waitFor(() => {\n      // Should show iOS App Store button for iPhone\n      expect(screen.getByText('App Store')).toBeInTheDocument();\n    });\n  });\n\n  test('displays testimonials from Portuguese community', async () => {\n    renderLanding();\n    \n    await waitFor(() => {\n      expect(screen.getByText('What Our Community Says')).toBeInTheDocument();\n      // Should have testimonial content\n      const testimonials = screen.getByText(/Manchester|London|Edinburgh/);\n      expect(testimonials).toBeInTheDocument();\n    });\n  });\n\n  test('shows trust signals', async () => {\n    renderLanding();\n    \n    await waitFor(() => {\n      expect(screen.getByText('Trusted by the Portuguese Community')).toBeInTheDocument();\n      expect(screen.getByText('8 University Partnerships')).toBeInTheDocument();\n      expect(screen.getByText('180+ Portuguese Business Partners')).toBeInTheDocument();\n    });\n  });\n});\n\ndescribe('Portuguese Language Support', () => {\n  const renderWithPortuguese = () => {\n    return render(\n      <LanguageProvider defaultLanguage=\"pt\">\n        <MobileRedirectProvider forceShow={true}>\n          <AppDownloadLanding />\n        </MobileRedirectProvider>\n      </LanguageProvider>\n    );\n  };\n\n  test('displays Portuguese text when language is set to Portuguese', async () => {\n    renderWithPortuguese();\n    \n    await waitFor(() => {\n      expect(screen.getByText(/Baixe o App LusoTown/)).toBeInTheDocument();\n      expect(screen.getByText(/Falantes de Português/)).toBeInTheDocument();\n    });\n  });\n});\n\ndescribe('Mobile App Configuration', () => {\n  test('has correct app store URLs', () => {\n    expect(MOBILE_APP_CONFIG.stores.ios.url).toBe('https://apps.apple.com/app/lusotown/id123456789');\n    expect(MOBILE_APP_CONFIG.stores.android.url).toBe('https://play.google.com/store/apps/details?id=com.lusotown.android');\n  });\n\n  test('includes Portuguese cultural features', () => {\n    expect(MOBILE_APP_CONFIG.features).toHaveLength(6);\n    \n    const eventsFeature = MOBILE_APP_CONFIG.features.find(f => f.id === 'events_discovery');\n    expect(eventsFeature).toBeDefined();\n    expect(eventsFeature?.title.en).toBe('Discover Portuguese Events');\n    expect(eventsFeature?.title.pt).toBe('Descubra Eventos Portugueses');\n  });\n\n  test('includes community statistics', () => {\n    expect(MOBILE_APP_CONFIG.stats.totalMembers).toBe(2750);\n    expect(MOBILE_APP_CONFIG.stats.portugueseEvents).toBe(450);\n    expect(MOBILE_APP_CONFIG.stats.universityPartners).toBe(8);\n  });\n\n  test('has A/B testing configuration', () => {\n    expect(MOBILE_APP_CONFIG.testing.enabled).toBe(true);\n    expect(MOBILE_APP_CONFIG.testing.variants).toHaveLength(2);\n  });\n});\n\ndescribe('Integration Tests', () => {\n  test('full mobile app transition flow', async () => {\n    // Mock iPhone user agent\n    mockUserAgent('Mozilla/5.0 (iPhone; CPU iPhone OS 14_0 like Mac OS X)');\n    \n    // Start with no previous choice\n    localStorage.clear();\n    \n    render(\n      <LanguageProvider>\n        <MobileRedirectProvider forceShow={true}>\n          <TestComponent />\n          <MobileDownloadPrompt />\n          <AppDownloadLanding />\n        </MobileRedirectProvider>\n      </LanguageProvider>\n    );\n    \n    // Should detect mobile device\n    await waitFor(() => {\n      expect(screen.getByTestId('device-type')).toHaveTextContent('mobile');\n    });\n    \n    // Should show prompts for new users\n    await waitFor(() => {\n      expect(screen.getByText('Get the LusoTown App')).toBeInTheDocument();\n    });\n  });\n});\n\n// Mock analytics tracking\ndescribe('Analytics Tracking', () => {\n  beforeEach(() => {\n    (window as any).gtag = jest.fn();\n  });\n\n  test('tracks download attempts', () => {\n    mockUserAgent('Mozilla/5.0 (iPhone; CPU iPhone OS 14_0 like Mac OS X)');\n    \n    const detector = MobileDeviceDetector.getInstance();\n    detector.trackDownloadChoice('download_app', 'ios');\n    \n    // Should have stored the choice\n    const choice = detector.getPreviousDownloadChoice();\n    expect(choice?.choice).toBe('download_app');\n    expect(choice?.platform).toBe('ios');\n  });\n});"],"names":["jest","mock","fn","mockUserAgent","userAgent","Object","defineProperty","navigator","value","configurable","mockLocalStorage","storage","getItem","key","setItem","removeItem","clear","keys","forEach","window","TestComponent","deviceInfo","showDownloadPrompt","showLandingPage","triggerAppDownload","dismissPrompt","useMobileRedirect","div","data-testid","isMobile","isTablet","button","onClick","describe","detector","beforeEach","MobileDeviceDetector","getInstance","resetCache","afterEach","clearAllMocks","test","getDeviceInfo","expect","toBe","isIOS","isAndroid","isDesktop","url","getAppStoreUrl","MOBILE_APP_CONFIG","stores","ios","android","trackDownloadChoice","choice","getPreviousDownloadChoice","toBeTruthy","platform","shouldShow","shouldShowDownloadPrompt","renderWithLanguageProvider","component","render","LanguageProvider","MobileRedirectProvider","localStorage","waitFor","screen","getByTestId","toHaveTextContent","mockOpen","spyOn","mockImplementation","fireEvent","click","toHaveBeenCalledWith","mockRestore","renderPrompt","forceShow","MobileDownloadPrompt","getByText","toBeInTheDocument","renderLanding","AppDownloadLanding","culturalElements","document","querySelectorAll","length","toBeGreaterThan","testimonials","renderWithPortuguese","defaultLanguage","features","toHaveLength","eventsFeature","find","f","id","toBeDefined","title","en","pt","stats","totalMembers","portugueseEvents","universityPartners","testing","enabled","variants","gtag"],"mappings":"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"}