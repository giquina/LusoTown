{"version":3,"sources":["/workspaces/LusoTown/web-app/src/config/credentials.ts"],"sourcesContent":["/**\n * Secure credential configuration for LusoTown platform\n * \n * SECURITY WARNING: Never commit actual credentials to version control.\n * This file manages environment variable access with secure fallbacks.\n * \n * Security Features:\n * - Environment variable validation\n * - Secure defaults that fail safe\n * - Runtime security checks\n * - Lusophone community specific validation\n */\n\n// Security validation functions\nfunction validateEnvironmentSecurity(): void {\n  if (typeof window === 'undefined') {\n    // Server-side security validation\n    const isBuildPhase = process.env.NEXT_PHASE === 'phase-production-build'\n    const requiredEnvVars = [\n      'DEMO_EMAIL',\n      'DEMO_PASSWORD',\n      'ADMIN_EMAIL_DOMAIN',\n      'NEXT_PUBLIC_SUPABASE_URL',\n      'NEXT_PUBLIC_SUPABASE_ANON_KEY'\n    ]\n    \n    const missingVars = requiredEnvVars.filter(varName => !process.env[varName])\n    \n    if (missingVars.length > 0) {\n      console.error('SECURITY ERROR: Missing required environment variables:', missingVars)\n      \n      // Do not fail the build step; enforce at runtime only\n      if (process.env.NODE_ENV === 'production' && !isBuildPhase) {\n        throw new Error(`Missing critical environment variables: ${missingVars.join(', ')}`)\n      }\n    }\n  }\n}\n\n// Run security validation on module load\nvalidateEnvironmentSecurity()\n\n// Secure demo system configuration\nexport const DEMO_CONFIG = {\n  get email(): string {\n    const email = process.env.DEMO_EMAIL\n    if (!email) {\n      if (process.env.NODE_ENV === 'production') {\n        throw new Error('Demo email not configured in production')\n      }\n      return ''\n    }\n    return email\n  },\n  \n  get password(): string {\n    const password = process.env.DEMO_PASSWORD\n    if (!password) {\n      if (process.env.NODE_ENV === 'production') {\n        throw new Error('Demo password not configured in production')\n      }\n      return ''\n    }\n    return password\n  },\n  \n  get userId(): string {\n    return process.env.DEMO_USER_ID || 'demo-user-secure-id'\n  },\n  \n  // Security metadata\n  get isConfigured(): boolean {\n    return !!(process.env.DEMO_EMAIL && process.env.DEMO_PASSWORD)\n  }\n} as const;\n\n// Enhanced admin system configuration\nexport const ADMIN_CONFIG = {\n  get emailDomain(): string {\n    const domain = process.env.ADMIN_EMAIL_DOMAIN\n    if (!domain && process.env.NODE_ENV === 'production') {\n      throw new Error('Admin email domain not configured in production')\n    }\n    return domain || ''\n  },\n  \n  get isConfigured(): boolean {\n    return !!process.env.ADMIN_EMAIL_DOMAIN\n  },\n  \n  // Additional admin security\n  get allowedDomains(): string[] {\n    const domains = process.env.ADMIN_ALLOWED_DOMAINS\n    return domains ? domains.split(',').map(d => d.trim()) : []\n  }\n} as const;\n\n// Secure test display credentials (non-functional, UI display only)\nexport const TEST_DISPLAY_CONFIG = {\n  email: process.env.NEXT_PUBLIC_TEST_DISPLAY_EMAIL || 'demo@example.com',\n  password: process.env.NEXT_PUBLIC_TEST_DISPLAY_PASSWORD || '••••••••',\n} as const;\n\n// Validation functions\nexport const validateDemoCredentials = (email: string, password: string): boolean => {\n  // Fallback demo credentials for development\n  const fallbackEmail = 'demo@lusotown.com';\n  const fallbackPassword = 'LusoTown2025!';\n  \n  // Try environment variables first, fallback to hardcoded for development\n  const demoEmail = DEMO_CONFIG.email || fallbackEmail;\n  const demoPassword = DEMO_CONFIG.password || fallbackPassword;\n  \n  return (\n    email.trim().toLowerCase() === demoEmail.toLowerCase() &&\n    password === demoPassword\n  );\n};\n\nexport const isAdminEmail = (email: string): boolean => {\n  if (!ADMIN_CONFIG.emailDomain) {\n    console.warn('Admin email domain not configured. Set ADMIN_EMAIL_DOMAIN environment variable.');\n    return false;\n  }\n  \n  return email.includes(ADMIN_CONFIG.emailDomain);\n};\n\n// Security checks\nif (typeof window === 'undefined') {\n  // Server-side security validation\n  if (!process.env.DEMO_EMAIL || !process.env.DEMO_PASSWORD) {\n    console.warn('SECURITY: Demo credentials not set in environment variables');\n  }\n  \n  if (!process.env.ADMIN_EMAIL_DOMAIN) {\n    console.warn('SECURITY: Admin email domain not configured');\n  }\n}"],"names":["ADMIN_CONFIG","DEMO_CONFIG","TEST_DISPLAY_CONFIG","isAdminEmail","validateDemoCredentials","validateEnvironmentSecurity","window","isBuildPhase","process","env","NEXT_PHASE","requiredEnvVars","missingVars","filter","varName","length","console","error","NODE_ENV","Error","join","email","DEMO_EMAIL","password","DEMO_PASSWORD","userId","DEMO_USER_ID","isConfigured","emailDomain","domain","ADMIN_EMAIL_DOMAIN","allowedDomains","domains","ADMIN_ALLOWED_DOMAINS","split","map","d","trim","NEXT_PUBLIC_TEST_DISPLAY_EMAIL","NEXT_PUBLIC_TEST_DISPLAY_PASSWORD","fallbackEmail","fallbackPassword","demoEmail","demoPassword","toLowerCase","warn","includes"],"mappings":"AAAA;;;;;;;;;;;CAWC,GAED,gCAAgC;;;;;;;;;;;;IAgEnBA,YAAY;eAAZA;;IAlCAC,WAAW;eAAXA;;IAuDAC,mBAAmB;eAAnBA;;IAqBAC,YAAY;eAAZA;;IAfAC,uBAAuB;eAAvBA;;;AA1Fb,SAASC;IACP,IAAI,OAAOC,WAAW,aAAa;QACjC,kCAAkC;QAClC,MAAMC,eAAeC,QAAQC,GAAG,CAACC,UAAU,KAAK;QAChD,MAAMC,kBAAkB;YACtB;YACA;YACA;YACA;YACA;SACD;QAED,MAAMC,cAAcD,gBAAgBE,MAAM,CAACC,CAAAA,UAAW,CAACN,QAAQC,GAAG,CAACK,QAAQ;QAE3E,IAAIF,YAAYG,MAAM,GAAG,GAAG;YAC1BC,QAAQC,KAAK,CAAC,2DAA2DL;YAEzE,sDAAsD;YACtD,IAAIJ,QAAQC,GAAG,CAACS,QAAQ,KAAK,gBAAgB,CAACX,cAAc;gBAC1D,MAAM,IAAIY,MAAM,CAAC,wCAAwC,EAAEP,YAAYQ,IAAI,CAAC,MAAM,CAAC;YACrF;QACF;IACF;AACF;AAEA,yCAAyC;AACzCf;AAGO,MAAMJ,cAAc;IACzB,IAAIoB,SAAgB;QAClB,MAAMA,QAAQb,QAAQC,GAAG,CAACa,UAAU;QACpC,IAAI,CAACD,OAAO;YACV,IAAIb,QAAQC,GAAG,CAACS,QAAQ,KAAK,cAAc;gBACzC,MAAM,IAAIC,MAAM;YAClB;YACA,OAAO;QACT;QACA,OAAOE;IACT;IAEA,IAAIE,YAAmB;QACrB,MAAMA,WAAWf,QAAQC,GAAG,CAACe,aAAa;QAC1C,IAAI,CAACD,UAAU;YACb,IAAIf,QAAQC,GAAG,CAACS,QAAQ,KAAK,cAAc;gBACzC,MAAM,IAAIC,MAAM;YAClB;YACA,OAAO;QACT;QACA,OAAOI;IACT;IAEA,IAAIE,UAAiB;QACnB,OAAOjB,QAAQC,GAAG,CAACiB,YAAY,IAAI;IACrC;IAEA,oBAAoB;IACpB,IAAIC,gBAAwB;QAC1B,OAAO,CAAC,CAAEnB,CAAAA,QAAQC,GAAG,CAACa,UAAU,IAAId,QAAQC,GAAG,CAACe,aAAa,AAAD;IAC9D;AACF;AAGO,MAAMxB,eAAe;IAC1B,IAAI4B,eAAsB;QACxB,MAAMC,SAASrB,QAAQC,GAAG,CAACqB,kBAAkB;QAC7C,IAAI,CAACD,UAAUrB,QAAQC,GAAG,CAACS,QAAQ,KAAK,cAAc;YACpD,MAAM,IAAIC,MAAM;QAClB;QACA,OAAOU,UAAU;IACnB;IAEA,IAAIF,gBAAwB;QAC1B,OAAO,CAAC,CAACnB,QAAQC,GAAG,CAACqB,kBAAkB;IACzC;IAEA,4BAA4B;IAC5B,IAAIC,kBAA2B;QAC7B,MAAMC,UAAUxB,QAAQC,GAAG,CAACwB,qBAAqB;QACjD,OAAOD,UAAUA,QAAQE,KAAK,CAAC,KAAKC,GAAG,CAACC,CAAAA,IAAKA,EAAEC,IAAI,MAAM,EAAE;IAC7D;AACF;AAGO,MAAMnC,sBAAsB;IACjCmB,OAAOb,QAAQC,GAAG,CAAC6B,8BAA8B,IAAI;IACrDf,UAAUf,QAAQC,GAAG,CAAC8B,iCAAiC,IAAI;AAC7D;AAGO,MAAMnC,0BAA0B,CAACiB,OAAeE;IACrD,4CAA4C;IAC5C,MAAMiB,gBAAgB;IACtB,MAAMC,mBAAmB;IAEzB,yEAAyE;IACzE,MAAMC,YAAYzC,YAAYoB,KAAK,IAAImB;IACvC,MAAMG,eAAe1C,YAAYsB,QAAQ,IAAIkB;IAE7C,OACEpB,MAAMgB,IAAI,GAAGO,WAAW,OAAOF,UAAUE,WAAW,MACpDrB,aAAaoB;AAEjB;AAEO,MAAMxC,eAAe,CAACkB;IAC3B,IAAI,CAACrB,aAAa4B,WAAW,EAAE;QAC7BZ,QAAQ6B,IAAI,CAAC;QACb,OAAO;IACT;IAEA,OAAOxB,MAAMyB,QAAQ,CAAC9C,aAAa4B,WAAW;AAChD;AAEA,kBAAkB;AAClB,IAAI,OAAOtB,WAAW,aAAa;IACjC,kCAAkC;IAClC,IAAI,CAACE,QAAQC,GAAG,CAACa,UAAU,IAAI,CAACd,QAAQC,GAAG,CAACe,aAAa,EAAE;QACzDR,QAAQ6B,IAAI,CAAC;IACf;IAEA,IAAI,CAACrC,QAAQC,GAAG,CAACqB,kBAAkB,EAAE;QACnCd,QAAQ6B,IAAI,CAAC;IACf;AACF"}