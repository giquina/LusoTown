58512165e57c39ecd1616a0c5ab2a4e9
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return LusoBotChat;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _logger = /*#__PURE__*/ _interop_require_default(require("../utils/logger"));
const _framermotion = require("framer-motion");
const _outline = require("@heroicons/react/24/outline");
const _solid = require("@heroicons/react/24/solid");
const _LanguageContext = require("../context/LanguageContext");
const _SubscriptionContext = require("../context/SubscriptionContext");
const _lusobotengine = require("../lib/lusobot-engine");
const _reacthottoast = require("react-hot-toast");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function SaudadeMeter({ emotionalTone, language }) {
    const { saudade, nostalgia, hope, community, heritage } = emotionalTone;
    const emotions = [
        {
            key: "saudade",
            value: saudade,
            label: language === "pt" ? "Saudade" : "Longing",
            color: "from-blue-400 to-indigo-600"
        },
        {
            key: "nostalgia",
            value: nostalgia,
            label: language === "pt" ? "Nostalgia" : "Nostalgia",
            color: "from-purple-400 to-pink-600"
        },
        {
            key: "hope",
            value: hope,
            label: language === "pt" ? "Esperan\xe7a" : "Hope",
            color: "from-green-400 to-emerald-600"
        },
        {
            key: "community",
            value: community,
            label: language === "pt" ? "Comunidade" : "Community",
            color: "from-orange-400 to-red-600"
        },
        {
            key: "heritage",
            value: heritage,
            label: language === "pt" ? "Patrim\xf3nio" : "Heritage",
            color: "from-amber-400 to-yellow-600"
        }
    ];
    const hasSignificantEmotions = emotions.some((emotion)=>emotion.value > 0.3);
    if (!hasSignificantEmotions) return null;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_framermotion.motion.div, {
        initial: {
            opacity: 0,
            y: 10
        },
        animate: {
            opacity: 1,
            y: 0
        },
        className: "bg-gradient-to-r from-primary-50 to-secondary-50 rounded-xl p-4 mb-4",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex items-center gap-2 mb-3",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_solid.HeartIcon, {
                        className: "w-4 h-4 text-primary-600"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                        className: "text-sm font-medium text-primary-900",
                        children: language === "pt" ? "Tom Emocional Detectado" : "Emotional Tone Detected"
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "space-y-2",
                children: emotions.filter((emotion)=>emotion.value > 0.1).map((emotion)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center gap-3",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                className: "text-xs font-medium text-gray-700 w-20 text-right",
                                children: emotion.label
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "flex-1 bg-gray-200 rounded-full h-2 overflow-hidden",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_framermotion.motion.div, {
                                    initial: {
                                        width: 0
                                    },
                                    animate: {
                                        width: `${emotion.value * 100}%`
                                    },
                                    transition: {
                                        duration: 0.8,
                                        ease: "easeOut"
                                    },
                                    className: `h-full bg-gradient-to-r ${emotion.color} rounded-full`
                                })
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                className: "text-xs text-gray-500 w-8",
                                children: [
                                    Math.round(emotion.value * 100),
                                    "%"
                                ]
                            })
                        ]
                    }, emotion.key))
            })
        ]
    });
}
function SuggestionCard({ suggestion, onSelect, language }) {
    const getIcon = ()=>{
        switch(suggestion.type){
            case "event":
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.CalendarDaysIcon, {
                    className: "w-5 h-5"
                });
            case "business":
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.BuildingStorefrontIcon, {
                    className: "w-5 h-5"
                });
            case "community":
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.UserGroupIcon, {
                    className: "w-5 h-5"
                });
            case "language":
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.LanguageIcon, {
                    className: "w-5 h-5"
                });
            case "resource":
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.AcademicCapIcon, {
                    className: "w-5 h-5"
                });
            default:
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.SparklesIcon, {
                    className: "w-5 h-5"
                });
        }
    };
    const getPriorityColor = ()=>{
        switch(suggestion.priority){
            case "high":
                return "border-l-primary-500 bg-primary-50";
            case "medium":
                return "border-l-secondary-500 bg-secondary-50";
            case "low":
                return "border-l-gray-400 bg-gray-50";
        }
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_framermotion.motion.button, {
        initial: {
            opacity: 0,
            x: 20
        },
        animate: {
            opacity: 1,
            x: 0
        },
        whileHover: {
            scale: 1.02
        },
        whileTap: {
            scale: 0.98
        },
        onClick: ()=>onSelect(suggestion),
        className: `w-full text-left p-3 rounded-lg border-l-4 ${getPriorityColor()} 
        hover:shadow-md transition-all duration-200 group`,
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: "flex items-start gap-3",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "text-primary-600 group-hover:text-primary-700 transition-colors",
                    children: getIcon()
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex-1 min-w-0",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                            className: "font-medium text-gray-900 text-sm group-hover:text-primary-900 transition-colors",
                            children: suggestion.title
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                            className: "text-xs text-gray-600 mt-1 line-clamp-2",
                            children: suggestion.description
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center gap-2 mt-2",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                    className: `text-xs px-2 py-0.5 rounded-full ${getPriorityColor()}`,
                                    children: suggestion.priority === "high" ? language === "pt" ? "Alta" : "High" : suggestion.priority === "medium" ? language === "pt" ? "M\xe9dia" : "Medium" : language === "pt" ? "Baixa" : "Low"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                    className: "text-xs text-gray-500",
                                    children: [
                                        Math.round(suggestion.culturalRelevance * 100),
                                        "%",
                                        " ",
                                        language === "pt" ? "relevante" : "relevant"
                                    ]
                                })
                            ]
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.ArrowTopRightOnSquareIcon, {
                    className: "w-4 h-4 text-gray-400 group-hover:text-primary-600 transition-colors"
                })
            ]
        })
    });
}
function MessageBubble({ message, language, isLatest }) {
    const isBot = message.role === "assistant";
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_framermotion.motion.div, {
        initial: {
            opacity: 0,
            y: 20,
            scale: 0.95
        },
        animate: {
            opacity: 1,
            y: 0,
            scale: 1
        },
        transition: {
            duration: 0.3
        },
        className: `flex ${isBot ? "justify-start" : "justify-end"} mb-4`,
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: `max-w-[85%] ${isBot ? "order-2" : "order-1"}`,
            children: [
                isBot && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center gap-2 mb-2",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "w-8 h-8 bg-gradient-to-r from-primary-500 to-secondary-500 rounded-full flex items-center justify-center",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                className: "text-white font-bold text-sm",
                                children: "\uD83C\uDDF5\uD83C\uDDF9"
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                            className: "text-xs font-medium text-gray-600",
                            children: "LusoBot"
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: `
          rounded-2xl px-4 py-3 shadow-sm
          ${isBot ? "bg-white border border-gray-100 text-gray-900" : "bg-gradient-to-r from-primary-500 to-secondary-500 text-white"}
        `,
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                            className: "text-sm leading-relaxed whitespace-pre-wrap",
                            children: message.content
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: `text-xs mt-2 ${isBot ? "text-gray-500" : "text-white/80"}`,
                            children: message.timestamp.toLocaleTimeString(language === "pt" ? "pt-PT" : "en-GB", {
                                hour: "2-digit",
                                minute: "2-digit"
                            })
                        })
                    ]
                }),
                isBot && message.emotionalTone && isLatest && /*#__PURE__*/ (0, _jsxruntime.jsx)(SaudadeMeter, {
                    emotionalTone: message.emotionalTone,
                    language: language
                })
            ]
        })
    });
}
function LusoBotChat({ className = "", isEmbedded = false, onClose }) {
    const { language, t } = (0, _LanguageContext.useLanguage)();
    const { hasActiveSubscription } = (0, _SubscriptionContext.useSubscription)();
    const [session, setSession] = (0, _react.useState)(null);
    const [messages, setMessages] = (0, _react.useState)([]);
    const [inputValue, setInputValue] = (0, _react.useState)("");
    const [isLoading, setIsLoading] = (0, _react.useState)(false);
    const [suggestions, setSuggestions] = (0, _react.useState)([]);
    const [isListening, setIsListening] = (0, _react.useState)(false);
    const [isDarkMode, setIsDarkMode] = (0, _react.useState)(false);
    const messagesEndRef = (0, _react.useRef)(null);
    const inputRef = (0, _react.useRef)(null);
    const scrollContainerRef = (0, _react.useRef)(null);
    const [stickToBottom, setStickToBottom] = (0, _react.useState)(true);
    // Initialize chat session
    (0, _react.useEffect)(()=>{
        const userContext = {
            userRegion: "diaspora_uk",
            communityLevel: hasActiveSubscription ? "active" : "newcomer",
            languageProficiency: language === "pt" ? "native" : "learning",
            interests: [
                "community",
                "culture",
                "events"
            ],
            mood: "curious"
        };
        const newSession = new _lusobotengine.LusoBotSession(userContext, language);
        setSession(newSession);
        setMessages(newSession.getMessages());
    }, [
        language,
        hasActiveSubscription
    ]);
    // Auto-scroll to bottom when stickToBottom is true
    (0, _react.useEffect)(()=>{
        if (stickToBottom) {
            messagesEndRef.current?.scrollIntoView({
                behavior: "smooth"
            });
        }
    }, [
        messages,
        stickToBottom
    ]);
    // Track user scroll to toggle stickToBottom
    const handleScroll = (0, _react.useCallback)(()=>{
        const el = scrollContainerRef.current;
        if (!el) return;
        const threshold = 48; // px from bottom counts as at-bottom
        const atBottom = el.scrollHeight - el.scrollTop - el.clientHeight <= threshold;
        setStickToBottom(atBottom);
    }, []);
    // Update suggestions when messages change
    (0, _react.useEffect)(()=>{
        const latestMessage = messages[messages.length - 1];
        if (latestMessage && latestMessage.role === "assistant" && latestMessage.suggestions) {
            setSuggestions(latestMessage.suggestions);
        }
    }, [
        messages
    ]);
    const handleSendMessage = (0, _react.useCallback)(async ()=>{
        if (!inputValue.trim() || !session || isLoading) return;
        const messageContent = inputValue.trim();
        setInputValue("");
        setIsLoading(true);
        try {
            const response = await session.sendMessage(messageContent);
            setMessages(session.getMessages());
            // Show success feedback for emotional support
            if (response.emotionalTone && response.emotionalTone.saudade > 0.5) {
                _reacthottoast.toast.success(language === "pt" ? "Estou aqui para te apoiar \uD83D\uDC99" : "I'm here to support you \uD83D\uDC99");
            }
        } catch (error) {
            _logger.default.error("Error sending message:", error);
            _reacthottoast.toast.error(language === "pt" ? "Erro ao enviar mensagem. Tenta novamente." : "Error sending message. Please try again.");
        } finally{
            setIsLoading(false);
        }
    }, [
        inputValue,
        session,
        isLoading,
        language
    ]);
    const handleKeyPress = (0, _react.useCallback)((e)=>{
        if (e.key === "Enter" && !e.shiftKey) {
            e.preventDefault();
            handleSendMessage();
        }
    }, [
        handleSendMessage
    ]);
    const handleSuggestionSelect = (0, _react.useCallback)(async (suggestion)=>{
        if (suggestion.link) {
            window.open(suggestion.link, "_blank");
            return;
        }
        // Handle different suggestion actions
        switch(suggestion.action){
            case "speak":
                if (suggestion.voicePersonality && session) {
                    try {
                        await session.enableVoiceInteraction(suggestion.voicePersonality);
                        const voiceMessage = language === "pt" ? `Voz cultural ativada! Agora posso falar contigo com personalidade ${suggestion.title}.` : `Cultural voice activated! I can now speak with you using ${suggestion.title} personality.`;
                        // Speak the activation message
                        await session.speakMessage(voiceMessage, "warm");
                        _reacthottoast.toast.success(language === "pt" ? "Voz cultural ativada! \uD83C\uDFB5" : "Cultural voice activated! \uD83C\uDFB5");
                    } catch (error) {
                        _reacthottoast.toast.error(language === "pt" ? "Erro ao ativar voz. Verifique as permiss\xf5es do microfone." : "Error activating voice. Please check microphone permissions.");
                    }
                }
                break;
            case "learn":
                if (suggestion.type === "language" && session) {
                    try {
                        const lesson = await session.getPersonalizedLesson(suggestion.title);
                        if (lesson) {
                            setInputValue(language === "pt" ? `Quero aprender: ${lesson.title[language]}` : `I want to learn: ${lesson.title[language]}`);
                            _reacthottoast.toast.success(language === "pt" ? "Li\xe7\xe3o personalizada encontrada! \uD83D\uDCDA" : "Personalized lesson found! \uD83D\uDCDA");
                        }
                    } catch (error) {
                        _logger.default.error("Error loading lesson:", error);
                    }
                } else {
                    setInputValue(language === "pt" ? `Ensina-me sobre: ${suggestion.title}` : `Teach me about: ${suggestion.title}`);
                }
                break;
            case "practice":
                setInputValue(language === "pt" ? `Quero praticar: ${suggestion.title}` : `I want to practice: ${suggestion.title}`);
                break;
            case "support":
                setInputValue(language === "pt" ? `Preciso de apoio com: ${suggestion.title}` : `I need support with: ${suggestion.title}`);
                break;
            case "connect":
                if (suggestion.link) {
                    window.open(suggestion.link, "_blank");
                } else {
                    setInputValue(language === "pt" ? `Como posso conectar-me: ${suggestion.title}` : `How can I connect: ${suggestion.title}`);
                }
                break;
            default:
                // Fallback to original behavior
                setInputValue(language === "pt" ? `Conte-me mais sobre: ${suggestion.title}` : `Tell me more about: ${suggestion.title}`);
        }
        inputRef.current?.focus();
    }, [
        language,
        session
    ]);
    const handleVoiceInput = (0, _react.useCallback)(()=>{
        if (!("webkitSpeechRecognition" in window)) {
            _reacthottoast.toast.error(language === "pt" ? "Reconhecimento de voz n\xe3o suportado neste navegador" : "Voice recognition not supported in this browser");
            return;
        }
        setIsListening(true);
        const recognition = new window.webkitSpeechRecognition();
        // Enhanced language detection based on user context
        const userRegion = session?.getCulturalProfile()?.region || "portugal";
        recognition.lang = language === "pt" ? userRegion.includes("brasil") ? "pt-BR" : "pt-PT" : "en-GB";
        recognition.continuous = false;
        recognition.interimResults = true;
        recognition.maxAlternatives = 3; // Get multiple alternatives for better accuracy
        recognition.onresult = (event)=>{
            let interimTranscript = "";
            let finalTranscript = "";
            for(let i = event.resultIndex; i < event.results.length; ++i){
                const transcript = event.results[i][0].transcript;
                if (event.results[i].isFinal) {
                    finalTranscript += transcript;
                } else {
                    interimTranscript += transcript;
                }
            }
            if (finalTranscript) {
                setInputValue(finalTranscript.trim());
                setIsListening(false);
                // Auto-send message if voice input is complete
                if (finalTranscript.trim()) {
                    setTimeout(()=>handleSendMessage(), 500);
                }
                // Provide pronunciation feedback for language learners
                if (session && session.getCulturalProfile()?.languageLevel !== "native") {
                    session.assessPronunciation(finalTranscript.trim()).then((assessment)=>{
                        if (assessment.accuracy > 0.8) {
                            _reacthottoast.toast.success(language === "pt" ? `Boa pronúncia! ${Math.round(assessment.accuracy * 100)}% acerto` : `Good pronunciation! ${Math.round(assessment.accuracy * 100)}% accuracy`);
                        }
                    }).catch(_logger.default.error);
                }
            }
        };
        recognition.onerror = (event)=>{
            setIsListening(false);
            const errorMessages = {
                network: language === "pt" ? "Erro de rede. Verifique sua conex\xe3o." : "Network error. Check your connection.",
                "not-allowed": language === "pt" ? "Permiss\xe3o negada. Active o microfone." : "Permission denied. Please enable microphone.",
                "no-speech": language === "pt" ? "Nenhuma fala detectada. Tente novamente." : "No speech detected. Please try again.",
                "audio-capture": language === "pt" ? "Microfone n\xe3o dispon\xedvel." : "Microphone not available.",
                "language-not-supported": language === "pt" ? "Idioma n\xe3o suportado." : "Language not supported."
            };
            const message = errorMessages[event.error] || (language === "pt" ? "Erro no reconhecimento de voz" : "Voice recognition error");
            _reacthottoast.toast.error(message);
        };
        recognition.onend = ()=>{
            setIsListening(false);
        };
        // Provide user feedback about voice activation
        _reacthottoast.toast.info(language === "pt" ? `Fale agora em ${recognition.lang}... 🎤` : `Speak now in ${recognition.lang}... 🎤`);
        recognition.start();
    }, [
        language,
        session,
        handleSendMessage
    ]);
    const quickStarters = [
        {
            pt: "Sou novo no Reino Unido. Por onde come\xe7o?",
            en: "I'm new to the UK. Where do I start?",
            category: "newcomer",
            icon: "\uD83C\uDDEC\uD83C\uDDE7"
        },
        {
            pt: "Tenho saudades de casa. Como posso lidar com isso?",
            en: "I miss home. How can I deal with this?",
            category: "emotional",
            icon: "\uD83D\uDC99"
        },
        {
            pt: "Quero praticar portugu\xeas com sotaque aut\xeantico",
            en: "I want to practice Portuguese with authentic accent",
            category: "language",
            icon: "\uD83D\uDDE3️"
        },
        {
            pt: "Ativa a voz cultural portuguesa para conversarmos",
            en: "Activate Portuguese cultural voice to chat",
            category: "voice",
            icon: "\uD83C\uDFB5"
        },
        {
            pt: "Ensina-me tradi\xe7\xf5es portuguesas importantes",
            en: "Teach me important Portuguese traditions",
            category: "cultural",
            icon: "\uD83C\uDDF5\uD83C\uDDF9"
        },
        {
            pt: "Quero encontrar eventos portugueses este fim de semana",
            en: "Find Portuguese events this weekend",
            category: "events",
            icon: "\uD83D\uDCC5"
        },
        {
            pt: "Como posso melhorar a minha pronuncia\xe7\xe3o?",
            en: "How can I improve my pronunciation?",
            category: "learning",
            icon: "\uD83D\uDCDA"
        },
        {
            pt: "Preciso de apoio emocional com contexto cultural",
            en: "I need emotional support with cultural context",
            category: "therapeutic",
            icon: "\uD83E\uDD17"
        },
        {
            pt: "Quero encontrar outros portugueses/brasileiros na minha \xe1rea",
            en: "Find other Portuguese/Brazilians in my area",
            category: "community",
            icon: "\uD83D\uDC65"
        },
        {
            pt: "Neg\xf3cios portugueses: restaurantes, servi\xe7os, profissionais",
            en: "Portuguese businesses: restaurants, services, professionals",
            category: "business",
            icon: "\uD83C\uDFE2"
        }
    ];
    if (!session) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: `flex items-center justify-center p-8 ${className}`,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "animate-spin w-8 h-8 border-4 border-primary-500 border-t-transparent rounded-full"
            })
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: `
      ${isEmbedded ? "h-full" : "h-screen max-h-screen"} 
      bg-gradient-to-br from-gray-50 to-primary-50 
      flex flex-col
      ${className}
    `,
        style: {
            overflow: "hidden",
            maxHeight: isEmbedded ? "100%" : "100vh"
        },
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "bg-white shadow-sm border-b border-gray-100 p-4 flex-shrink-0",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center justify-between",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center gap-3",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "w-10 h-10 bg-gradient-to-r from-primary-500 to-secondary-500 rounded-xl flex items-center justify-center",
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                            className: "text-white font-bold",
                                            children: "\uD83C\uDDF5\uD83C\uDDF9"
                                        })
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("h1", {
                                                className: "font-bold text-gray-900 flex items-center gap-2",
                                                children: [
                                                    "LusoBot",
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.SparklesIcon, {
                                                        className: "w-4 h-4 text-primary-500"
                                                    })
                                                ]
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                className: "text-xs text-gray-600",
                                                children: language === "pt" ? "Assistente Cultural Portugu\xeas" : "Portuguese-speaking Cultural Assistant"
                                            })
                                        ]
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center gap-2",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                        onClick: ()=>setIsDarkMode(!isDarkMode),
                                        className: "p-2 text-gray-500 hover:text-gray-700 rounded-lg hover:bg-gray-100 transition-colors",
                                        children: isDarkMode ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.SunIcon, {
                                            className: "w-5 h-5"
                                        }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.MoonIcon, {
                                            className: "w-5 h-5"
                                        })
                                    }),
                                    onClose && /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                        onClick: onClose,
                                        className: "p-2 text-gray-500 hover:text-gray-700 rounded-lg hover:bg-gray-100 transition-colors",
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.XMarkIcon, {
                                            className: "w-5 h-5"
                                        })
                                    })
                                ]
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "mt-3 flex items-center gap-2 text-xs text-gray-600",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.LanguageIcon, {
                                className: "w-3 h-3"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                children: language === "pt" ? "Conversando em Portugu\xeas" : "Chatting in English"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "w-2 h-2 bg-green-500 rounded-full animate-pulse"
                            })
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                ref: scrollContainerRef,
                onScroll: handleScroll,
                className: "flex-1 p-4 space-y-1 min-h-0",
                style: {
                    overflowY: "auto",
                    WebkitOverflowScrolling: "touch"
                },
                "data-lusobot-chat-container": true,
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_framermotion.AnimatePresence, {
                        children: messages.map((message, index)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(MessageBubble, {
                                message: message,
                                language: language,
                                isLatest: index === messages.length - 1
                            }, message.id))
                    }),
                    isLoading && /*#__PURE__*/ (0, _jsxruntime.jsx)(_framermotion.motion.div, {
                        initial: {
                            opacity: 0
                        },
                        animate: {
                            opacity: 1
                        },
                        className: "flex justify-start mb-4",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "bg-white rounded-2xl px-4 py-3 shadow-sm border border-gray-100",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center gap-2",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "flex gap-1",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                className: "w-2 h-2 bg-primary-400 rounded-full animate-bounce"
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                className: "w-2 h-2 bg-primary-400 rounded-full animate-bounce",
                                                style: {
                                                    animationDelay: "0.1s"
                                                }
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                className: "w-2 h-2 bg-primary-400 rounded-full animate-bounce",
                                                style: {
                                                    animationDelay: "0.2s"
                                                }
                                            })
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                        className: "text-xs text-gray-500",
                                        children: language === "pt" ? "LusoBot est\xe1 a pensar..." : "LusoBot is thinking..."
                                    })
                                ]
                            })
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        ref: messagesEndRef
                    })
                ]
            }),
            !stickToBottom && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "pointer-events-none absolute bottom-24 right-4 z-10",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                    className: "pointer-events-auto px-3 py-2 rounded-full bg-white shadow border border-gray-200 text-xs text-gray-700 hover:bg-gray-50",
                    onClick: ()=>{
                        setStickToBottom(true);
                        messagesEndRef.current?.scrollIntoView({
                            behavior: "smooth"
                        });
                    },
                    children: "Jump to latest"
                })
            }),
            suggestions.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "border-t border-gray-200 bg-white p-4 flex-shrink-0",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("h3", {
                        className: "text-sm font-medium text-gray-900 mb-3 flex items-center gap-2",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.SparklesIcon, {
                                className: "w-4 h-4 text-primary-500"
                            }),
                            language === "pt" ? "Sugest\xf5es Personalizadas" : "Personalized Suggestions"
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "space-y-2 max-h-40 overflow-y-auto",
                        children: suggestions.map((suggestion, index)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(SuggestionCard, {
                                suggestion: suggestion,
                                onSelect: handleSuggestionSelect,
                                language: language
                            }, index))
                    })
                ]
            }),
            messages.length <= 1 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "border-t border-gray-200 bg-white p-4 flex-shrink-0",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("h3", {
                        className: "text-sm font-medium text-gray-900 mb-3 flex items-center gap-2",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.SparklesIcon, {
                                className: "w-4 h-4 text-primary-500"
                            }),
                            language === "pt" ? "Como Posso Ajudar-te Hoje?" : "How Can I Help You Today?"
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "space-y-3",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "text-xs text-gray-600 mb-2",
                                children: language === "pt" ? "Escolhe uma \xe1rea de apoio:" : "Choose a support area:"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-2",
                                children: quickStarters.slice(0, 6).map((starter, index)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                        onClick: ()=>setInputValue(starter[language]),
                                        className: "text-left p-3 rounded-lg bg-gradient-to-br from-gray-50 to-gray-100  hover:from-primary-50 hover:to-secondary-50 transition-all duration-200 text-sm text-gray-700 border border-gray-200 hover:border-primary-300 hover:shadow-sm group",
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "flex items-start gap-2",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                    className: "text-lg group-hover:scale-110 transition-transform",
                                                    children: starter.icon
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "flex-1 min-w-0",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                            className: "text-xs text-gray-500 uppercase tracking-wide mb-1",
                                                            children: starter.category
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                            className: "font-medium group-hover:text-primary-700 transition-colors leading-tight",
                                                            children: starter[language]
                                                        })
                                                    ]
                                                })
                                            ]
                                        })
                                    }, index))
                            }),
                            quickStarters.length > 6 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("details", {
                                className: "mt-3",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("summary", {
                                        className: "text-xs text-gray-500 cursor-pointer hover:text-primary-600 transition-colors",
                                        children: language === "pt" ? "Ver mais op\xe7\xf5es..." : "Show more options..."
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "grid grid-cols-1 sm:grid-cols-2 gap-2 mt-2",
                                        children: quickStarters.slice(6).map((starter, index)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                onClick: ()=>setInputValue(starter[language]),
                                                className: "text-left p-2 rounded-lg bg-gray-50 hover:bg-gray-100 transition-colors text-xs text-gray-600 border border-gray-200 hover:border-primary-300",
                                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "flex items-center gap-2",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                            className: "text-sm",
                                                            children: starter.icon
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                            children: starter[language]
                                                        })
                                                    ]
                                                })
                                            }, index + 6))
                                    })
                                ]
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "mt-4 pt-3 border-t border-gray-100",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "text-xs text-gray-500 flex items-center gap-2",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.MicrophoneIcon, {
                                    className: "w-3 h-3"
                                }),
                                language === "pt" ? "Dica: Clica no microfone para falar diretamente comigo!" : "Tip: Click the microphone to speak directly with me!"
                            ]
                        })
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "border-t border-gray-200 bg-white p-4 flex-shrink-0",
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex gap-3 items-end",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex-1",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "relative",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                            ref: inputRef,
                                            type: "text",
                                            value: inputValue,
                                            onChange: (e)=>setInputValue(e.target.value),
                                            onKeyPress: handleKeyPress,
                                            placeholder: language === "pt" ? "Escreve a tua mensagem..." : "Type your message...",
                                            disabled: isLoading,
                                            className: "w-full px-4 py-3 pr-12 border border-gray-300 rounded-2xl  focus:ring-2 focus:ring-primary-500 focus:border-transparent disabled:bg-gray-100 disabled:cursor-not-allowed text-sm",
                                            maxLength: 500
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                            onClick: handleVoiceInput,
                                            disabled: isLoading || isListening,
                                            className: `absolute right-3 top-1/2 transform -translate-y-1/2 p-1.5 rounded-lg
                  transition-colors ${isListening ? "bg-red-100 text-red-600" : "text-gray-500 hover:text-gray-700 hover:bg-gray-100"}`,
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.MicrophoneIcon, {
                                                className: `w-4 h-4 ${isListening ? "animate-pulse" : ""}`
                                            })
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "text-xs text-gray-500 mt-1 text-right",
                                    children: [
                                        inputValue.length,
                                        "/500"
                                    ]
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                            onClick: handleSendMessage,
                            disabled: !inputValue.trim() || isLoading,
                            className: "p-3 bg-gradient-to-r from-primary-500 to-secondary-500 text-white  rounded-2xl hover:from-primary-600 hover:to-secondary-600  disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 flex items-center justify-center min-w-[48px] min-h-[48px]",
                            children: isLoading ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin"
                            }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.PaperAirplaneIcon, {
                                className: "w-5 h-5"
                            })
                        })
                    ]
                })
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,