{"version":3,"sources":["/workspaces/LusoTown/web-app/src/hooks/useFocusManagement.ts"],"sourcesContent":["'use client'\n\nimport { useEffect, useRef, useCallback } from 'react'\n\nexport interface FocusableElement extends HTMLElement {\n  disabled?: boolean\n  tabIndex?: number\n}\n\nexport interface FocusManagementOptions {\n  restoreFocus?: boolean\n  initialFocus?: 'first' | 'last' | 'element'\n  initialFocusElement?: HTMLElement | (() => HTMLElement | null)\n  preventScroll?: boolean\n}\n\n/**\n * Custom hook for comprehensive focus management\n * Essential for modal dialogs, widgets, and keyboard navigation\n */\nexport function useFocusManagement(\n  containerRef: React.RefObject<HTMLElement>,\n  isActive: boolean,\n  options: FocusManagementOptions = {}\n) {\n  const {\n    restoreFocus = true,\n    initialFocus = 'first',\n    initialFocusElement,\n    preventScroll = false\n  } = options\n\n  const previouslyFocusedElementRef = useRef<HTMLElement | null>(null)\n  const isInitializedRef = useRef(false)\n\n  // Get all focusable elements within the container\n  const getFocusableElements = useCallback((container: HTMLElement): FocusableElement[] => {\n    const focusableSelectors = [\n      'button:not([disabled]):not([aria-hidden=\"true\"])',\n      'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden=\"true\"])',\n      'select:not([disabled]):not([aria-hidden=\"true\"])',\n      'textarea:not([disabled]):not([aria-hidden=\"true\"])',\n      'a[href]:not([aria-hidden=\"true\"])',\n      '[tabindex]:not([tabindex=\"-1\"]):not([disabled]):not([aria-hidden=\"true\"])',\n      'details:not([aria-hidden=\"true\"])',\n      'summary:not([aria-hidden=\"true\"])',\n      'iframe:not([aria-hidden=\"true\"])',\n      'object:not([aria-hidden=\"true\"])',\n      'embed:not([aria-hidden=\"true\"])',\n      '[contenteditable]:not([contenteditable=\"false\"]):not([aria-hidden=\"true\"])'\n    ].join(', ')\n\n    const elements = Array.from(\n      container.querySelectorAll<FocusableElement>(focusableSelectors)\n    )\n\n    // Filter out elements that are not actually focusable\n    return elements.filter(element => {\n      // Skip if disabled\n      if (element.disabled) return false\n      \n      // Skip if has negative tabindex (unless it's exactly -1, which we'll handle)\n      const tabIndex = element.tabIndex\n      if (tabIndex < -1) return false\n      \n      // Check if element is visible\n      const style = getComputedStyle(element)\n      if (style.display === 'none' || style.visibility === 'hidden') return false\n      \n      // Check if element has dimensions\n      const rect = element.getBoundingClientRect()\n      if (rect.width === 0 && rect.height === 0) return false\n      \n      return true\n    })\n  }, [])\n\n  // Focus the first focusable element\n  const focusFirst = useCallback(() => {\n    if (!containerRef.current) return false\n    \n    const focusableElements = getFocusableElements(containerRef.current)\n    if (focusableElements.length > 0) {\n      focusableElements[0].focus({ preventScroll })\n      return true\n    }\n    return false\n  }, [containerRef, getFocusableElements, preventScroll])\n\n  // Focus the last focusable element\n  const focusLast = useCallback(() => {\n    if (!containerRef.current) return false\n    \n    const focusableElements = getFocusableElements(containerRef.current)\n    if (focusableElements.length > 0) {\n      focusableElements[focusableElements.length - 1].focus({ preventScroll })\n      return true\n    }\n    return false\n  }, [containerRef, getFocusableElements, preventScroll])\n\n  // Focus a specific element\n  const focusElement = useCallback((element: HTMLElement | (() => HTMLElement | null)) => {\n    const targetElement = typeof element === 'function' ? element() : element\n    if (targetElement) {\n      targetElement.focus({ preventScroll })\n      return true\n    }\n    return false\n  }, [preventScroll])\n\n  // Handle keyboard navigation within the focus trap\n  const handleKeyDown = useCallback((event: KeyboardEvent) => {\n    if (!isActive || !containerRef.current) return\n\n    const { key, shiftKey, target } = event\n    \n    if (key === 'Tab') {\n      const focusableElements = getFocusableElements(containerRef.current)\n      \n      if (focusableElements.length === 0) {\n        event.preventDefault()\n        return\n      }\n\n      const firstElement = focusableElements[0]\n      const lastElement = focusableElements[focusableElements.length - 1]\n      const currentElement = target as HTMLElement\n\n      if (shiftKey) {\n        // Shift + Tab: moving backwards\n        if (currentElement === firstElement) {\n          event.preventDefault()\n          lastElement.focus({ preventScroll })\n        }\n      } else {\n        // Tab: moving forwards\n        if (currentElement === lastElement) {\n          event.preventDefault()\n          firstElement.focus({ preventScroll })\n        }\n      }\n    }\n\n    // Escape key handling for modals/widgets\n    if (key === 'Escape') {\n      // Let parent components handle escape if they want to\n      // Don't prevent default here to allow bubbling\n    }\n  }, [isActive, containerRef, getFocusableElements, preventScroll])\n\n  // Set up focus management when active state changes\n  useEffect(() => {\n    if (isActive) {\n      // Store the previously focused element\n      if (restoreFocus) {\n        previouslyFocusedElementRef.current = document.activeElement as HTMLElement\n      }\n\n      // Set initial focus\n      setTimeout(() => {\n        if (!containerRef.current) return\n\n        let focusSet = false\n\n        // Try initial focus strategies\n        if (initialFocusElement) {\n          focusSet = focusElement(initialFocusElement)\n        }\n\n        if (!focusSet) {\n          if (initialFocus === 'first') {\n            focusSet = focusFirst()\n          } else if (initialFocus === 'last') {\n            focusSet = focusLast()\n          }\n        }\n\n        // If no focus was set, focus the container itself\n        if (!focusSet && containerRef.current) {\n          containerRef.current.tabIndex = -1\n          containerRef.current.focus({ preventScroll })\n        }\n\n        isInitializedRef.current = true\n      }, 0)\n\n      // Add keyboard event listener\n      document.addEventListener('keydown', handleKeyDown, true)\n\n      return () => {\n        document.removeEventListener('keydown', handleKeyDown, true)\n      }\n    } else if (isInitializedRef.current) {\n      // Restore focus when deactivated\n      if (restoreFocus && previouslyFocusedElementRef.current) {\n        // Small delay to ensure the element is still in the DOM\n        setTimeout(() => {\n          if (previouslyFocusedElementRef.current && \n              document.contains(previouslyFocusedElementRef.current)) {\n            previouslyFocusedElementRef.current.focus({ preventScroll })\n          }\n        }, 0)\n      }\n      \n      isInitializedRef.current = false\n    }\n  }, [isActive, handleKeyDown, restoreFocus, focusFirst, focusLast, focusElement, initialFocus, initialFocusElement, containerRef, preventScroll])\n\n  return {\n    focusFirst,\n    focusLast,\n    focusElement,\n    getFocusableElements: () => containerRef.current ? getFocusableElements(containerRef.current) : []\n  }\n}\n\n/**\n * Hook to manage focus indicators with Portuguese cultural styling\n */\nexport function useFocusIndicator() {\n  useEffect(() => {\n    // Add CSS custom properties for Portuguese cultural focus styles\n    const style = document.createElement('style')\n    style.id = 'lusotown-focus-styles'\n    style.textContent = `\n      :root {\n        --focus-ring-color: rgb(34 197 94); /* Portuguese green */\n        --focus-ring-offset: 2px;\n        --focus-ring-width: 2px;\n        --focus-ring-style: solid;\n      }\n\n      /* High contrast focus styles for accessibility */\n      @media (prefers-contrast: high) {\n        :root {\n          --focus-ring-color: #000000;\n          --focus-ring-width: 3px;\n        }\n      }\n\n      /* Reduced motion support */\n      @media (prefers-reduced-motion: reduce) {\n        .lusotown-focus-smooth {\n          transition: none !important;\n        }\n      }\n\n      /* Portuguese cultural focus styles */\n      .lusotown-focus {\n        outline: var(--focus-ring-width) var(--focus-ring-style) var(--focus-ring-color) !important;\n        outline-offset: var(--focus-ring-offset) !important;\n      }\n\n      .lusotown-focus-smooth {\n        transition: outline 0.15s ease-in-out;\n      }\n\n      /* Portuguese heritage colors for special focus states */\n      .lusotown-focus-primary {\n        --focus-ring-color: rgb(34 197 94); /* Green */\n      }\n\n      .lusotown-focus-secondary {\n        --focus-ring-color: rgb(239 68 68); /* Red */\n      }\n\n      .lusotown-focus-accent {\n        --focus-ring-color: rgb(251 191 36); /* Gold/Yellow */\n      }\n\n      /* Focus styles for different component types */\n      .lusotown-widget-focus {\n        outline: 2px solid rgb(34 197 94);\n        outline-offset: 2px;\n        box-shadow: 0 0 0 4px rgba(34, 197, 94, 0.1);\n      }\n\n      .lusotown-button-focus {\n        outline: 2px solid rgb(34 197 94);\n        outline-offset: 2px;\n      }\n\n      .lusotown-card-focus {\n        outline: 2px solid rgb(34 197 94);\n        outline-offset: 2px;\n        box-shadow: 0 4px 12px rgba(34, 197, 94, 0.15);\n      }\n    `\n\n    // Only add if not already present\n    if (!document.getElementById('lusotown-focus-styles')) {\n      document.head.appendChild(style)\n    }\n\n    return () => {\n      const existingStyle = document.getElementById('lusotown-focus-styles')\n      if (existingStyle) {\n        existingStyle.remove()\n      }\n    }\n  }, [])\n\n  const addFocusClasses = useCallback((element: HTMLElement, type: 'widget' | 'button' | 'card' = 'widget') => {\n    element.classList.add('lusotown-focus-smooth')\n    element.classList.add(`lusotown-${type}-focus`)\n  }, [])\n\n  const removeFocusClasses = useCallback((element: HTMLElement, type: 'widget' | 'button' | 'card' = 'widget') => {\n    element.classList.remove('lusotown-focus-smooth')\n    element.classList.remove(`lusotown-${type}-focus`)\n  }, [])\n\n  return {\n    addFocusClasses,\n    removeFocusClasses\n  }\n}\n\n/**\n * Hook for skip links and keyboard shortcuts\n */\nexport function useKeyboardNavigation() {\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      const { key, altKey, ctrlKey } = event\n\n      // Skip to main content (Alt+M)\n      if (altKey && key === 'm') {\n        event.preventDefault()\n        const mainContent = document.getElementById('main-content') || \n                           document.querySelector('main') ||\n                           document.querySelector('[role=\"main\"]')\n        if (mainContent) {\n          (mainContent as HTMLElement).focus()\n        }\n      }\n\n      // Skip to navigation (Alt+N)\n      if (altKey && key === 'n') {\n        event.preventDefault()\n        const navigation = document.querySelector('nav') ||\n                          document.querySelector('[role=\"navigation\"]')\n        if (navigation) {\n          const firstLink = navigation.querySelector('a, button')\n          if (firstLink) {\n            (firstLink as HTMLElement).focus()\n          }\n        }\n      }\n\n      // Open LusoBot with keyboard shortcut (Alt+L)\n      if (altKey && key === 'l') {\n        event.preventDefault()\n        const lusoBotButton = document.querySelector('[aria-label*=\"LusoBot\"]')\n        if (lusoBotButton) {\n          (lusoBotButton as HTMLElement).click()\n        }\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown)\n    return () => document.removeEventListener('keydown', handleKeyDown)\n  }, [])\n}"],"names":["useFocusIndicator","useFocusManagement","useKeyboardNavigation","containerRef","isActive","options","restoreFocus","initialFocus","initialFocusElement","preventScroll","previouslyFocusedElementRef","useRef","isInitializedRef","getFocusableElements","useCallback","container","focusableSelectors","join","elements","Array","from","querySelectorAll","filter","element","disabled","tabIndex","style","getComputedStyle","display","visibility","rect","getBoundingClientRect","width","height","focusFirst","current","focusableElements","length","focus","focusLast","focusElement","targetElement","handleKeyDown","event","key","shiftKey","target","preventDefault","firstElement","lastElement","currentElement","useEffect","document","activeElement","setTimeout","focusSet","addEventListener","removeEventListener","contains","createElement","id","textContent","getElementById","head","appendChild","existingStyle","remove","addFocusClasses","type","classList","add","removeFocusClasses","altKey","ctrlKey","mainContent","querySelector","navigation","firstLink","lusoBotButton","click"],"mappings":"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"}