{"version":3,"sources":["/workspaces/LusoTown/web-app/src/components/PortugueseCommunicationPanel.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { \n  Smile, \n  Heart, \n  Globe, \n  MessageCircle, \n  Flag,\n  Book,\n  Clock,\n  Sparkles,\n  Volume2,\n  Copy,\n  Search,\n  ChevronDown,\n  X\n} from 'lucide-react'\nimport { useLanguage } from '@/context/LanguageContext'\nimport { \n  PORTUGUESE_EMOJI_PACKS,\n  CULTURAL_EXPRESSIONS,\n  GREETING_TEMPLATES,\n  FAREWELL_TEMPLATES,\n  PORTUGUESE_REACTIONS,\n  getEmojiPackForCountry,\n  getGreetingForContext,\n  getTimeBasedGreeting,\n  getCulturalExpressionsByRegion,\n  searchEmojis\n} from '@/config/portuguese-emojis'\nimport { PORTUGUESE_COLORS } from '@/config/brand'\n\ninterface PortugueseCommunicationPanelProps {\n  onSelectExpression: (text: string, emoji?: string) => void\n  preferredCountry?: string\n  preferredFormality?: 'formal' | 'casual'\n  showEmojiPacks?: boolean\n  showGreetings?: boolean\n  showExpressions?: boolean\n  className?: string\n}\n\nexport default function PortugueseCommunicationPanel({\n  onSelectExpression,\n  preferredCountry = 'Portugal',\n  preferredFormality = 'casual',\n  showEmojiPacks = true,\n  showGreetings = true,\n  showExpressions = true,\n  className = ''\n}: PortugueseCommunicationPanelProps) {\n  const { language } = useLanguage()\n  const [activeTab, setActiveTab] = useState<'emojis' | 'greetings' | 'expressions' | 'reactions'>('emojis')\n  const [selectedCountryPack, setSelectedCountryPack] = useState('portugal')\n  const [searchQuery, setSearchQuery] = useState('')\n  const [showCountrySelector, setShowCountrySelector] = useState(false)\n  const [reactionCategory, setReactionCategory] = useState<keyof typeof PORTUGUESE_REACTIONS>('agreement')\n\n  const translations = {\n    en: {\n      title: 'Portuguese Communication',\n      emojis: 'Cultural Emojis',\n      greetings: 'Greetings',\n      expressions: 'Expressions',\n      reactions: 'Quick Reactions',\n      search: 'Search expressions...',\n      selectCountry: 'Select country pack',\n      timeBasedGreeting: 'Time-based greeting',\n      culturalContext: 'Cultural context',\n      formalGreeting: 'Formal greeting',\n      casualGreeting: 'Casual greeting',\n      copyExpression: 'Copy expression',\n      playAudio: 'Play pronunciation',\n      usage: 'Usage',\n      meaning: 'Meaning',\n      region: 'Region',\n      formality: 'Formality',\n      agreement: 'Agreement',\n      excitement: 'Excitement',\n      empathy: 'Empathy',\n      surprise: 'Surprise',\n      traditional: 'Traditional',\n      modern: 'Modern',\n      noResults: 'No results found'\n    },\n    pt: {\n      title: 'Comunicação Portuguesa',\n      emojis: 'Emojis Culturais',\n      greetings: 'Saudações',\n      expressions: 'Expressões',\n      reactions: 'Reações Rápidas',\n      search: 'Pesquisar expressões...',\n      selectCountry: 'Selecionar país',\n      timeBasedGreeting: 'Saudação por hora',\n      culturalContext: 'Contexto cultural',\n      formalGreeting: 'Saudação formal',\n      casualGreeting: 'Saudação casual',\n      copyExpression: 'Copiar expressão',\n      playAudio: 'Reproduzir pronúncia',\n      usage: 'Uso',\n      meaning: 'Significado',\n      region: 'Região',\n      formality: 'Formalidade',\n      agreement: 'Concordância',\n      excitement: 'Entusiasmo',\n      empathy: 'Empatia',\n      surprise: 'Surpresa',\n      traditional: 'Tradicional',\n      modern: 'Moderno',\n      noResults: 'Nenhum resultado encontrado'\n    }\n  }\n\n  const t = translations[language]\n  const countryMap = ['portugal', 'brazil', 'capeverde', 'angola']\n  const regionCodes: Record<string, string> = {\n    portugal: 'PT',\n    brazil: 'BR',\n    capeverde: 'CV',\n    angola: 'AO'\n  }\n\n  const playPronunciation = (text: string) => {\n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(text)\n      utterance.lang = selectedCountryPack === 'brazil' ? 'pt-BR' : 'pt-PT'\n      utterance.rate = 0.8\n      speechSynthesis.speak(utterance)\n    }\n  }\n\n  const getTimeOfDay = (): 'morning' | 'afternoon' | 'evening' => {\n    const hour = new Date().getHours()\n    if (hour < 12) return 'morning'\n    if (hour < 18) return 'afternoon'\n    return 'evening'\n  }\n\n  const filteredEmojis = searchQuery \n    ? searchEmojis(searchQuery)\n    : PORTUGUESE_EMOJI_PACKS[selectedCountryPack]?.emojis || []\n\n  const filteredExpressions = searchQuery\n    ? CULTURAL_EXPRESSIONS.filter(expr => \n        expr.text.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        expr.meaning.toLowerCase().includes(searchQuery.toLowerCase())\n      )\n    : getCulturalExpressionsByRegion(regionCodes[selectedCountryPack])\n\n  return (\n    <div className={`portuguese-communication-panel bg-white rounded-lg shadow-lg border border-gray-200 ${className}`}>\n      {/* Header */}\n      <div className=\"p-4 border-b border-gray-200\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <div \n              className=\"w-8 h-8 rounded-full flex items-center justify-center text-white\"\n              style={{ backgroundColor: PORTUGUESE_COLORS.primary }}\n            >\n              <Globe className=\"w-4 h-4\" />\n            </div>\n            <h3 className=\"text-lg font-semibold text-gray-900\">{t.title}</h3>\n          </div>\n\n          {/* Country Selector */}\n          <div className=\"relative\">\n            <button\n              onClick={() => setShowCountrySelector(!showCountrySelector)}\n              className=\"flex items-center space-x-2 px-3 py-1 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors\"\n            >\n              <span>{PORTUGUESE_EMOJI_PACKS[selectedCountryPack]?.flag}</span>\n              <span className=\"text-sm font-medium\">\n                {PORTUGUESE_EMOJI_PACKS[selectedCountryPack]?.country}\n              </span>\n              <ChevronDown className=\"w-4 h-4\" />\n            </button>\n\n            <AnimatePresence>\n              {showCountrySelector && (\n                <motion.div\n                  initial={{ opacity: 0, y: -10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  exit={{ opacity: 0, y: -10 }}\n                  className=\"absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg border border-gray-200 py-2 z-20\"\n                >\n                  {countryMap.map((countryKey) => {\n                    const pack = PORTUGUESE_EMOJI_PACKS[countryKey]\n                    return (\n                      <button\n                        key={countryKey}\n                        onClick={() => {\n                          setSelectedCountryPack(countryKey)\n                          setShowCountrySelector(false)\n                        }}\n                        className=\"w-full px-4 py-2 text-left hover:bg-gray-50 flex items-center space-x-3\"\n                      >\n                        <span>{pack.flag}</span>\n                        <div>\n                          <div className=\"font-medium text-gray-900\">{pack.country}</div>\n                          <div className=\"text-xs text-gray-500\">{pack.description}</div>\n                        </div>\n                      </button>\n                    )\n                  })}\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n        </div>\n\n        {/* Search Bar */}\n        <div className=\"mt-3 relative\">\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n          <input\n            type=\"text\"\n            placeholder={t.search}\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent\"\n          />\n          {searchQuery && (\n            <button\n              onClick={() => setSearchQuery('')}\n              className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n            >\n              <X className=\"w-4 h-4\" />\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"flex border-b border-gray-200\">\n        {[\n          { key: 'emojis', label: t.emojis, icon: Smile, show: showEmojiPacks },\n          { key: 'greetings', label: t.greetings, icon: MessageCircle, show: showGreetings },\n          { key: 'expressions', label: t.expressions, icon: Book, show: showExpressions },\n          { key: 'reactions', label: t.reactions, icon: Heart, show: true }\n        ].filter(tab => tab.show).map((tab) => (\n          <button\n            key={tab.key}\n            onClick={() => setActiveTab(tab.key as any)}\n            className={`\n              flex-1 flex items-center justify-center space-x-2 py-3 px-4 text-sm font-medium transition-colors\n              ${activeTab === tab.key\n                ? 'text-primary-600 border-b-2 border-primary-600 bg-primary-50'\n                : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'\n              }\n            `}\n          >\n            <tab.icon className=\"w-4 h-4\" />\n            <span>{tab.label}</span>\n          </button>\n        ))}\n      </div>\n\n      {/* Content Area */}\n      <div className=\"p-4 max-h-96 overflow-y-auto\">\n        <AnimatePresence mode=\"wait\">\n          {/* Emojis Tab */}\n          {activeTab === 'emojis' && (\n            <motion.div\n              key=\"emojis\"\n              initial={{ opacity: 0, y: 10 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -10 }}\n              className=\"space-y-4\"\n            >\n              {filteredEmojis.length > 0 ? (\n                <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-3\">\n                  {filteredEmojis.map((emojiItem, index) => (\n                    <motion.button\n                      key={index}\n                      whileHover={{ scale: 1.02 }}\n                      whileTap={{ scale: 0.98 }}\n                      onClick={() => onSelectExpression(emojiItem.name, emojiItem.emoji)}\n                      className=\"p-3 bg-gray-50 hover:bg-gray-100 rounded-lg border border-gray-200 text-left transition-colors group\"\n                    >\n                      <div className=\"flex items-center space-x-2 mb-2\">\n                        <span className=\"text-2xl\">{emojiItem.emoji}</span>\n                        <span className=\"font-medium text-gray-900 text-sm\">{emojiItem.name}</span>\n                      </div>\n                      <p className=\"text-xs text-gray-600 leading-relaxed\">\n                        {emojiItem.description}\n                      </p>\n                      {emojiItem.cultural_significance && (\n                        <div className=\"mt-2 flex items-center space-x-1\">\n                          <Sparkles className=\"w-3 h-3 text-primary-600\" />\n                          <span className=\"text-xs text-primary-700\">\n                            {t.culturalContext}\n                          </span>\n                        </div>\n                      )}\n                      <div className=\"mt-2 flex flex-wrap gap-1\">\n                        {emojiItem.tags.slice(0, 3).map((tag, tagIndex) => (\n                          <span\n                            key={tagIndex}\n                            className=\"px-2 py-0.5 bg-white text-xs text-gray-500 rounded-full border\"\n                          >\n                            {tag}\n                          </span>\n                        ))}\n                      </div>\n                    </motion.button>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"text-center py-8 text-gray-500\">\n                  <Smile className=\"w-12 h-12 mx-auto mb-3 opacity-50\" />\n                  <p>{t.noResults}</p>\n                </div>\n              )}\n            </motion.div>\n          )}\n\n          {/* Greetings Tab */}\n          {activeTab === 'greetings' && (\n            <motion.div\n              key=\"greetings\"\n              initial={{ opacity: 0, y: 10 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -10 }}\n              className=\"space-y-4\"\n            >\n              {/* Time-based Greeting */}\n              <div className=\"p-4 bg-gradient-to-r from-primary-50 to-secondary-50 rounded-lg border border-primary-200\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-3\">\n                    <Clock className=\"w-5 h-5 text-primary-600\" />\n                    <div>\n                      <h4 className=\"font-medium text-primary-900\">{t.timeBasedGreeting}</h4>\n                      <p className=\"text-sm text-primary-700\">\n                        {getTimeBasedGreeting(regionCodes[selectedCountryPack]).text}\n                      </p>\n                    </div>\n                  </div>\n                  <button\n                    onClick={() => {\n                      const greeting = getTimeBasedGreeting(regionCodes[selectedCountryPack])\n                      onSelectExpression(greeting.text, greeting.emoji)\n                    }}\n                    className=\"px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors\"\n                    style={{ backgroundColor: PORTUGUESE_COLORS.primary }}\n                  >\n                    <span className=\"text-2xl mr-2\">\n                      {getTimeBasedGreeting(regionCodes[selectedCountryPack]).emoji}\n                    </span>\n                    {t.usage}\n                  </button>\n                </div>\n              </div>\n\n              {/* Greeting Categories */}\n              <div className=\"space-y-3\">\n                {[\n                  { type: 'formal', templates: GREETING_TEMPLATES.filter(g => g.formality === 'formal' && g.region.includes(regionCodes[selectedCountryPack])) },\n                  { type: 'casual', templates: GREETING_TEMPLATES.filter(g => g.formality === 'casual' && g.region.includes(regionCodes[selectedCountryPack])) }\n                ].map(({ type, templates }) => (\n                  <div key={type}>\n                    <h5 className=\"font-medium text-gray-900 mb-2 capitalize\">\n                      {type === 'formal' ? t.formalGreeting : t.casualGreeting}\n                    </h5>\n                    <div className=\"space-y-2\">\n                      {templates.map((template, index) => (\n                        <motion.button\n                          key={template.id}\n                          whileHover={{ scale: 1.01 }}\n                          onClick={() => onSelectExpression(template.text, template.emoji)}\n                          className=\"w-full p-3 bg-white border border-gray-200 rounded-lg hover:bg-gray-50 text-left group transition-colors\"\n                        >\n                          <div className=\"flex items-center justify-between\">\n                            <div className=\"flex items-center space-x-3\">\n                              <span className=\"text-xl\">{template.emoji}</span>\n                              <div>\n                                <p className=\"font-medium text-gray-900\">{template.text}</p>\n                                <p className=\"text-sm text-gray-600\">{template.context}</p>\n                              </div>\n                            </div>\n                            <div className=\"flex items-center space-x-2 opacity-0 group-hover:opacity-100 transition-opacity\">\n                              <button\n                                onClick={(e) => {\n                                  e.stopPropagation()\n                                  playPronunciation(template.text)\n                                }}\n                                className=\"p-1 text-gray-400 hover:text-primary-600 rounded\"\n                              >\n                                <Volume2 className=\"w-4 h-4\" />\n                              </button>\n                              <button\n                                onClick={(e) => {\n                                  e.stopPropagation()\n                                  navigator.clipboard.writeText(template.text)\n                                }}\n                                className=\"p-1 text-gray-400 hover:text-primary-600 rounded\"\n                              >\n                                <Copy className=\"w-4 h-4\" />\n                              </button>\n                            </div>\n                          </div>\n                        </motion.button>\n                      ))}\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              {/* Farewell Templates */}\n              <div>\n                <h5 className=\"font-medium text-gray-900 mb-2\">Despedidas</h5>\n                <div className=\"space-y-2\">\n                  {FAREWELL_TEMPLATES\n                    .filter(template => template.region.includes(regionCodes[selectedCountryPack]))\n                    .slice(0, 3)\n                    .map((template) => (\n                    <motion.button\n                      key={template.id}\n                      whileHover={{ scale: 1.01 }}\n                      onClick={() => onSelectExpression(template.text, template.emoji)}\n                      className=\"w-full p-3 bg-white border border-gray-200 rounded-lg hover:bg-gray-50 text-left group transition-colors\"\n                    >\n                      <div className=\"flex items-center space-x-3\">\n                        <span className=\"text-xl\">{template.emoji}</span>\n                        <div>\n                          <p className=\"font-medium text-gray-900\">{template.text}</p>\n                          <p className=\"text-sm text-gray-600\">{template.context}</p>\n                        </div>\n                      </div>\n                    </motion.button>\n                  ))}\n                </div>\n              </div>\n            </motion.div>\n          )}\n\n          {/* Expressions Tab */}\n          {activeTab === 'expressions' && (\n            <motion.div\n              key=\"expressions\"\n              initial={{ opacity: 0, y: 10 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -10 }}\n              className=\"space-y-3\"\n            >\n              {filteredExpressions.length > 0 ? (\n                filteredExpressions.map((expression, index) => (\n                  <motion.button\n                    key={index}\n                    whileHover={{ scale: 1.01 }}\n                    onClick={() => onSelectExpression(expression.text, expression.emoji)}\n                    className=\"w-full p-4 bg-white border border-gray-200 rounded-lg hover:bg-gray-50 text-left group transition-colors\"\n                  >\n                    <div className=\"flex items-start space-x-3\">\n                      <span className=\"text-2xl flex-shrink-0\">{expression.emoji}</span>\n                      <div className=\"flex-1 min-w-0\">\n                        <div className=\"flex items-center space-x-2 mb-2\">\n                          <p className=\"font-medium text-gray-900\">{expression.text}</p>\n                          <span className=\"text-xs px-2 py-0.5 bg-gray-100 rounded-full text-gray-600\">\n                            {expression.formality}\n                          </span>\n                        </div>\n                        <p className=\"text-sm text-gray-600 mb-2\">{expression.meaning}</p>\n                        <p className=\"text-xs text-gray-500\">{expression.usage_context}</p>\n                        <div className=\"mt-2 flex items-center space-x-4 text-xs text-gray-500\">\n                          <span>📍 {expression.region.join(', ')}</span>\n                        </div>\n                      </div>\n                      <div className=\"flex items-center space-x-2 opacity-0 group-hover:opacity-100 transition-opacity\">\n                        <button\n                          onClick={(e) => {\n                            e.stopPropagation()\n                            playPronunciation(expression.text)\n                          }}\n                          className=\"p-1 text-gray-400 hover:text-primary-600 rounded\"\n                        >\n                          <Volume2 className=\"w-4 h-4\" />\n                        </button>\n                        <button\n                          onClick={(e) => {\n                            e.stopPropagation()\n                            navigator.clipboard.writeText(expression.text)\n                          }}\n                          className=\"p-1 text-gray-400 hover:text-primary-600 rounded\"\n                        >\n                          <Copy className=\"w-4 h-4\" />\n                        </button>\n                      </div>\n                    </div>\n                  </motion.button>\n                ))\n              ) : (\n                <div className=\"text-center py-8 text-gray-500\">\n                  <Book className=\"w-12 h-12 mx-auto mb-3 opacity-50\" />\n                  <p>{t.noResults}</p>\n                </div>\n              )}\n            </motion.div>\n          )}\n\n          {/* Reactions Tab */}\n          {activeTab === 'reactions' && (\n            <motion.div\n              key=\"reactions\"\n              initial={{ opacity: 0, y: 10 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -10 }}\n              className=\"space-y-4\"\n            >\n              {/* Category Selector */}\n              <div className=\"flex space-x-2 mb-4\">\n                {Object.keys(PORTUGUESE_REACTIONS).map((category) => (\n                  <button\n                    key={category}\n                    onClick={() => setReactionCategory(category as keyof typeof PORTUGUESE_REACTIONS)}\n                    className={`\n                      px-3 py-1 rounded-full text-sm font-medium transition-colors\n                      ${reactionCategory === category\n                        ? 'bg-primary-600 text-white'\n                        : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                      }\n                    `}\n                    style={reactionCategory === category ? { backgroundColor: PORTUGUESE_COLORS.primary } : {}}\n                  >\n                    {t[category as keyof typeof t]}\n                  </button>\n                ))}\n              </div>\n\n              {/* Reaction Items */}\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\n                {PORTUGUESE_REACTIONS[reactionCategory].map((reaction, index) => (\n                  <motion.button\n                    key={index}\n                    whileHover={{ scale: 1.02 }}\n                    whileTap={{ scale: 0.98 }}\n                    onClick={() => onSelectExpression(reaction.text, reaction.emoji)}\n                    className=\"p-3 bg-white border border-gray-200 rounded-lg hover:bg-gray-50 text-left group transition-colors\"\n                  >\n                    <div className=\"flex items-center space-x-3\">\n                      <span className=\"text-2xl\">{reaction.emoji}</span>\n                      <div>\n                        <p className=\"font-medium text-gray-900\">{reaction.text}</p>\n                        <p className=\"text-sm text-gray-600\">{reaction.meaning}</p>\n                      </div>\n                    </div>\n                  </motion.button>\n                ))}\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n    </div>\n  )\n}"],"names":["PortugueseCommunicationPanel","onSelectExpression","preferredCountry","preferredFormality","showEmojiPacks","showGreetings","showExpressions","className","language","useLanguage","activeTab","setActiveTab","useState","selectedCountryPack","setSelectedCountryPack","searchQuery","setSearchQuery","showCountrySelector","setShowCountrySelector","reactionCategory","setReactionCategory","translations","en","title","emojis","greetings","expressions","reactions","search","selectCountry","timeBasedGreeting","culturalContext","formalGreeting","casualGreeting","copyExpression","playAudio","usage","meaning","region","formality","agreement","excitement","empathy","surprise","traditional","modern","noResults","pt","t","countryMap","regionCodes","portugal","brazil","capeverde","angola","playPronunciation","text","window","utterance","SpeechSynthesisUtterance","lang","rate","speechSynthesis","speak","getTimeOfDay","hour","Date","getHours","filteredEmojis","searchEmojis","PORTUGUESE_EMOJI_PACKS","filteredExpressions","CULTURAL_EXPRESSIONS","filter","expr","toLowerCase","includes","getCulturalExpressionsByRegion","div","style","backgroundColor","PORTUGUESE_COLORS","primary","Globe","h3","button","onClick","span","flag","country","ChevronDown","AnimatePresence","motion","initial","opacity","y","animate","exit","map","countryKey","pack","description","Search","input","type","placeholder","value","onChange","e","target","X","key","label","icon","Smile","show","MessageCircle","Book","Heart","tab","mode","length","emojiItem","index","whileHover","scale","whileTap","name","emoji","p","cultural_significance","Sparkles","tags","slice","tag","tagIndex","Clock","h4","getTimeBasedGreeting","greeting","templates","GREETING_TEMPLATES","g","h5","template","context","stopPropagation","Volume2","navigator","clipboard","writeText","Copy","id","FAREWELL_TEMPLATES","expression","usage_context","join","Object","keys","PORTUGUESE_REACTIONS","category","reaction"],"mappings":"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"}