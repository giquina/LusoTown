{"version":3,"sources":["/workspaces/LusoTown/web-app/src/lib/supabase.ts"],"sourcesContent":["import { createClient as createSupabaseClient } from \"@supabase/supabase-js\";\n\nexport const supabaseUrl =\n  process.env.NEXT_PUBLIC_SUPABASE_URL || \"https://placeholder.supabase.co\";\nexport const supabaseAnonKey =\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || \"placeholder-key\";\n\nexport const supabase = createSupabaseClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n  },\n});\n\n// Server-side client for API routes (safe for client bundles)\n// Avoid importing `next/headers` at module scope to keep this file client-compatible.\ntype CookieStoreLike =\n  | {\n      get: (name: string) => { value?: string } | string | undefined;\n    }\n  | undefined;\n\nexport function createClient(cookieStore?: CookieStoreLike) {\n  const options: any = {\n    auth: {\n      autoRefreshToken: true,\n      persistSession: true,\n      detectSessionInUrl: true,\n    },\n  };\n\n  if (cookieStore) {\n    options.cookies = {\n      get(name: string) {\n        const v =\n          typeof (cookieStore as any)?.get === \"function\"\n            ? (cookieStore as any).get(name)\n            : undefined;\n        return typeof v === \"string\" ? v : v?.value;\n      },\n    };\n  }\n\n  return createSupabaseClient(supabaseUrl, supabaseAnonKey, options);\n}\n\n// Types for our database\nexport interface Profile {\n  id: string;\n  email: string;\n  first_name: string;\n  last_name?: string;\n  date_of_birth: string;\n  bio?: string;\n  location?: string;\n  verification_status: \"pending\" | \"verified\" | \"rejected\";\n  verification_selfie_url?: string;\n  profile_picture_url?: string;\n  is_active: boolean;\n  membership_tier: \"free\" | \"core\" | \"premium\";\n  stripe_customer_id?: string;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface Interest {\n  id: string;\n  name: string;\n  category: string;\n  description?: string;\n  icon?: string;\n  created_at: string;\n}\n\nexport interface Group {\n  id: string;\n  name: string;\n  description?: string;\n  group_type: \"interest\" | \"location\" | \"activity\";\n  category?: string;\n  location?: string;\n  london_borough?: string;\n  is_private: boolean;\n  max_members?: number;\n  current_member_count: number;\n  created_by: string;\n  image_url?: string;\n  rules?: string;\n  is_active: boolean;\n  portuguese_origin?:\n    | \"portugal\"\n    | \"brazil\"\n    | \"angola\"\n    | \"mozambique\"\n    | \"cape-verde\"\n    | \"guinea-bissau\"\n    | \"sao-tome-principe\"\n    | \"east-timor\"\n    | \"macau\"\n    | \"equatorial-guinea\"\n    | \"mixed\"\n    | \"any\";\n  language_preference?: \"english\" | \"portuguese\" | \"pt-pt\" | \"pt-br\" | \"both\";\n  age_restrictions?: {\n    min_age?: number;\n    max_age?: number;\n    professionals_welcome?: boolean;\n  };\n  meeting_frequency?:\n    | \"weekly\"\n    | \"biweekly\"\n    | \"monthly\"\n    | \"quarterly\"\n    | \"irregular\"\n    | \"one-time\";\n  verification_level?: \"none\" | \"basic\" | \"verified\" | \"premium\";\n  safety_features?: {\n    auto_moderation?: boolean;\n    manual_approval?: boolean;\n    background_check_required?: boolean;\n  };\n  cultural_focus?: {\n    preserves_heritage?: boolean;\n    professional_networking?: boolean;\n    traditional_activities?: boolean;\n    language_learning?: boolean;\n  };\n  contact_info?: {\n    email?: string;\n    phone?: string;\n    whatsapp?: string;\n    telegram?: string;\n  };\n  group_tags?: string[];\n  moderation_status?:\n    | \"pending\"\n    | \"approved\"\n    | \"rejected\"\n    | \"flagged\"\n    | \"under_review\";\n  rejection_reason?: string;\n  last_moderated_at?: string;\n  moderated_by?: string;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface GroupCategory {\n  id: string;\n  name_en: string;\n  name_pt: string;\n  description_en?: string;\n  description_pt?: string;\n  icon?: string;\n  color_class?: string;\n  is_age_restricted: boolean;\n  min_age?: number;\n  is_active: boolean;\n  display_order: number;\n  created_at: string;\n}\n\nexport interface GroupReport {\n  id: string;\n  group_id: string;\n  reported_by: string;\n  report_type:\n    | \"inappropriate_content\"\n    | \"spam\"\n    | \"harassment\"\n    | \"fake_group\"\n    | \"safety_concern\"\n    | \"age_inappropriate\"\n    | \"other\";\n  description: string;\n  status: \"pending\" | \"investigating\" | \"resolved\" | \"dismissed\";\n  reviewed_by?: string;\n  reviewed_at?: string;\n  resolution_notes?: string;\n  created_at: string;\n}\n\nexport interface GroupJoinRequest {\n  id: string;\n  group_id: string;\n  user_id: string;\n  message?: string;\n  status: \"pending\" | \"approved\" | \"rejected\";\n  reviewed_by?: string;\n  reviewed_at?: string;\n  response_message?: string;\n  created_at: string;\n}\n\nexport interface Event {\n  id: string;\n  title: string;\n  description?: string;\n  event_type: \"online\" | \"in_person\" | \"hybrid\";\n  location?: string;\n  virtual_link?: string;\n  start_datetime: string;\n  end_datetime: string;\n  max_attendees?: number;\n  current_attendee_count: number;\n  price: number;\n  currency: string;\n  group_id?: string;\n  created_by: string;\n  image_url?: string;\n  is_featured: boolean;\n  status: \"active\" | \"cancelled\" | \"completed\";\n  tags?: string[];\n  created_at: string;\n  updated_at: string;\n}\n\n// Extended Profile interface with privacy and preferences\nexport interface UserProfile extends Profile {\n  interests?: string[];\n  photos?: ProfilePhoto[];\n  preferences?: {\n    looking_for: \"friendship\" | \"activity_partners\" | \"networking\" | \"all\";\n    age_range_min: number;\n    age_range_max: number;\n    preferred_locations?: string[];\n  };\n  privacy_settings?: {\n    show_age: boolean;\n    show_location: boolean;\n    allow_messages: \"everyone\" | \"connections\" | \"premium\";\n    profile_visibility: \"public\" | \"members_only\" | \"connections_only\";\n  };\n  verification_data?: {\n    email_verified: boolean;\n    phone_verified: boolean;\n    photo_verified: boolean;\n    background_checked: boolean;\n  };\n  stats?: {\n    connections_count: number;\n    events_attended: number;\n    profile_completion: number;\n  };\n}\n\nexport interface ProfilePhoto {\n  id: string;\n  user_id: string;\n  url: string;\n  caption?: string;\n  is_profile_picture: boolean;\n  uploaded_at: string;\n  is_active: boolean;\n}\n\nexport interface ProfileCompletion {\n  percentage: number;\n  completed_steps: string[];\n  missing_steps: string[];\n  total_points: number;\n  max_points: number;\n}\n\n// Helper functions for common operations\nexport const getCurrentUser = async () => {\n  const {\n    data: { user },\n    error,\n  } = await supabase.auth.getUser();\n  if (error) throw error;\n  return user;\n};\n\nexport const signOut = async () => {\n  const { error } = await supabase.auth.signOut();\n  if (error) throw error;\n};\n\n// Profile management functions\nexport const getProfile = async (\n  userId: string\n): Promise<UserProfile | null> => {\n  try {\n    const { data, error } = await supabase\n      .from(\"profiles\")\n      .select(\"*\")\n      .eq(\"id\", userId)\n      .single();\n\n    if (error) throw error;\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching profile:\", error);\n    return null;\n  }\n};\n\nexport const getCurrentUserProfile = async (): Promise<UserProfile | null> => {\n  try {\n    const user = await getCurrentUser();\n    if (!user) return null;\n\n    return await getProfile(user.id);\n  } catch (error) {\n    console.error(\"Error fetching current user profile:\", error);\n    return null;\n  }\n};\n\nexport const updateProfile = async (\n  userId: string,\n  updates: Partial<UserProfile>\n) => {\n  try {\n    const { data, error } = await supabase\n      .from(\"profiles\")\n      .update(updates)\n      .eq(\"id\", userId)\n      .select()\n      .single();\n\n    if (error) throw error;\n    return { success: true, data };\n  } catch (error) {\n    console.error(\"Error updating profile:\", error);\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : \"Unknown error\",\n    };\n  }\n};\n\n// Photo management functions\nexport const uploadPhoto = async (\n  userId: string,\n  file: File,\n  isProfilePicture: boolean = false\n) => {\n  try {\n    // Validate image\n    const validation = validateImage(file);\n    if (!validation.valid) {\n      throw new Error(validation.error);\n    }\n\n    // Compress image\n    const compressedFile = await compressImage(file);\n\n    // Generate unique filename\n    const fileExt = file.name.split(\".\").pop();\n    const fileName = `${userId}/${Date.now()}-${Math.random()\n      .toString(36)\n      .substr(2, 9)}.${fileExt}`;\n\n    // Upload to storage\n    const { data: uploadData, error: uploadError } = await supabase.storage\n      .from(\"profile-pictures\")\n      .upload(fileName, compressedFile);\n\n    if (uploadError) throw uploadError;\n\n    // Get public URL\n    const { data: urlData } = supabase.storage\n      .from(\"profile-pictures\")\n      .getPublicUrl(fileName);\n\n    // Update profile if this is the profile picture\n    if (isProfilePicture) {\n      await updateProfile(userId, { profile_picture_url: urlData.publicUrl });\n    }\n\n    return {\n      success: true,\n      url: urlData.publicUrl,\n      path: fileName,\n    };\n  } catch (error) {\n    console.error(\"Error uploading photo:\", error);\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : \"Unknown error\",\n    };\n  }\n};\n\nexport const deletePhoto = async (path: string) => {\n  try {\n    const { error } = await supabase.storage\n      .from(\"profile-pictures\")\n      .remove([path]);\n\n    if (error) throw error;\n    return { success: true };\n  } catch (error) {\n    console.error(\"Error deleting photo:\", error);\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : \"Unknown error\",\n    };\n  }\n};\n\n// Profile completion calculation\nexport const calculateProfileCompletion = async (\n  userId: string\n): Promise<ProfileCompletion> => {\n  try {\n    const profile = await getProfile(userId);\n    if (!profile) {\n      return {\n        percentage: 0,\n        completed_steps: [],\n        missing_steps: [\"basic_info\"],\n        total_points: 0,\n        max_points: 100,\n      };\n    }\n\n    const steps = [\n      {\n        id: \"basic_info\",\n        completed: !!(profile.first_name && profile.email),\n        points: 15,\n      },\n      {\n        id: \"profile_picture\",\n        completed: !!profile.profile_picture_url,\n        points: 20,\n      },\n      {\n        id: \"bio\",\n        completed: !!(profile.bio && profile.bio.length > 20),\n        points: 15,\n      },\n      { id: \"location\", completed: !!profile.location, points: 10 },\n      { id: \"date_of_birth\", completed: !!profile.date_of_birth, points: 10 },\n      {\n        id: \"interests\",\n        completed: !!(profile.interests && profile.interests.length >= 3),\n        points: 15,\n      },\n      {\n        id: \"verification\",\n        completed: profile.verification_status === \"verified\",\n        points: 10,\n      },\n      {\n        id: \"preferences\",\n        completed: !!profile.preferences?.looking_for,\n        points: 5,\n      },\n    ];\n\n    const completedSteps = steps.filter((step) => step.completed);\n    const missingSteps = steps.filter((step) => !step.completed);\n    const totalPoints = completedSteps.reduce(\n      (sum, step) => sum + step.points,\n      0\n    );\n    const maxPoints = steps.reduce((sum, step) => sum + step.points, 0);\n\n    return {\n      percentage: Math.round((totalPoints / maxPoints) * 100),\n      completed_steps: completedSteps.map((s) => s.id),\n      missing_steps: missingSteps.map((s) => s.id),\n      total_points: totalPoints,\n      max_points: maxPoints,\n    };\n  } catch (error) {\n    console.error(\"Error calculating profile completion:\", error);\n    return {\n      percentage: 0,\n      completed_steps: [],\n      missing_steps: [\"error\"],\n      total_points: 0,\n      max_points: 100,\n    };\n  }\n};\n\n// Search profiles with filters\nexport const searchProfiles = async (filters?: {\n  query?: string;\n  age_range?: { min: number; max: number };\n  location?: string[];\n  interests?: string[];\n  membership_tier?: \"free\" | \"core\" | \"premium\";\n  limit?: number;\n}): Promise<UserProfile[]> => {\n  try {\n    let query = supabase\n      .from(\"profiles\")\n      .select(\"*\")\n      .eq(\"is_active\", true)\n      .eq(\"verification_status\", \"verified\");\n\n    // Apply filters\n    if (filters?.age_range) {\n      const today = new Date();\n      const minDate = new Date(\n        today.getFullYear() - filters.age_range.max,\n        today.getMonth(),\n        today.getDate()\n      );\n      const maxDate = new Date(\n        today.getFullYear() - filters.age_range.min,\n        today.getMonth(),\n        today.getDate()\n      );\n      query = query.gte(\"date_of_birth\", minDate.toISOString().split(\"T\")[0]);\n      query = query.lte(\"date_of_birth\", maxDate.toISOString().split(\"T\")[0]);\n    }\n\n    if (filters?.membership_tier) {\n      query = query.eq(\"membership_tier\", filters.membership_tier);\n    }\n\n    if (filters?.location?.length) {\n      // Use ilike for partial location matching\n      const locationFilter = filters.location\n        .map((loc) => `location.ilike.%${loc}%`)\n        .join(\",\");\n      query = query.or(locationFilter);\n    }\n\n    if (filters?.limit) {\n      query = query.limit(filters.limit);\n    }\n\n    const { data, error } = await query;\n\n    if (error) throw error;\n\n    // Filter by text search if provided\n    let results = data || [];\n    if (filters?.query) {\n      const searchTerm = filters.query.toLowerCase();\n      results = results.filter(\n        (profile) =>\n          profile.first_name?.toLowerCase().includes(searchTerm) ||\n          profile.last_name?.toLowerCase().includes(searchTerm) ||\n          profile.bio?.toLowerCase().includes(searchTerm) ||\n          profile.location?.toLowerCase().includes(searchTerm)\n      );\n    }\n\n    return results;\n  } catch (error) {\n    console.error(\"Error searching profiles:\", error);\n    return [];\n  }\n};\n\n// File upload helpers\nexport const uploadFile = async (bucket: string, path: string, file: File) => {\n  const { data, error } = await supabase.storage\n    .from(bucket)\n    .upload(path, file);\n\n  if (error) throw error;\n  return data;\n};\n\nexport const getPublicUrl = (bucket: string, path: string) => {\n  const { data } = supabase.storage.from(bucket).getPublicUrl(path);\n\n  return data.publicUrl;\n};\n\n// Image validation and compression utilities\nexport const validateImage = (\n  file: File\n): { valid: boolean; error?: string } => {\n  const maxSize = 5 * 1024 * 1024; // 5MB\n  const allowedTypes = [\"image/jpeg\", \"image/jpg\", \"image/png\", \"image/webp\"];\n\n  if (!allowedTypes.includes(file.type)) {\n    return { valid: false, error: \"Please upload a JPG, PNG, or WebP image\" };\n  }\n\n  if (file.size > maxSize) {\n    return { valid: false, error: \"Image must be smaller than 5MB\" };\n  }\n\n  return { valid: true };\n};\n\nexport const compressImage = async (\n  file: File,\n  maxWidth: number = 1000,\n  quality: number = 0.8\n): Promise<File> => {\n  return new Promise((resolve) => {\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n\n    img.onload = () => {\n      // Calculate new dimensions\n      let { width, height } = img;\n      if (width > maxWidth) {\n        height = (height * maxWidth) / width;\n        width = maxWidth;\n      }\n\n      canvas.width = width;\n      canvas.height = height;\n\n      // Draw and compress\n      ctx?.drawImage(img, 0, 0, width, height);\n      canvas.toBlob(\n        (blob) => {\n          if (blob) {\n            const compressedFile = new File([blob], file.name, {\n              type: file.type,\n              lastModified: Date.now(),\n            });\n            resolve(compressedFile);\n          } else {\n            resolve(file);\n          }\n        },\n        file.type,\n        quality\n      );\n    };\n\n    img.src = URL.createObjectURL(file);\n  });\n};\n\n// Transport Service Types\nexport interface TransportService {\n  id: string;\n  service_name: string;\n  service_type:\n    | \"executive\"\n    | \"tourism\"\n    | \"airport\"\n    | \"events\"\n    | \"business\"\n    | \"personal\";\n  description?: string;\n  base_hourly_rate: number;\n  minimum_hours: number;\n  day_rate?: number;\n  minimum_day_hours: number;\n  call_out_fee: number;\n  peak_time_multiplier: number;\n  currency: string;\n  is_active: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface TransportVehicle {\n  id: string;\n  make: string;\n  model: string;\n  year: number;\n  category: \"executive\" | \"luxury\" | \"premium\" | \"standard\";\n  max_passengers: number;\n  features: string[];\n  image_url?: string;\n  hourly_rate_premium: number;\n  is_active: boolean;\n  created_at: string;\n}\n\nexport interface TransportDriver {\n  id: string;\n  first_name: string;\n  last_name: string;\n  license_number: string;\n  languages_spoken: string[];\n  years_experience: number;\n  specializations: string[];\n  background_check_date: string;\n  profile_picture_url?: string;\n  hourly_rate_premium: number;\n  is_active: boolean;\n  created_at: string;\n}\n\nexport interface TransportPricingTier {\n  id: string;\n  tier_name: string;\n  block_hours_min: number;\n  block_hours_max?: number;\n  discount_percentage: number;\n  description?: string;\n  is_active: boolean;\n  created_at: string;\n}\n\nexport interface TransportPeakTime {\n  id: string;\n  name: string;\n  start_time: string;\n  end_time: string;\n  days_of_week: number[];\n  multiplier: number;\n  description?: string;\n  is_active: boolean;\n  created_at: string;\n}\n\nexport interface TransportBooking {\n  id: string;\n  booking_reference: string;\n  customer_id: string;\n  service_id: string;\n  vehicle_id?: string;\n  driver_id?: string;\n  booking_type: \"hourly\" | \"day_rate\" | \"block_booking\" | \"airport_transfer\";\n  pickup_datetime: string;\n  pickup_location: string;\n  pickup_postcode?: string;\n  dropoff_location?: string;\n  dropoff_postcode?: string;\n\n  // Pricing details\n  base_hours: number;\n  actual_hours?: number;\n  hourly_rate: number;\n  day_rate_applied?: number;\n  call_out_fee: number;\n  peak_time_charges: number;\n  block_discount_percentage: number;\n  vehicle_premium: number;\n  driver_premium: number;\n  subtotal: number;\n  member_discount_percentage: number;\n  member_discount_amount: number;\n  total_amount: number;\n  currency: string;\n\n  // Customer details\n  customer_notes?: string;\n  special_requirements?: string;\n  passenger_count: number;\n  customer_phone?: string;\n  customer_email?: string;\n\n  // Status\n  status:\n    | \"pending\"\n    | \"confirmed\"\n    | \"assigned\"\n    | \"in_progress\"\n    | \"completed\"\n    | \"cancelled\"\n    | \"no_show\";\n  payment_status: \"pending\" | \"paid\" | \"partial\" | \"refunded\" | \"failed\";\n  payment_method?: string;\n  stripe_payment_intent_id?: string;\n\n  created_at: string;\n  updated_at: string;\n  confirmed_at?: string;\n  completed_at?: string;\n}\n\nexport interface TransportBookingExtra {\n  id: string;\n  booking_id: string;\n  extra_type: string;\n  description: string;\n  quantity: number;\n  unit_price: number;\n  total_price: number;\n  created_at: string;\n}\n\nexport interface TransportAvailability {\n  id: string;\n  driver_id?: string;\n  vehicle_id?: string;\n  start_datetime: string;\n  end_datetime: string;\n  availability_type: \"available\" | \"busy\" | \"maintenance\" | \"unavailable\";\n  notes?: string;\n  created_at: string;\n}\n\n// Pricing calculation interfaces\nexport interface PricingCalculationRequest {\n  service_id: string;\n  vehicle_id?: string;\n  driver_id?: string;\n  pickup_datetime: string;\n  hours: number;\n  booking_type: \"hourly\" | \"day_rate\" | \"block_booking\" | \"airport_transfer\";\n  membership_tier?: \"free\" | \"core\" | \"premium\";\n  passenger_count?: number;\n  extras?: { type: string; quantity: number }[];\n}\n\nexport interface PricingCalculationResult {\n  base_rate: number;\n  hours: number;\n  subtotal: number;\n  call_out_fee: number;\n  peak_time_charges: number;\n  block_discount: {\n    applicable: boolean;\n    percentage: number;\n    amount: number;\n  };\n  vehicle_premium: number;\n  driver_premium: number;\n  member_discount: {\n    applicable: boolean;\n    percentage: number;\n    amount: number;\n  };\n  extras_total: number;\n  total_amount: number;\n  currency: string;\n  breakdown: {\n    description: string;\n    amount: number;\n    type: \"charge\" | \"discount\";\n  }[];\n}\n\n// Premium Membership System Types\nexport interface Subscription {\n  id: string;\n  user_id: string;\n  stripe_subscription_id?: string;\n  stripe_customer_id?: string;\n  status: \"active\" | \"inactive\" | \"cancelled\" | \"past_due\" | \"trialing\";\n  plan_type: \"yearly\";\n  tier: \"bronze\" | \"silver\" | \"gold\" | \"platinum\";\n  current_period_start?: string;\n  current_period_end?: string;\n  trial_end?: string;\n  amount: number;\n  currency: string;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface MembershipBenefit {\n  id: string;\n  tier: \"bronze\" | \"silver\" | \"gold\" | \"platinum\";\n  benefit_type:\n    | \"service_discount\"\n    | \"cultural_events\"\n    | \"business_networking\"\n    | \"concierge_support\"\n    | \"premium_access\";\n  benefit_name: string;\n  benefit_description?: string;\n  benefit_value?: string;\n  is_active: boolean;\n  sort_order: number;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface MembershipUsage {\n  id: string;\n  user_id: string;\n  subscription_id: string;\n  benefit_type: string;\n  usage_date: string;\n  service_type?: string;\n  discount_applied?: number;\n  amount_saved?: number;\n  notes?: string;\n  created_at: string;\n}\n\nexport interface PortugueseCommunityPartnership {\n  id: string;\n  partner_name: string;\n  partner_type:\n    | \"chamber_of_commerce\"\n    | \"cultural_institute\"\n    | \"business_association\"\n    | \"community_organization\";\n  partnership_description?: string;\n  member_benefits?: string;\n  required_tier?: \"bronze\" | \"silver\" | \"gold\" | \"platinum\";\n  contact_info?: any;\n  is_active: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\nexport type MembershipTier =\n  | \"basic\"\n  | \"student\"\n  | \"professional\"\n  | \"business\"\n  | \"vip\";\n\nexport interface MembershipTierConfig {\n  tier: MembershipTier;\n  name: string;\n  namePortuguese: string;\n  monthlyPrice: number;\n  yearlyPrice: number;\n  description: string;\n  descriptionPortuguese: string;\n  color: string;\n  icon: string;\n  features: string[];\n  featuresPortuguese: string[];\n  limits: {\n    dailyMatches: number;\n    monthlyMessages: number;\n    premiumEvents: number;\n    livestreamHours: number;\n  };\n  popular?: boolean;\n  studentDiscount?: number;\n}\n\n// Membership utility functions\nexport const getMembershipTierConfig = (\n  tier: MembershipTier\n): MembershipTierConfig => {\n  const configs: Record<MembershipTier, MembershipTierConfig> = {\n    basic: {\n      tier: \"basic\",\n      name: \"Basic\",\n      namePortuguese: \"Básico\",\n      monthlyPrice: 0,\n      yearlyPrice: 0,\n      description: \"Basic community access with limited features\",\n      descriptionPortuguese:\n        \"Acesso básico à comunidade com funcionalidades limitadas\",\n      color: \"gray\",\n      icon: \"UserIcon\",\n      features: [\n        \"5 matches per day\",\n        \"20 messages per month\",\n        \"Basic community events\",\n        \"Profile browsing\",\n      ],\n      featuresPortuguese: [\n        \"5 matches por dia\",\n        \"20 mensagens por mês\",\n        \"Eventos básicos da comunidade\",\n        \"Navegação de perfis\",\n      ],\n      limits: {\n        dailyMatches: 5,\n        monthlyMessages: 20,\n        premiumEvents: 0,\n        livestreamHours: 0,\n      },\n    },\n    student: {\n      tier: \"student\",\n      name: \"Student\",\n      namePortuguese: \"Estudante\",\n      monthlyPrice: 1250, // £12.50\n      yearlyPrice: 12500, // £125 (50% off regular)\n      description: \"Special pricing for university students with verification\",\n      descriptionPortuguese:\n        \"Preços especiais para estudantes universitários com verificação\",\n      color: \"blue\",\n      icon: \"AcademicCapIcon\",\n      features: [\n        \"50 matches per day\",\n        \"100 messages per month\",\n        \"2 premium events per month\",\n        \"5 hours livestream access\",\n        \"University partnerships\",\n        \"Student network access\",\n      ],\n      featuresPortuguese: [\n        \"50 matches por dia\",\n        \"100 mensagens por mês\",\n        \"2 eventos premium por mês\",\n        \"5 horas de acesso a livestream\",\n        \"Parcerias universitárias\",\n        \"Acesso à rede de estudantes\",\n      ],\n      limits: {\n        dailyMatches: 50,\n        monthlyMessages: 100,\n        premiumEvents: 2,\n        livestreamHours: 5,\n      },\n      studentDiscount: 50,\n    },\n    professional: {\n      tier: \"professional\",\n      name: \"Professional\",\n      namePortuguese: \"Profissional\",\n      monthlyPrice: 2500, // £25\n      yearlyPrice: 25000, // £250\n      description: \"Full access for Lusophone professionals in London\",\n      descriptionPortuguese:\n        \"Acesso completo para profissionais portugueses em Londres\",\n      color: \"primary\",\n      icon: \"BriefcaseIcon\",\n      features: [\n        \"Unlimited matches\",\n        \"Unlimited messages\",\n        \"5 premium events per month\",\n        \"10 hours livestream access\",\n        \"Professional networking\",\n        \"Business directory listing\",\n      ],\n      featuresPortuguese: [\n        \"Matches ilimitados\",\n        \"Mensagens ilimitadas\",\n        \"5 eventos premium por mês\",\n        \"10 horas de acesso a livestream\",\n        \"Networking profissional\",\n        \"Listagem no diretório de negócios\",\n      ],\n      limits: {\n        dailyMatches: -1,\n        monthlyMessages: -1,\n        premiumEvents: 5,\n        livestreamHours: 10,\n      },\n      popular: true,\n    },\n    business: {\n      tier: \"business\",\n      name: \"Business\",\n      namePortuguese: \"Negócios\",\n      monthlyPrice: 9900, // £99\n      yearlyPrice: 99000, // £990\n      description: \"Corporate networking and partnership tools\",\n      descriptionPortuguese:\n        \"Ferramentas de networking empresarial e parcerias\",\n      color: \"amber\",\n      icon: \"BuildingOfficeIcon\",\n      features: [\n        \"Unlimited everything\",\n        \"25 hours livestream access\",\n        \"Corporate event hosting\",\n        \"Partnership opportunities\",\n        \"Bulk employee accounts\",\n        \"Business analytics\",\n      ],\n      featuresPortuguese: [\n        \"Tudo ilimitado\",\n        \"25 horas de acesso a livestream\",\n        \"Hospedagem de eventos corporativos\",\n        \"Oportunidades de parceria\",\n        \"Contas em massa para funcionários\",\n        \"Análises de negócios\",\n      ],\n      limits: {\n        dailyMatches: -1,\n        monthlyMessages: -1,\n        premiumEvents: -1,\n        livestreamHours: 25,\n      },\n    },\n    vip: {\n      tier: \"vip\",\n      name: \"VIP\",\n      namePortuguese: \"VIP\",\n      monthlyPrice: 24900, // £249\n      yearlyPrice: 249000, // £2490\n      description: \"Exclusive VIP experiences and priority access\",\n      descriptionPortuguese: \"Experiências VIP exclusivas e acesso prioritário\",\n      color: \"purple\",\n      icon: \"CrownIcon\",\n      features: [\n        \"Everything unlimited\",\n        \"VIP events and experiences\",\n        \"Personal concierge service\",\n        \"Priority matching algorithm\",\n        \"Exclusive networking events\",\n        \"Direct access to founders\",\n      ],\n      featuresPortuguese: [\n        \"Tudo ilimitado\",\n        \"Eventos e experiências VIP\",\n        \"Serviço de concierge pessoal\",\n        \"Algoritmo de matching prioritário\",\n        \"Eventos de networking exclusivos\",\n        \"Acesso direto aos fundadores\",\n      ],\n      limits: {\n        dailyMatches: -1,\n        monthlyMessages: -1,\n        premiumEvents: -1,\n        livestreamHours: -1,\n      },\n    },\n  };\n\n  return configs[tier];\n};\n\n// Cultural Preferences Types\nexport interface CulturalPreferences {\n  id: string;\n  user_id: string;\n  origins: string[];\n  language_preference: string;\n  cultural_celebrations: string[];\n  professional_goals: string[];\n  cultural_values: Record<string, number>;\n  lifestyle_preferences: string[];\n  compatibility_score?: number;\n  cultural_depth_score?: number;\n  community_engagement_score?: number;\n  completed_at: string;\n  last_updated: string;\n  quiz_version: string;\n}\n\nexport interface CulturalCompatibility {\n  id: string;\n  user_a_id: string;\n  user_b_id: string;\n  origin_compatibility: number;\n  language_compatibility: number;\n  cultural_compatibility: number;\n  professional_compatibility: number;\n  values_compatibility: number;\n  lifestyle_compatibility: number;\n  overall_compatibility: number;\n  compatibility_insights: string[];\n  shared_elements: string[];\n  calculated_at: string;\n  last_updated: string;\n}\n\n// Cultural Preferences Functions\nexport const getCulturalPreferences = async (\n  userId: string\n): Promise<CulturalPreferences | null> => {\n  try {\n    const { data, error } = await supabase\n      .from(\"cultural_preferences\")\n      .select(\"*\")\n      .eq(\"user_id\", userId)\n      .single();\n\n    if (error && error.code !== \"PGRST116\") {\n      // PGRST116 means no rows found\n      throw error;\n    }\n\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching cultural preferences:\", error);\n    return null;\n  }\n};\n\nexport const saveCulturalPreferences = async (\n  userId: string,\n  preferences: {\n    origins: string[];\n    language_preference: string;\n    cultural_celebrations: string[];\n    professional_goals: string[];\n    cultural_values: Record<string, number>;\n    lifestyle_preferences: string[];\n  }\n) => {\n  try {\n    const { data, error } = await supabase\n      .from(\"cultural_preferences\")\n      .upsert({\n        user_id: userId,\n        ...preferences,\n        last_updated: new Date().toISOString(),\n        quiz_version: \"1.0\",\n      })\n      .select()\n      .single();\n\n    if (error) throw error;\n\n    // Trigger compatibility calculation for this user\n    try {\n      await supabase.rpc(\"update_user_compatibility_scores\", {\n        target_user_id: userId,\n      });\n    } catch (compatError) {\n      console.warn(\"Failed to update compatibility scores:\", compatError);\n      // Don't fail the main operation if compatibility calculation fails\n    }\n\n    return { success: true, data };\n  } catch (error) {\n    console.error(\"Error saving cultural preferences:\", error);\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : \"Unknown error\",\n    };\n  }\n};\n\nexport const getCulturalCompatibility = async (\n  userAId: string,\n  userBId: string\n): Promise<CulturalCompatibility | null> => {\n  try {\n    const { data, error } = await supabase\n      .from(\"cultural_compatibility\")\n      .select(\"*\")\n      .eq(\"user_a_id\", userAId)\n      .eq(\"user_b_id\", userBId)\n      .single();\n\n    if (error && error.code !== \"PGRST116\") {\n      throw error;\n    }\n\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching cultural compatibility:\", error);\n    return null;\n  }\n};\n\nexport const getTopCulturalMatches = async (\n  userId: string,\n  limit: number = 10\n): Promise<Array<CulturalCompatibility & { profile: UserProfile }> | []> => {\n  try {\n    const { data, error } = await supabase\n      .from(\"cultural_compatibility\")\n      .select(\n        `\n        *,\n        profile:profiles!cultural_compatibility_user_b_id_fkey(*)\n      `\n      )\n      .eq(\"user_a_id\", userId)\n      .order(\"overall_compatibility\", { ascending: false })\n      .limit(limit);\n\n    if (error) throw error;\n    return data || [];\n  } catch (error) {\n    console.error(\"Error fetching top cultural matches:\", error);\n    return [];\n  }\n};\n\nexport const getPortugueseCulturalElements = async () => {\n  try {\n    const { data, error } = await supabase\n      .from(\"portuguese_cultural_elements\")\n      .select(\"*\")\n      .eq(\"is_active\", true)\n      .order(\"popularity_score\", { ascending: false });\n\n    if (error) throw error;\n    return data || [];\n  } catch (error) {\n    console.error(\"Error fetching Lusophone cultural elements:\", error);\n    return [];\n  }\n};\n\nexport const getCulturalInsights = async () => {\n  try {\n    const { data, error } = await supabase\n      .from(\"cultural_insights\")\n      .select(\"*\")\n      .eq(\"is_active\", true)\n      .order(\"category\");\n\n    if (error) throw error;\n    return data || [];\n  } catch (error) {\n    console.error(\"Error fetching cultural insights:\", error);\n    return [];\n  }\n};\n"],"names":["calculateProfileCompletion","compressImage","createClient","deletePhoto","getCulturalCompatibility","getCulturalInsights","getCulturalPreferences","getCurrentUser","getCurrentUserProfile","getMembershipTierConfig","getPortugueseCulturalElements","getProfile","getPublicUrl","getTopCulturalMatches","saveCulturalPreferences","searchProfiles","signOut","supabase","supabaseAnonKey","supabaseUrl","updateProfile","uploadFile","uploadPhoto","validateImage","process","env","NEXT_PUBLIC_SUPABASE_URL","NEXT_PUBLIC_SUPABASE_ANON_KEY","createSupabaseClient","auth","autoRefreshToken","persistSession","detectSessionInUrl","cookieStore","options","cookies","get","name","v","undefined","value","data","user","error","getUser","userId","from","select","eq","single","console","id","updates","update","success","Error","message","file","isProfilePicture","validation","valid","compressedFile","fileExt","split","pop","fileName","Date","now","Math","random","toString","substr","uploadData","uploadError","storage","upload","urlData","profile_picture_url","publicUrl","url","path","remove","profile","percentage","completed_steps","missing_steps","total_points","max_points","steps","completed","first_name","email","points","bio","length","location","date_of_birth","interests","verification_status","preferences","looking_for","completedSteps","filter","step","missingSteps","totalPoints","reduce","sum","maxPoints","round","map","s","filters","query","age_range","today","minDate","getFullYear","max","getMonth","getDate","maxDate","min","gte","toISOString","lte","membership_tier","locationFilter","loc","join","or","limit","results","searchTerm","toLowerCase","includes","last_name","bucket","maxSize","allowedTypes","type","size","maxWidth","quality","Promise","resolve","canvas","document","createElement","ctx","getContext","img","Image","onload","width","height","drawImage","toBlob","blob","File","lastModified","src","URL","createObjectURL","tier","configs","basic","namePortuguese","monthlyPrice","yearlyPrice","description","descriptionPortuguese","color","icon","features","featuresPortuguese","limits","dailyMatches","monthlyMessages","premiumEvents","livestreamHours","student","studentDiscount","professional","popular","business","vip","code","upsert","user_id","last_updated","quiz_version","rpc","target_user_id","compatError","warn","userAId","userBId","order","ascending"],"mappings":"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"}