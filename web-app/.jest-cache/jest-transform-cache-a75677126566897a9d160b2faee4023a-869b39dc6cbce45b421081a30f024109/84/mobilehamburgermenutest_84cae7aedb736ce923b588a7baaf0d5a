674b73e7b297852f59efb7eab9c46085
/**
 * @jest-environment jsdom
 */ "use strict";
// Mock framer-motion to avoid animation issues in tests
jest.mock("framer-motion", ()=>({
        motion: {
            div: ({ children, className, onClick, ...props })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: className,
                    onClick: onClick,
                    ...props,
                    children: children
                }),
            a: ({ children, className, href, onClick, ...props })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("a", {
                    className: className,
                    href: href,
                    onClick: onClick,
                    ...props,
                    children: children
                }),
            button: ({ children, className, onClick, ...props })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                    className: className,
                    onClick: onClick,
                    ...props,
                    children: children
                })
        },
        AnimatePresence: ({ children })=>children
    }));
// Mock Next.js router
jest.mock("next/navigation", ()=>({
        useRouter: ()=>({
                push: jest.fn(),
                back: jest.fn(),
                forward: jest.fn()
            })
    }));
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
const _Header = /*#__PURE__*/ _interop_require_default(require("../src/components/Header"));
const _LanguageContext = require("../src/context/LanguageContext");
const _HeritageContext = require("../src/context/HeritageContext");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const TestWrapper = ({ children })=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_LanguageContext.LanguageProvider, {
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_HeritageContext.HeritageProvider, {
            children: children
        })
    });
describe("Mobile Hamburger Menu", ()=>{
    beforeEach(()=>{
        // Mock window.innerWidth for mobile viewport
        Object.defineProperty(window, "innerWidth", {
            writable: true,
            configurable: true,
            value: 375
        });
        // Mock matchMedia for responsive design
        Object.defineProperty(window, "matchMedia", {
            writable: true,
            value: jest.fn().mockImplementation((query)=>({
                    matches: query.includes("(max-width: 768px)"),
                    media: query,
                    onchange: null,
                    addListener: jest.fn(),
                    removeListener: jest.fn(),
                    addEventListener: jest.fn(),
                    removeEventListener: jest.fn(),
                    dispatchEvent: jest.fn()
                }))
        });
    });
    test("renders mobile menu button correctly", ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.default, {})
        }));
        // Check if mobile menu button exists
        const menuButton = _react1.screen.getByTestId("mobile-menu-button");
        expect(menuButton).toBeInTheDocument();
    });
    test("mobile menu button has proper accessibility attributes", ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.default, {})
        }));
        const menuButton = _react1.screen.getByTestId("mobile-menu-button");
        // Check accessibility attributes
        expect(menuButton).toHaveAttribute("aria-label");
        expect(menuButton.getAttribute("aria-label")).toContain("menu");
    });
    test("mobile menu opens and closes correctly", async ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.default, {})
        }));
        const menuButton = _react1.screen.getByTestId("mobile-menu-button");
        // Initially, menu should be closed
        expect(_react1.screen.queryByText("What's Happening")).not.toBeInTheDocument();
        // Click to open menu
        _react1.fireEvent.click(menuButton);
        // Menu content should appear
        await (0, _react1.waitFor)(()=>{
            expect(_react1.screen.getByText("What's Happening")).toBeInTheDocument();
        });
        // Click to close menu
        _react1.fireEvent.click(menuButton);
        // Menu should disappear
        await (0, _react1.waitFor)(()=>{
            expect(_react1.screen.queryByText("What's Happening")).not.toBeInTheDocument();
        });
    });
    test("mobile menu has proper z-index layering", ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.default, {})
        }));
        const menuButton = _react1.screen.getByTestId("mobile-menu-button");
        _react1.fireEvent.click(menuButton);
        // Check if backdrop and content have proper z-index classes
        const backdrop = document.querySelector(".z-\\[9998\\]");
        const content = document.querySelector(".z-\\[9999\\]");
        expect(backdrop).toBeInTheDocument();
        expect(content).toBeInTheDocument();
    });
    test("mobile menu items have proper touch targets", async ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.default, {})
        }));
        const menuButton = _react1.screen.getByTestId("mobile-menu-button");
        _react1.fireEvent.click(menuButton);
        await (0, _react1.waitFor)(()=>{
            const menuItems = document.querySelectorAll(".min-h-\\[56px\\]");
            expect(menuItems.length).toBeGreaterThan(0);
        });
    });
    test("mobile menu includes Portuguese cultural theming", async ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.default, {})
        }));
        const menuButton = _react1.screen.getByTestId("mobile-menu-button");
        _react1.fireEvent.click(menuButton);
        await (0, _react1.waitFor)(()=>{
            // Check for Portuguese cultural elements
            const menuContent = document.querySelector(".bg-white\\/98");
            const menuItems = document.querySelectorAll(".luxury-touch-target");
            expect(menuContent).toBeInTheDocument();
            expect(menuItems.length).toBeGreaterThan(0);
        });
    });
    test("mobile menu supports Portuguese community navigation", async ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.default, {})
        }));
        const menuButton = _react1.screen.getByTestId("mobile-menu-button");
        _react1.fireEvent.click(menuButton);
        await (0, _react1.waitFor)(()=>{
            // Check for community navigation sections
            expect(_react1.screen.getByText("Community Actions")).toBeInTheDocument();
            expect(_react1.screen.getByText("Business Solutions")).toBeInTheDocument();
            expect(_react1.screen.getByText("Find Your Match")).toBeInTheDocument();
        });
    });
    test("mobile menu has enhanced animations and interactions", ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.default, {})
        }));
        const menuButton = _react1.screen.getByTestId("mobile-menu-button");
        // Check if button has enhanced styling classes
        expect(menuButton).toHaveClass("luxury-touch-target");
        expect(menuButton).toHaveClass("min-h-[56px]");
        expect(menuButton).toHaveClass("min-w-[56px]");
    });
    test("mobile menu backdrop closes menu when clicked", async ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.default, {})
        }));
        const menuButton = _react1.screen.getByTestId("mobile-menu-button");
        // Open menu
        _react1.fireEvent.click(menuButton);
        await (0, _react1.waitFor)(()=>{
            expect(_react1.screen.getByText("What's Happening")).toBeInTheDocument();
        });
        // Click backdrop to close
        const backdrop = document.querySelector(".fixed.inset-0");
        if (backdrop) {
            _react1.fireEvent.click(backdrop);
        }
        await (0, _react1.waitFor)(()=>{
            expect(_react1.screen.queryByText("What's Happening")).not.toBeInTheDocument();
        });
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL0x1c29Ub3duL3dlYi1hcHAvX190ZXN0c19fL21vYmlsZS1oYW1idXJnZXItbWVudS50ZXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBqZXN0LWVudmlyb25tZW50IGpzZG9tXG4gKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHJlbmRlciwgc2NyZWVuLCBmaXJlRXZlbnQsIHdhaXRGb3IgfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0J1xuaW1wb3J0IEhlYWRlciBmcm9tICdAL2NvbXBvbmVudHMvSGVhZGVyJ1xuaW1wb3J0IHsgTGFuZ3VhZ2VQcm92aWRlciB9IGZyb20gJ0AvY29udGV4dC9MYW5ndWFnZUNvbnRleHQnXG5pbXBvcnQgeyBIZXJpdGFnZVByb3ZpZGVyIH0gZnJvbSAnQC9jb250ZXh0L0hlcml0YWdlQ29udGV4dCdcblxuLy8gTW9jayBmcmFtZXItbW90aW9uIHRvIGF2b2lkIGFuaW1hdGlvbiBpc3N1ZXMgaW4gdGVzdHNcbmplc3QubW9jaygnZnJhbWVyLW1vdGlvbicsICgpID0+ICh7XG4gIG1vdGlvbjoge1xuICAgIGRpdjogKHsgY2hpbGRyZW4sIGNsYXNzTmFtZSwgb25DbGljaywgLi4ucHJvcHMgfTogYW55KSA9PiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y2xhc3NOYW1lfSBvbkNsaWNrPXtvbkNsaWNrfSB7Li4ucHJvcHN9PlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L2Rpdj5cbiAgICApLFxuICAgIGE6ICh7IGNoaWxkcmVuLCBjbGFzc05hbWUsIGhyZWYsIG9uQ2xpY2ssIC4uLnByb3BzIH06IGFueSkgPT4gKFxuICAgICAgPGEgY2xhc3NOYW1lPXtjbGFzc05hbWV9IGhyZWY9e2hyZWZ9IG9uQ2xpY2s9e29uQ2xpY2t9IHsuLi5wcm9wc30+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvYT5cbiAgICApLFxuICAgIGJ1dHRvbjogKHsgY2hpbGRyZW4sIGNsYXNzTmFtZSwgb25DbGljaywgLi4ucHJvcHMgfTogYW55KSA9PiAoXG4gICAgICA8YnV0dG9uIGNsYXNzTmFtZT17Y2xhc3NOYW1lfSBvbkNsaWNrPXtvbkNsaWNrfSB7Li4ucHJvcHN9PlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L2J1dHRvbj5cbiAgICApLFxuICB9LFxuICBBbmltYXRlUHJlc2VuY2U6ICh7IGNoaWxkcmVuIH06IGFueSkgPT4gY2hpbGRyZW4sXG59KSlcblxuLy8gTW9jayBOZXh0LmpzIHJvdXRlclxuamVzdC5tb2NrKCduZXh0L25hdmlnYXRpb24nLCAoKSA9PiAoe1xuICB1c2VSb3V0ZXI6ICgpID0+ICh7XG4gICAgcHVzaDogamVzdC5mbigpLFxuICAgIGJhY2s6IGplc3QuZm4oKSxcbiAgICBmb3J3YXJkOiBqZXN0LmZuKCksXG4gIH0pLFxufSkpXG5cbmNvbnN0IFRlc3RXcmFwcGVyID0gKHsgY2hpbGRyZW4gfTogeyBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlIH0pID0+IChcbiAgPExhbmd1YWdlUHJvdmlkZXI+XG4gICAgPEhlcml0YWdlUHJvdmlkZXI+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9IZXJpdGFnZVByb3ZpZGVyPlxuICA8L0xhbmd1YWdlUHJvdmlkZXI+XG4pXG5cbmRlc2NyaWJlKCdNb2JpbGUgSGFtYnVyZ2VyIE1lbnUnLCAoKSA9PiB7XG4gIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgIC8vIE1vY2sgd2luZG93LmlubmVyV2lkdGggZm9yIG1vYmlsZSB2aWV3cG9ydFxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3csICdpbm5lcldpZHRoJywge1xuICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB2YWx1ZTogMzc1LFxuICAgIH0pXG4gICAgXG4gICAgLy8gTW9jayBtYXRjaE1lZGlhIGZvciByZXNwb25zaXZlIGRlc2lnblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3csICdtYXRjaE1lZGlhJywge1xuICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICB2YWx1ZTogamVzdC5mbigpLm1vY2tJbXBsZW1lbnRhdGlvbihxdWVyeSA9PiAoe1xuICAgICAgICBtYXRjaGVzOiBxdWVyeS5pbmNsdWRlcygnKG1heC13aWR0aDogNzY4cHgpJyksXG4gICAgICAgIG1lZGlhOiBxdWVyeSxcbiAgICAgICAgb25jaGFuZ2U6IG51bGwsXG4gICAgICAgIGFkZExpc3RlbmVyOiBqZXN0LmZuKCksXG4gICAgICAgIHJlbW92ZUxpc3RlbmVyOiBqZXN0LmZuKCksXG4gICAgICAgIGFkZEV2ZW50TGlzdGVuZXI6IGplc3QuZm4oKSxcbiAgICAgICAgcmVtb3ZlRXZlbnRMaXN0ZW5lcjogamVzdC5mbigpLFxuICAgICAgICBkaXNwYXRjaEV2ZW50OiBqZXN0LmZuKCksXG4gICAgICB9KSksXG4gICAgfSlcbiAgfSlcblxuICB0ZXN0KCdyZW5kZXJzIG1vYmlsZSBtZW51IGJ1dHRvbiBjb3JyZWN0bHknLCAoKSA9PiB7XG4gICAgcmVuZGVyKFxuICAgICAgPFRlc3RXcmFwcGVyPlxuICAgICAgICA8SGVhZGVyIC8+XG4gICAgICA8L1Rlc3RXcmFwcGVyPlxuICAgIClcblxuICAgIC8vIENoZWNrIGlmIG1vYmlsZSBtZW51IGJ1dHRvbiBleGlzdHNcbiAgICBjb25zdCBtZW51QnV0dG9uID0gc2NyZWVuLmdldEJ5VGVzdElkKCdtb2JpbGUtbWVudS1idXR0b24nKVxuICAgIGV4cGVjdChtZW51QnV0dG9uKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gIH0pXG5cbiAgdGVzdCgnbW9iaWxlIG1lbnUgYnV0dG9uIGhhcyBwcm9wZXIgYWNjZXNzaWJpbGl0eSBhdHRyaWJ1dGVzJywgKCkgPT4ge1xuICAgIHJlbmRlcihcbiAgICAgIDxUZXN0V3JhcHBlcj5cbiAgICAgICAgPEhlYWRlciAvPlxuICAgICAgPC9UZXN0V3JhcHBlcj5cbiAgICApXG5cbiAgICBjb25zdCBtZW51QnV0dG9uID0gc2NyZWVuLmdldEJ5VGVzdElkKCdtb2JpbGUtbWVudS1idXR0b24nKVxuICAgIFxuICAgIC8vIENoZWNrIGFjY2Vzc2liaWxpdHkgYXR0cmlidXRlc1xuICAgIGV4cGVjdChtZW51QnV0dG9uKS50b0hhdmVBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnKVxuICAgIGV4cGVjdChtZW51QnV0dG9uLmdldEF0dHJpYnV0ZSgnYXJpYS1sYWJlbCcpKS50b0NvbnRhaW4oJ21lbnUnKVxuICB9KVxuXG4gIHRlc3QoJ21vYmlsZSBtZW51IG9wZW5zIGFuZCBjbG9zZXMgY29ycmVjdGx5JywgYXN5bmMgKCkgPT4ge1xuICAgIHJlbmRlcihcbiAgICAgIDxUZXN0V3JhcHBlcj5cbiAgICAgICAgPEhlYWRlciAvPlxuICAgICAgPC9UZXN0V3JhcHBlcj5cbiAgICApXG5cbiAgICBjb25zdCBtZW51QnV0dG9uID0gc2NyZWVuLmdldEJ5VGVzdElkKCdtb2JpbGUtbWVudS1idXR0b24nKVxuICAgIFxuICAgIC8vIEluaXRpYWxseSwgbWVudSBzaG91bGQgYmUgY2xvc2VkXG4gICAgZXhwZWN0KHNjcmVlbi5xdWVyeUJ5VGV4dCgnV2hhdFxcJ3MgSGFwcGVuaW5nJykpLm5vdC50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgXG4gICAgLy8gQ2xpY2sgdG8gb3BlbiBtZW51XG4gICAgZmlyZUV2ZW50LmNsaWNrKG1lbnVCdXR0b24pXG4gICAgXG4gICAgLy8gTWVudSBjb250ZW50IHNob3VsZCBhcHBlYXJcbiAgICBhd2FpdCB3YWl0Rm9yKCgpID0+IHtcbiAgICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdXaGF0XFwncyBIYXBwZW5pbmcnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIH0pXG4gICAgXG4gICAgLy8gQ2xpY2sgdG8gY2xvc2UgbWVudVxuICAgIGZpcmVFdmVudC5jbGljayhtZW51QnV0dG9uKVxuICAgIFxuICAgIC8vIE1lbnUgc2hvdWxkIGRpc2FwcGVhclxuICAgIGF3YWl0IHdhaXRGb3IoKCkgPT4ge1xuICAgICAgZXhwZWN0KHNjcmVlbi5xdWVyeUJ5VGV4dCgnV2hhdFxcJ3MgSGFwcGVuaW5nJykpLm5vdC50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgfSlcbiAgfSlcblxuICB0ZXN0KCdtb2JpbGUgbWVudSBoYXMgcHJvcGVyIHotaW5kZXggbGF5ZXJpbmcnLCAoKSA9PiB7XG4gICAgcmVuZGVyKFxuICAgICAgPFRlc3RXcmFwcGVyPlxuICAgICAgICA8SGVhZGVyIC8+XG4gICAgICA8L1Rlc3RXcmFwcGVyPlxuICAgIClcblxuICAgIGNvbnN0IG1lbnVCdXR0b24gPSBzY3JlZW4uZ2V0QnlUZXN0SWQoJ21vYmlsZS1tZW51LWJ1dHRvbicpXG4gICAgZmlyZUV2ZW50LmNsaWNrKG1lbnVCdXR0b24pXG5cbiAgICAvLyBDaGVjayBpZiBiYWNrZHJvcCBhbmQgY29udGVudCBoYXZlIHByb3BlciB6LWluZGV4IGNsYXNzZXNcbiAgICBjb25zdCBiYWNrZHJvcCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy56LVxcXFxbOTk5OFxcXFxdJylcbiAgICBjb25zdCBjb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnotXFxcXFs5OTk5XFxcXF0nKVxuICAgIFxuICAgIGV4cGVjdChiYWNrZHJvcCkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIGV4cGVjdChjb250ZW50KS50b0JlSW5UaGVEb2N1bWVudCgpXG4gIH0pXG5cbiAgdGVzdCgnbW9iaWxlIG1lbnUgaXRlbXMgaGF2ZSBwcm9wZXIgdG91Y2ggdGFyZ2V0cycsIGFzeW5jICgpID0+IHtcbiAgICByZW5kZXIoXG4gICAgICA8VGVzdFdyYXBwZXI+XG4gICAgICAgIDxIZWFkZXIgLz5cbiAgICAgIDwvVGVzdFdyYXBwZXI+XG4gICAgKVxuXG4gICAgY29uc3QgbWVudUJ1dHRvbiA9IHNjcmVlbi5nZXRCeVRlc3RJZCgnbW9iaWxlLW1lbnUtYnV0dG9uJylcbiAgICBmaXJlRXZlbnQuY2xpY2sobWVudUJ1dHRvbilcblxuICAgIGF3YWl0IHdhaXRGb3IoKCkgPT4ge1xuICAgICAgY29uc3QgbWVudUl0ZW1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLm1pbi1oLVxcXFxbNTZweFxcXFxdJylcbiAgICAgIGV4cGVjdChtZW51SXRlbXMubGVuZ3RoKS50b0JlR3JlYXRlclRoYW4oMClcbiAgICB9KVxuICB9KVxuXG4gIHRlc3QoJ21vYmlsZSBtZW51IGluY2x1ZGVzIFBvcnR1Z3Vlc2UgY3VsdHVyYWwgdGhlbWluZycsIGFzeW5jICgpID0+IHtcbiAgICByZW5kZXIoXG4gICAgICA8VGVzdFdyYXBwZXI+XG4gICAgICAgIDxIZWFkZXIgLz5cbiAgICAgIDwvVGVzdFdyYXBwZXI+XG4gICAgKVxuXG4gICAgY29uc3QgbWVudUJ1dHRvbiA9IHNjcmVlbi5nZXRCeVRlc3RJZCgnbW9iaWxlLW1lbnUtYnV0dG9uJylcbiAgICBmaXJlRXZlbnQuY2xpY2sobWVudUJ1dHRvbilcblxuICAgIGF3YWl0IHdhaXRGb3IoKCkgPT4ge1xuICAgICAgLy8gQ2hlY2sgZm9yIFBvcnR1Z3Vlc2UgY3VsdHVyYWwgZWxlbWVudHNcbiAgICAgIGNvbnN0IG1lbnVDb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJnLXdoaXRlXFxcXC85OCcpXG4gICAgICBjb25zdCBtZW51SXRlbXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcubHV4dXJ5LXRvdWNoLXRhcmdldCcpXG4gICAgICBcbiAgICAgIGV4cGVjdChtZW51Q29udGVudCkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgICAgZXhwZWN0KG1lbnVJdGVtcy5sZW5ndGgpLnRvQmVHcmVhdGVyVGhhbigwKVxuICAgIH0pXG4gIH0pXG5cbiAgdGVzdCgnbW9iaWxlIG1lbnUgc3VwcG9ydHMgUG9ydHVndWVzZSBjb21tdW5pdHkgbmF2aWdhdGlvbicsIGFzeW5jICgpID0+IHtcbiAgICByZW5kZXIoXG4gICAgICA8VGVzdFdyYXBwZXI+XG4gICAgICAgIDxIZWFkZXIgLz5cbiAgICAgIDwvVGVzdFdyYXBwZXI+XG4gICAgKVxuXG4gICAgY29uc3QgbWVudUJ1dHRvbiA9IHNjcmVlbi5nZXRCeVRlc3RJZCgnbW9iaWxlLW1lbnUtYnV0dG9uJylcbiAgICBmaXJlRXZlbnQuY2xpY2sobWVudUJ1dHRvbilcblxuICAgIGF3YWl0IHdhaXRGb3IoKCkgPT4ge1xuICAgICAgLy8gQ2hlY2sgZm9yIGNvbW11bml0eSBuYXZpZ2F0aW9uIHNlY3Rpb25zXG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnQ29tbXVuaXR5IEFjdGlvbnMnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ0J1c2luZXNzIFNvbHV0aW9ucycpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnRmluZCBZb3VyIE1hdGNoJykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgICB9KVxuICB9KVxuXG4gIHRlc3QoJ21vYmlsZSBtZW51IGhhcyBlbmhhbmNlZCBhbmltYXRpb25zIGFuZCBpbnRlcmFjdGlvbnMnLCAoKSA9PiB7XG4gICAgcmVuZGVyKFxuICAgICAgPFRlc3RXcmFwcGVyPlxuICAgICAgICA8SGVhZGVyIC8+XG4gICAgICA8L1Rlc3RXcmFwcGVyPlxuICAgIClcblxuICAgIGNvbnN0IG1lbnVCdXR0b24gPSBzY3JlZW4uZ2V0QnlUZXN0SWQoJ21vYmlsZS1tZW51LWJ1dHRvbicpXG4gICAgXG4gICAgLy8gQ2hlY2sgaWYgYnV0dG9uIGhhcyBlbmhhbmNlZCBzdHlsaW5nIGNsYXNzZXNcbiAgICBleHBlY3QobWVudUJ1dHRvbikudG9IYXZlQ2xhc3MoJ2x1eHVyeS10b3VjaC10YXJnZXQnKVxuICAgIGV4cGVjdChtZW51QnV0dG9uKS50b0hhdmVDbGFzcygnbWluLWgtWzU2cHhdJylcbiAgICBleHBlY3QobWVudUJ1dHRvbikudG9IYXZlQ2xhc3MoJ21pbi13LVs1NnB4XScpXG4gIH0pXG5cbiAgdGVzdCgnbW9iaWxlIG1lbnUgYmFja2Ryb3AgY2xvc2VzIG1lbnUgd2hlbiBjbGlja2VkJywgYXN5bmMgKCkgPT4ge1xuICAgIHJlbmRlcihcbiAgICAgIDxUZXN0V3JhcHBlcj5cbiAgICAgICAgPEhlYWRlciAvPlxuICAgICAgPC9UZXN0V3JhcHBlcj5cbiAgICApXG5cbiAgICBjb25zdCBtZW51QnV0dG9uID0gc2NyZWVuLmdldEJ5VGVzdElkKCdtb2JpbGUtbWVudS1idXR0b24nKVxuICAgIFxuICAgIC8vIE9wZW4gbWVudVxuICAgIGZpcmVFdmVudC5jbGljayhtZW51QnV0dG9uKVxuICAgIFxuICAgIGF3YWl0IHdhaXRGb3IoKCkgPT4ge1xuICAgICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ1doYXRcXCdzIEhhcHBlbmluZycpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgfSlcblxuICAgIC8vIENsaWNrIGJhY2tkcm9wIHRvIGNsb3NlXG4gICAgY29uc3QgYmFja2Ryb3AgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZml4ZWQuaW5zZXQtMCcpXG4gICAgaWYgKGJhY2tkcm9wKSB7XG4gICAgICBmaXJlRXZlbnQuY2xpY2soYmFja2Ryb3ApXG4gICAgfVxuXG4gICAgYXdhaXQgd2FpdEZvcigoKSA9PiB7XG4gICAgICBleHBlY3Qoc2NyZWVuLnF1ZXJ5QnlUZXh0KCdXaGF0XFwncyBIYXBwZW5pbmcnKSkubm90LnRvQmVJblRoZURvY3VtZW50KClcbiAgICB9KVxuICB9KVxufSkiXSwibmFtZXMiOlsiamVzdCIsIm1vY2siLCJtb3Rpb24iLCJkaXYiLCJjaGlsZHJlbiIsImNsYXNzTmFtZSIsIm9uQ2xpY2siLCJwcm9wcyIsImEiLCJocmVmIiwiYnV0dG9uIiwiQW5pbWF0ZVByZXNlbmNlIiwidXNlUm91dGVyIiwicHVzaCIsImZuIiwiYmFjayIsImZvcndhcmQiLCJUZXN0V3JhcHBlciIsIkxhbmd1YWdlUHJvdmlkZXIiLCJIZXJpdGFnZVByb3ZpZGVyIiwiZGVzY3JpYmUiLCJiZWZvcmVFYWNoIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJ3aW5kb3ciLCJ3cml0YWJsZSIsImNvbmZpZ3VyYWJsZSIsInZhbHVlIiwibW9ja0ltcGxlbWVudGF0aW9uIiwicXVlcnkiLCJtYXRjaGVzIiwiaW5jbHVkZXMiLCJtZWRpYSIsIm9uY2hhbmdlIiwiYWRkTGlzdGVuZXIiLCJyZW1vdmVMaXN0ZW5lciIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZGlzcGF0Y2hFdmVudCIsInRlc3QiLCJyZW5kZXIiLCJIZWFkZXIiLCJtZW51QnV0dG9uIiwic2NyZWVuIiwiZ2V0QnlUZXN0SWQiLCJleHBlY3QiLCJ0b0JlSW5UaGVEb2N1bWVudCIsInRvSGF2ZUF0dHJpYnV0ZSIsImdldEF0dHJpYnV0ZSIsInRvQ29udGFpbiIsInF1ZXJ5QnlUZXh0Iiwibm90IiwiZmlyZUV2ZW50IiwiY2xpY2siLCJ3YWl0Rm9yIiwiZ2V0QnlUZXh0IiwiYmFja2Ryb3AiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjb250ZW50IiwibWVudUl0ZW1zIiwicXVlcnlTZWxlY3RvckFsbCIsImxlbmd0aCIsInRvQmVHcmVhdGVyVGhhbiIsIm1lbnVDb250ZW50IiwidG9IYXZlQ2xhc3MiXSwibWFwcGluZ3MiOiJBQUFBOztDQUVDO0FBT0Qsd0RBQXdEO0FBQ3hEQSxLQUFLQyxJQUFJLENBQUMsaUJBQWlCLElBQU8sQ0FBQTtRQUNoQ0MsUUFBUTtZQUNOQyxLQUFLLENBQUMsRUFBRUMsUUFBUSxFQUFFQyxTQUFTLEVBQUVDLE9BQU8sRUFBRSxHQUFHQyxPQUFZLGlCQUNuRCxxQkFBQ0o7b0JBQUlFLFdBQVdBO29CQUFXQyxTQUFTQTtvQkFBVSxHQUFHQyxLQUFLOzhCQUNuREg7O1lBR0xJLEdBQUcsQ0FBQyxFQUFFSixRQUFRLEVBQUVDLFNBQVMsRUFBRUksSUFBSSxFQUFFSCxPQUFPLEVBQUUsR0FBR0MsT0FBWSxpQkFDdkQscUJBQUNDO29CQUFFSCxXQUFXQTtvQkFB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