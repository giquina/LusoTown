{"version":3,"sources":["/workspaces/LusoTown/web-app/src/components/LusoBotWidget.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport {\n  ChatBubbleLeftRightIcon,\n  XMarkIcon,\n  SparklesIcon,\n  HeartIcon,\n  MinusIcon,\n  PlusIcon,\n} from \"@heroicons/react/24/outline\";\nimport { HeartIcon as HeartSolidIcon } from \"@heroicons/react/24/solid\";\nimport { useLanguage } from \"@/context/LanguageContext\";\nimport {\n  COMPONENT_Z_INDEX,\n  getMobileWidgetClasses,\n} from \"@/config/z-index-layers\";\nimport LusoBotChat from \"./LusoBotChat\";\nimport { useAppDownloadBarVisible } from \"./AppDownloadBar\";\nimport { useWidget } from \"./WidgetManager\";\n\n// Simple, consistent welcome messages (no randomization)\nconst WELCOME_MESSAGES = {\n  pt: [\"Olá! Sou o LusoBot. Como posso ajudar-te hoje?\"],\n  en: [\"Hi! I’m LusoBot. How can I help you today?\"],\n};\n\ninterface LusoBotWidgetProps {\n  position?: \"bottom-right\" | \"bottom-left\" | \"top-right\" | \"top-left\";\n  autoOpen?: boolean;\n  showWelcomeMessage?: boolean;\n  customGreeting?: string;\n  theme?: \"light\" | \"dark\" | \"portuguese\";\n}\n\ninterface FloatingMessage {\n  id: string;\n  text: string;\n  type: \"welcome\" | \"suggestion\" | \"help\";\n  visible: boolean;\n}\n\nexport default function LusoBotWidget({\n  position = \"bottom-right\",\n  autoOpen = false,\n  showWelcomeMessage = true,\n  customGreeting,\n  theme = \"portuguese\",\n}: LusoBotWidgetProps) {\n  const { language } = useLanguage();\n  const [isOpen, setIsOpen] = useState(autoOpen);\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [floatingMessages, setFloatingMessages] = useState<FloatingMessage[]>(\n    []\n  );\n  const [hasInteracted, setHasInteracted] = useState(false);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [isMobile, setIsMobile] = useState(false);\n  const [isKeyboardOpen, setIsKeyboardOpen] = useState(false);\n  \n  // Use Widget Management System\n  const widgetId = 'lusobot-widget';\n  const { isAppBarVisible, classes: widgetClasses, zIndex } = useWidget(widgetId, 'chat');\n  // Feature flag to disable extra contextual popups\n  const ENABLE_CONTEXTUAL_SUGGESTIONS = false;\n\n  // Lightweight routes for quick actions (fallbacks if import is unavailable)\n  const ROUTES_SAFE = {\n    events: \"/events\",\n    businessDirectory: \"/business-directory\",\n    signup: \"/apply\",\n  } as const;\n\n  // Position classes with mobile-safe positioning\n  const positionClasses = {\n    \"bottom-right\": \"bottom-6 right-6 md:bottom-6 md:right-6\",\n    \"bottom-left\": \"bottom-6 left-6 md:bottom-6 md:left-6\",\n    \"top-right\": \"top-6 right-6\",\n    \"top-left\": \"top-6 left-6\",\n  };\n\n  // Dynamic positioning based on Widget Management System\n  const getCurrentPositionClass = () => {\n    if (isMobile) {\n      // Use widget management system for mobile positioning\n      const baseBottomClass = isAppBarVisible ? 'bottom-40' : 'bottom-24';\n      return `${baseBottomClass} right-4 safe-area-bottom`;\n    }\n    return positionClasses[position];\n  };\n\n  // Mobile detection and resize handler\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n\n    checkMobile();\n    window.addEventListener(\"resize\", checkMobile);\n    return () => window.removeEventListener(\"resize\", checkMobile);\n  }, []);\n\n  // Keyboard detection for mobile - hide widget when keyboard is open\n  useEffect(() => {\n    if (!isMobile) return;\n\n    const initialViewportHeight =\n      window.visualViewport?.height || window.innerHeight;\n\n    const handleViewportChange = () => {\n      if (window.visualViewport) {\n        const currentHeight = window.visualViewport.height;\n        const heightDifference = initialViewportHeight - currentHeight;\n        setIsKeyboardOpen(heightDifference > 150); // Keyboard likely open if viewport shrunk by 150px+\n      }\n    };\n\n    if (window.visualViewport) {\n      window.visualViewport.addEventListener(\"resize\", handleViewportChange);\n      return () =>\n        window.visualViewport?.removeEventListener(\n          \"resize\",\n          handleViewportChange\n        );\n    }\n  }, [isMobile]);\n\n  // Theme configurations\n  const themes = {\n    light: {\n      buttonBg: \"bg-white shadow-lg border border-gray-200\",\n      buttonHover: \"hover:shadow-xl\",\n      iconColor: \"text-primary-600\",\n      chatBg: \"bg-white\",\n      badgeColor: \"bg-red-500\",\n    },\n    dark: {\n      buttonBg: \"bg-gray-800 shadow-lg\",\n      buttonHover: \"hover:shadow-xl\",\n      iconColor: \"text-white\",\n      chatBg: \"bg-gray-800\",\n      badgeColor: \"bg-red-500\",\n    },\n    portuguese: {\n      buttonBg: \"bg-gradient-to-r from-primary-500 to-secondary-500 shadow-lg\",\n      buttonHover:\n        \"hover:shadow-xl hover:from-primary-600 hover:to-secondary-600\",\n      iconColor: \"text-white\",\n      chatBg: \"bg-white\",\n      badgeColor: \"bg-red-500\",\n    },\n  };\n\n  const currentTheme = themes[theme];\n\n  // Welcome messages based on language and navigation guidance\n\n  // Initialize floating messages (no randomization)\n  useEffect(() => {\n    if (!showWelcomeMessage || hasInteracted) return;\n\n    const timer = setTimeout(() => {\n      const messages =\n        WELCOME_MESSAGES[language as keyof typeof WELCOME_MESSAGES];\n      const welcomeText = messages[0];\n\n      const newMessage: FloatingMessage = {\n        id: `welcome_${Date.now()}`,\n        text: (customGreeting ?? welcomeText) as string,\n        type: \"welcome\",\n        visible: true,\n      };\n\n      setFloatingMessages([newMessage]);\n      setUnreadCount(1);\n\n      // Hide message after 10 seconds\n      setTimeout(() => {\n        setFloatingMessages((prev) =>\n          prev.map((msg) => ({ ...msg, visible: false }))\n        );\n      }, 10000);\n    }, 3000); // Show after 3 seconds\n\n    return () => clearTimeout(timer);\n  }, [language, showWelcomeMessage, hasInteracted, customGreeting]);\n\n  // (Optional) contextual suggestions based on page — disabled when flag is false\n  useEffect(() => {\n    if (!ENABLE_CONTEXTUAL_SUGGESTIONS) return;\n    const pathname = window.location.pathname;\n    let suggestion = \"\";\n\n    if (pathname.includes(\"/events\")) {\n      suggestion =\n        language === \"pt\"\n          ? \"Vejo que estás na página de eventos! De que região és? Posso recomendar eventos específicos!\"\n          : \"I see you're on the events page! Where are you from? I can recommend specific events!\";\n    } else if (pathname.includes(\"/business-directory\")) {\n      suggestion =\n        language === \"pt\"\n          ? \"Procuras negócios portugueses? Diz-me a tua localização ou tipo de serviço!\"\n          : \"Looking for Portuguese businesses? Tell me your location or type of service!\";\n    } else if (pathname.includes(\"/matches\")) {\n      suggestion =\n        language === \"pt\"\n          ? \"Quer encontrar outros portugueses? Conte-me sobre os teus interesses!\"\n          : \"Want to find other Portuguese speakers? Tell me about your interests!\";\n    } else if (pathname.includes(\"/community\")) {\n      suggestion =\n        language === \"pt\"\n          ? \"Interessado na comunidade? De onde és e o que procuras?\"\n          : \"Interested in the community? Where are you from and what are you looking for?\";\n    } else if (pathname === \"/\") {\n      suggestion =\n        language === \"pt\"\n          ? \"Bem-vindo ao LusoTown! De onde és e o que te traz aqui?\"\n          : \"Welcome to LusoTown! Where are you from and what brings you here?\";\n    }\n\n    if (showWelcomeMessage && suggestion && !hasInteracted) {\n      const timer = setTimeout(() => {\n        const newMessage: FloatingMessage = {\n          id: `suggestion_${Date.now()}`,\n          text: suggestion,\n          type: \"suggestion\",\n          visible: true,\n        };\n\n        setFloatingMessages((prev) => [...prev, newMessage]);\n        setUnreadCount((prev) => prev + 1);\n\n        setTimeout(() => {\n          setFloatingMessages((prev) =>\n            prev.map((msg) =>\n              msg.id === newMessage.id ? { ...msg, visible: false } : msg\n            )\n          );\n        }, 8000);\n      }, 5000);\n\n      return () => clearTimeout(timer);\n    }\n  }, [\n    language,\n    hasInteracted,\n    showWelcomeMessage,\n    ENABLE_CONTEXTUAL_SUGGESTIONS,\n  ]);\n\n  const handleOpen = () => {\n    setIsOpen(true);\n    setIsMinimized(false);\n    setHasInteracted(true);\n    setUnreadCount(0);\n    setFloatingMessages([]);\n    \n    // Scroll chat to top when opened (Priority 1 enhancement)\n    setTimeout(() => {\n      const chatContainer = document.querySelector('[data-lusobot-chat-container]') || \n                            document.querySelector('.lusobot-chat-container');\n      if (chatContainer) {\n        chatContainer.scrollTop = 0;\n        // Smooth scroll to top for better UX\n        chatContainer.scrollTo({ top: 0, behavior: 'smooth' });\n      }\n    }, 100);\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n    setIsMinimized(false);\n  };\n\n  const handleMinimize = () => {\n    setIsMinimized(true);\n  };\n\n  const handleMaximize = () => {\n    setIsMinimized(false);\n  };\n\n  const dismissFloatingMessage = (messageId: string) => {\n    setFloatingMessages((prev) =>\n      prev.map((msg) =>\n        msg.id === messageId ? { ...msg, visible: false } : msg\n      )\n    );\n    setUnreadCount((prev) => Math.max(0, prev - 1));\n  };\n\n  return (\n    <>\n      {/* Floating Messages */}\n      <AnimatePresence>\n        {floatingMessages.map(\n          (message) =>\n            message.visible &&\n            !isOpen && (\n              <motion.div\n                key={message.id}\n                initial={{ opacity: 0, y: 20, scale: 0.8 }}\n                animate={{ opacity: 1, y: 0, scale: 1 }}\n                exit={{ opacity: 0, y: 20, scale: 0.8 }}\n                className={`fixed ${getCurrentPositionClass()} z-[${zIndex}] ${\n                  isMobile ? (isAppBarVisible ? \"bottom-44\" : \"bottom-28\") : \"bottom-20\"\n                } max-w-xs`}\n              >\n                <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 p-4 relative\">\n                  {/* Close button */}\n                  <button\n                    onClick={() => dismissFloatingMessage(message.id)}\n                    className=\"absolute top-2 right-2 w-6 h-6 bg-gray-100 rounded-full flex items-center justify-center\n                    hover:bg-gray-200 transition-colors\"\n                  >\n                    <XMarkIcon className=\"w-3 h-3 text-gray-500\" />\n                  </button>\n\n                  {/* Message content */}\n                  <div className=\"pr-6\">\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      <div className=\"w-6 h-6 bg-gradient-to-r from-primary-500 to-secondary-500 rounded-full flex items-center justify-center\">\n                        <span className=\"text-white text-xs\">🇵🇹</span>\n                      </div>\n                      <span className=\"text-sm font-medium text-gray-900\">\n                        LusoBot\n                      </span>\n                    </div>\n\n                    <p className=\"text-sm text-gray-700 leading-relaxed\">\n                      {message.text}\n                    </p>\n\n                    {/* Beginner-friendly quick actions */}\n                    <div className=\"mt-3 flex flex-wrap gap-2\">\n                      <a\n                        href={ROUTES_SAFE.events}\n                        className=\"text-xs px-2 py-1 rounded-full bg-primary-50 text-primary-700 border border-primary-200 hover:bg-primary-100\"\n                      >\n                        {language === \"pt\"\n                          ? \"Encontrar eventos\"\n                          : \"Find events\"}\n                      </a>\n                      <a\n                        href={ROUTES_SAFE.businessDirectory}\n                        className=\"text-xs px-2 py-1 rounded-full bg-yellow-50 text-yellow-700 border border-yellow-200 hover:bg-yellow-100\"\n                      >\n                        {language === \"pt\"\n                          ? \"Negócios portugueses\"\n                          : \"Portuguese businesses\"}\n                      </a>\n                      <a\n                        href={ROUTES_SAFE.signup}\n                        className=\"text-xs px-2 py-1 rounded-full bg-green-50 text-green-700 border border-green-200 hover:bg-green-100\"\n                      >\n                        {language === \"pt\" ? \"Começar\" : \"Get started\"}\n                      </a>\n                    </div>\n\n                    <button\n                      onClick={handleOpen}\n                      className=\"mt-3 text-xs font-medium text-primary-600 hover:text-primary-700 transition-colors\"\n                    >\n                      {language === \"pt\" ? \"Conversar agora\" : \"Chat now\"}\n                    </button>\n                  </div>\n\n                  {/* Tail */}\n                  <div\n                    className={`absolute ${\n                      position.includes(\"right\")\n                        ? \"-bottom-2 right-6\"\n                        : \"-bottom-2 left-6\"\n                    } \n                  w-4 h-4 bg-white border-r border-b border-gray-100 transform rotate-45`}\n                  />\n                </div>\n              </motion.div>\n            )\n        )}\n      </AnimatePresence>\n\n      {/* Main Chat Widget */}\n      <div\n        className={\n          isMobile\n            ? getMobileWidgetClasses(\"chat\", isAppBarVisible)\n            : `fixed ${getCurrentPositionClass()} z-[${zIndex}]`\n        }\n      >\n        <AnimatePresence>\n          {isOpen && (\n            <motion.div\n              initial={{ opacity: 0, scale: 0.8, y: 20 }}\n              animate={{ opacity: 1, scale: 1, y: 0 }}\n              exit={{ opacity: 0, scale: 0.8, y: 20 }}\n              transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n              className={`mb-4 ${\n                isMinimized\n                  ? \"w-80 h-16 md:w-80 md:h-16\"\n                  : \"w-[90vw] max-w-sm h-[68vh] max-h-[560px] md:w-96 md:h-[560px]\"\n              } ${\n                currentTheme.chatBg\n              } rounded-2xl shadow-2xl border border-gray-200 overflow-hidden`}\n            >\n              {isMinimized ? (\n                <div className=\"h-full flex items-center justify-between p-4\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"w-8 h-8 bg-gradient-to-r from-primary-500 to-secondary-500 rounded-full flex items-center justify-center\">\n                      <span className=\"text-white text-sm\">🇵🇹</span>\n                    </div>\n                    <span className=\"font-medium text-gray-900\">LusoBot</span>\n                  </div>\n\n                  <div className=\"flex items-center gap-2\">\n                    <button\n                      onClick={handleMaximize}\n                      className=\"w-8 h-8 bg-gray-100 rounded-lg flex items-center justify-center\n                        hover:bg-gray-200 transition-colors\"\n                    >\n                      <PlusIcon className=\"w-4 h-4 text-gray-600\" />\n                    </button>\n                    <button\n                      onClick={handleClose}\n                      className=\"w-8 h-8 bg-gray-100 rounded-lg flex items-center justify-center\n                        hover:bg-gray-200 transition-colors\"\n                    >\n                      <XMarkIcon className=\"w-4 h-4 text-gray-600\" />\n                    </button>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"h-full flex flex-col\">\n                  {/* Chat Header - Priority 1 Enhancement: Clear minimize/close buttons */}\n                  <div className=\"bg-gradient-to-r from-primary-500 to-secondary-500 p-4 flex items-center justify-between\">\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"w-8 h-8 bg-white/20 rounded-full flex items-center justify-center\">\n                        <span className=\"text-white text-sm\">🇵🇹</span>\n                      </div>\n                      <div>\n                        <h3 className=\"font-bold text-white\">LusoBot</h3>\n                        <p className=\"text-xs text-white/80\">\n                          {language === \"pt\"\n                            ? \"Assistente Cultural\"\n                            : \"Cultural Assistant\"}\n                        </p>\n                      </div>\n                    </div>\n\n                    <div className=\"flex items-center gap-3\">\n                      <button\n                        onClick={handleMinimize}\n                        className=\"w-9 h-9 bg-white/20 rounded-lg flex items-center justify-center\n                          hover:bg-white/30 transition-colors focus:ring-2 focus:ring-white/50\n                          min-h-[44px] min-w-[44px]\"\n                        aria-label={language === \"pt\" ? \"Minimizar\" : \"Minimize\"}\n                        title={language === \"pt\" ? \"Minimizar\" : \"Minimize\"}\n                      >\n                        <MinusIcon className=\"w-5 h-5 text-white\" />\n                      </button>\n                      <button\n                        onClick={handleClose}\n                        className=\"w-9 h-9 bg-white/20 rounded-lg flex items-center justify-center\n                          hover:bg-white/30 transition-colors focus:ring-2 focus:ring-white/50\n                          min-h-[44px] min-w-[44px]\"\n                        aria-label={language === \"pt\" ? \"Fechar\" : \"Close\"}\n                        title={language === \"pt\" ? \"Fechar\" : \"Close\"}\n                      >\n                        <XMarkIcon className=\"w-5 h-5 text-white\" />\n                      </button>\n                    </div>\n                  </div>\n\n                  {/* Chat Content - Priority 1 Enhancement: Max height with internal scrolling */}\n                  <div className=\"flex-1 relative overflow-hidden max-h-[400px]\">\n                    <LusoBotChat\n                      isEmbedded={true}\n                      className=\"h-full border-0 bg-transparent lusobot-chat-container\"\n                      onClose={handleClose}\n                      data-lusobot-chat-container=\"true\"\n                    />\n                  </div>\n                </div>\n              )}\n            </motion.div>\n          )}\n        </AnimatePresence>\n\n        {/* Floating Action Button */}\n        {!isOpen && !isKeyboardOpen && (\n          <motion.button\n            initial={{ scale: 0 }}\n            animate={{ scale: 1 }}\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9 }}\n            onClick={handleOpen}\n            className={`${isMobile ? \"w-14 h-14\" : \"w-16 h-16\"} rounded-full ${\n              currentTheme.buttonBg\n            } ${currentTheme.buttonHover}\n              flex items-center justify-center transition-all duration-200 relative group min-h-[44px] min-w-[44px]`}\n            aria-label={\n              language === \"pt\"\n                ? \"Abrir LusoBot - Assistente Cultural Português\"\n                : \"Open LusoBot - Portuguese-speaking Cultural Assistant\"\n            }\n            role=\"button\"\n            tabIndex={0}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\" || e.key === \" \") {\n                e.preventDefault();\n                handleOpen();\n              }\n            }}\n          >\n            {/* Pulse animation for attention */}\n            {unreadCount > 0 && (\n              <motion.div\n                animate={{ scale: [1, 1.2, 1] }}\n                transition={{ repeat: Infinity, duration: 2 }}\n                className=\"absolute inset-0 rounded-full bg-primary-400 opacity-30\"\n              />\n            )}\n\n            {/* Main Icon with Lusophone Context */}\n            <div className=\"relative\">\n              {unreadCount > 0 ? (\n                <HeartSolidIcon\n                  className={`${isMobile ? \"w-5 h-5\" : \"w-6 h-6\"} ${\n                    currentTheme.iconColor\n                  }`}\n                />\n              ) : (\n                <ChatBubbleLeftRightIcon\n                  className={`${isMobile ? \"w-5 h-5\" : \"w-6 h-6\"} ${\n                    currentTheme.iconColor\n                  }`}\n                />\n              )}\n\n              {/* Portuguese heritage indicator */}\n              <div className=\"absolute -top-1 -left-1 w-3 h-3 text-[10px] flex items-center justify-center\">\n                🇵🇹\n              </div>\n\n              {/* Unread count badge */}\n              {unreadCount > 0 && (\n                <div\n                  className={`absolute -top-2 -right-2 w-5 h-5 ${currentTheme.badgeColor} \n                  rounded-full flex items-center justify-center`}\n                >\n                  <span className=\"text-xs font-bold text-white\">\n                    {unreadCount > 9 ? \"9+\" : unreadCount}\n                  </span>\n                </div>\n              )}\n            </div>\n\n            {/* Hover tooltip */}\n            <div\n              className=\"absolute bottom-full mb-2 left-1/2 transform -translate-x-1/2 \n              bg-gray-800 text-white text-xs px-2 py-1 rounded-lg opacity-0 group-hover:opacity-100 \n              transition-opacity duration-200 whitespace-nowrap pointer-events-none\"\n            >\n              {language === \"pt\"\n                ? \"Conversar com LusoBot\"\n                : \"Chat with LusoBot\"}\n              <div\n                className=\"absolute top-full left-1/2 transform -translate-x-1/2 \n                w-2 h-2 bg-gray-800 rotate-45\"\n              />\n            </div>\n          </motion.button>\n        )}\n      </div>\n    </>\n  );\n}\n"],"names":["LusoBotWidget","WELCOME_MESSAGES","pt","en","position","autoOpen","showWelcomeMessage","customGreeting","theme","language","useLanguage","isOpen","setIsOpen","useState","isMinimized","setIsMinimized","floatingMessages","setFloatingMessages","hasInteracted","setHasInteracted","unreadCount","setUnreadCount","isMobile","setIsMobile","isKeyboardOpen","setIsKeyboardOpen","widgetId","isAppBarVisible","classes","widgetClasses","zIndex","useWidget","ENABLE_CONTEXTUAL_SUGGESTIONS","ROUTES_SAFE","events","businessDirectory","signup","positionClasses","getCurrentPositionClass","baseBottomClass","useEffect","checkMobile","window","innerWidth","addEventListener","removeEventListener","initialViewportHeight","visualViewport","height","innerHeight","handleViewportChange","currentHeight","heightDifference","themes","light","buttonBg","buttonHover","iconColor","chatBg","badgeColor","dark","portuguese","currentTheme","timer","setTimeout","messages","welcomeText","newMessage","id","Date","now","text","type","visible","prev","map","msg","clearTimeout","pathname","location","suggestion","includes","handleOpen","chatContainer","document","querySelector","scrollTop","scrollTo","top","behavior","handleClose","handleMinimize","handleMaximize","dismissFloatingMessage","messageId","Math","max","AnimatePresence","message","motion","div","initial","opacity","y","scale","animate","exit","className","button","onClick","XMarkIcon","span","p","a","href","getMobileWidgetClasses","transition","stiffness","damping","PlusIcon","h3","aria-label","title","MinusIcon","LusoBotChat","isEmbedded","onClose","data-lusobot-chat-container","whileHover","whileTap","role","tabIndex","onKeyDown","e","key","preventDefault","repeat","Infinity","duration","HeartSolidIcon","ChatBubbleLeftRightIcon"],"mappings":"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"}