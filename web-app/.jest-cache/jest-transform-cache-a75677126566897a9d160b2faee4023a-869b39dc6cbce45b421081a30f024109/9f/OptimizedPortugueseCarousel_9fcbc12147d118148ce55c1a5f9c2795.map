{"version":3,"sources":["/workspaces/LusoTown/web-app/src/components/carousels/OptimizedPortugueseCarousel.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useEffect, useCallback, useRef, memo, Suspense } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { \n  ChevronLeftIcon, \n  ChevronRightIcon,\n  PauseIcon,\n  PlayIcon,\n  WifiIcon,\n  CloudIcon,\n  DevicePhoneMobileIcon,\n  BoltIcon\n} from '@heroicons/react/24/outline'\nimport { useLanguage } from '@/context/LanguageContext'\nimport { PORTUGUESE_COLORS } from '@/config/brand'\nimport { useCarouselPerformanceOptimization } from '@/hooks/useCarouselPerformanceOptimization'\nimport { usePortuguesePWAFeatures } from '@/hooks/usePortuguesePWAFeatures'\nimport { EnhancedMobileGestures } from '../EnhancedMobileGestures'\nimport logger from '@/utils/logger'\n\n// Enhanced interfaces building on existing carousel types\ninterface OptimizedCarouselProps<T = any> {\n  items: T[]\n  renderItem: (item: T, index: number, isVisible: boolean) => React.ReactNode\n  title?: {\n    en: string\n    pt: string\n  }\n  subtitle?: {\n    en: string\n    pt: string\n  }\n  className?: string\n  autoAdvance?: boolean\n  autoAdvanceInterval?: number\n  showControls?: boolean\n  showDots?: boolean\n  onItemClick?: (item: T, index: number) => void\n  loading?: boolean\n  // Enhanced optimization props\n  enablePerformanceOptimization?: boolean\n  enablePortugueseCulturalOptimization?: boolean\n  enableOfflineMode?: boolean\n  optimizationLevel?: 'basic' | 'standard' | 'aggressive'\n  contentType?: 'events' | 'businesses' | 'cultural' | 'mixed'\n}\n\ninterface CarouselPerformanceStats {\n  loadTime: number\n  renderTime: number\n  interactionLatency: number\n  memoryUsage: number\n  frameRate: number\n  optimizationScore: number\n}\n\nconst OptimizedPortugueseCarousel = memo(<T extends any>({\n  items,\n  renderItem,\n  title,\n  subtitle,\n  className = '',\n  autoAdvance = false,\n  autoAdvanceInterval = 5000,\n  showControls = true,\n  showDots = true,\n  onItemClick,\n  loading = false,\n  enablePerformanceOptimization = true,\n  enablePortugueseCulturalOptimization = true,\n  enableOfflineMode = true,\n  optimizationLevel = 'standard',\n  contentType = 'mixed'\n}: OptimizedCarouselProps<T>) => {\n  const { language, t } = useLanguage()\n  const [currentIndex, setCurrentIndex] = useState(0)\n  const [isPlaying, setIsPlaying] = useState(autoAdvance)\n  const [visibleItems, setVisibleItems] = useState<Set<number>>(new Set())\n  const [performanceStats, setPerformanceStats] = useState<CarouselPerformanceStats>({\n    loadTime: 0,\n    renderTime: 0,\n    interactionLatency: 0,\n    memoryUsage: 0,\n    frameRate: 60,\n    optimizationScore: 100\n  })\n\n  const containerRef = useRef<HTMLDivElement>(null)\n  const itemsPerView = React.useMemo(() => {\n    if (typeof window === 'undefined') return 1\n    return window.innerWidth <= 768 ? 1 : window.innerWidth <= 1024 ? 2 : 3\n  }, [])\n  const maxIndex = Math.max(0, items.length - itemsPerView)\n\n  // Enhanced performance optimization hook\n  const {\n    metrics,\n    optimizePortugueseImages,\n    analyzePortugueseReadingPatterns,\n    measureInteractionLatency,\n    recordInteractionComplete,\n    getOptimalAutoAdvanceTime,\n    getOptimizationRecommendations\n  } = useCarouselPerformanceOptimization({\n    enableRealTimeMonitoring: enablePerformanceOptimization,\n    enablePortugueseOptimizations: enablePortugueseCulturalOptimization,\n    optimizationLevel\n  })\n\n  // PWA features hook\n  const {\n    offlineCapabilities,\n    queueOfflineAction,\n    backgroundSyncData,\n    isFullyOfflineCapable\n  } = usePortuguesePWAFeatures()\n\n  // Dynamic auto-advance timing based on Portuguese reading patterns\n  const dynamicAutoAdvanceTime = getOptimalAutoAdvanceTime(\n    items[currentIndex]?.title?.[language]?.length || 100\n  )\n\n  // Intersection Observer for lazy loading\n  useEffect(() => {\n    if (!enablePerformanceOptimization) return\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          const index = parseInt(entry.target.getAttribute('data-index') || '0')\n          if (entry.isIntersecting) {\n            setVisibleItems(prev => new Set([...prev, index]))\n          } else {\n            setVisibleItems(prev => {\n              const newSet = new Set(prev)\n              newSet.delete(index)\n              return newSet\n            })\n          }\n        })\n      },\n      {\n        root: containerRef.current,\n        rootMargin: '50px',\n        threshold: 0.1\n      }\n    )\n\n    const itemElements = containerRef.current?.querySelectorAll('.carousel-item')\n    itemElements?.forEach(el => observer.observe(el))\n\n    return () => observer.disconnect()\n  }, [items, enablePerformanceOptimization])\n\n  // Performance monitoring\n  useEffect(() => {\n    if (!enablePerformanceOptimization) return\n\n    const startTime = performance.now()\n    \n    const measurePerformance = () => {\n      const endTime = performance.now()\n      const loadTime = endTime - startTime\n      \n      setPerformanceStats(prev => ({\n        ...prev,\n        loadTime,\n        renderTime: metrics.renderTime,\n        interactionLatency: metrics.interactionLatency,\n        memoryUsage: metrics.memoryUsage,\n        frameRate: metrics.frameRate,\n        optimizationScore: Math.max(0, 100 - (metrics.memoryUsage / 2) - (loadTime / 10))\n      }))\n    }\n\n    requestAnimationFrame(measurePerformance)\n  }, [metrics, enablePerformanceOptimization])\n\n  // Enhanced navigation with performance tracking\n  const goToSlide = useCallback((index: number) => {\n    measureInteractionLatency()\n    \n    const newIndex = Math.max(0, Math.min(index, maxIndex))\n    setCurrentIndex(newIndex)\n    \n    // Analyze Portuguese reading patterns\n    if (enablePortugueseCulturalOptimization) {\n      const dwellTime = Date.now() - (window as any).lastSlideTime || 0\n      analyzePortugueseReadingPatterns({\n        scrollVelocity: Math.abs(newIndex - currentIndex),\n        dwellTime,\n        engagementScore: visibleItems.size > 0 ? 85 : 50\n      })\n    }\n    \n    ;(window as any).lastSlideTime = Date.now()\n    recordInteractionComplete()\n  }, [maxIndex, currentIndex, measureInteractionLatency, recordInteractionComplete, analyzePortugueseReadingPatterns, enablePortugueseCulturalOptimization, visibleItems.size])\n\n  const goToNext = useCallback(() => goToSlide(currentIndex >= maxIndex ? 0 : currentIndex + 1), [goToSlide, currentIndex, maxIndex])\n  const goToPrevious = useCallback(() => goToSlide(currentIndex <= 0 ? maxIndex : currentIndex - 1), [goToSlide, currentIndex, maxIndex])\n\n  // Enhanced item click with offline support\n  const handleItemClick = useCallback((item: T, index: number) => {\n    measureInteractionLatency()\n    \n    if (offlineCapabilities.isOffline) {\n      // Queue action for when back online\n      queueOfflineAction({\n        type: 'favorite-event',\n        data: { itemId: (item as any).id, index }\n      })\n    }\n    \n    onItemClick?.(item, index)\n    recordInteractionComplete()\n  }, [measureInteractionLatency, recordInteractionComplete, offlineCapabilities.isOffline, queueOfflineAction, onItemClick])\n\n  // Auto-advance with Portuguese timing optimization\n  useEffect(() => {\n    if (!isPlaying || items.length <= itemsPerView) return\n\n    const interval = setInterval(() => {\n      goToNext()\n    }, dynamicAutoAdvanceTime)\n\n    return () => clearInterval(interval)\n  }, [isPlaying, items.length, itemsPerView, goToNext, dynamicAutoAdvanceTime])\n\n  // PWA optimization recommendations\n  const optimizationRecommendations = getOptimizationRecommendations()\n\n  if (loading) {\n    return (\n      <div className={`optimized-carousel-loading ${className}`}>\n        <div className=\"animate-pulse space-y-4\">\n          <div className=\"h-8 bg-gray-200 rounded w-1/2 mx-auto\"></div>\n          <div className=\"grid gap-4\" style={{ gridTemplateColumns: `repeat(${itemsPerView}, 1fr)` }}>\n            {Array.from({ length: itemsPerView }).map((_, i) => (\n              <div key={i} className=\"h-64 bg-gray-200 rounded-xl\"></div>\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  if (items.length === 0) {\n    return (\n      <div className={`optimized-carousel-empty ${className}`}>\n        <div className=\"text-center py-12\">\n          <div className=\"w-16 h-16 bg-primary-100 rounded-full flex items-center justify-center mb-4 mx-auto\">\n            <span className=\"text-2xl\">üèõÔ∏è</span>\n          </div>\n          <p className=\"text-gray-600\">\n            {t('carousel.empty', 'No Portuguese cultural content available')}\n          </p>\n          {offlineCapabilities.isOffline && (\n            <p className=\"text-sm text-yellow-600 mt-2\">\n              {t('carousel.offline', 'You are offline. Some content may be unavailable.')}\n            </p>\n          )}\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <section \n      className={`optimized-portuguese-carousel ${className} ${offlineCapabilities.isOffline ? 'offline-mode' : ''}`}\n      role=\"region\"\n      aria-label={title ? title[language] : t('carousel.defaultLabel', 'Portuguese cultural carousel')}\n    >\n      {/* Performance and PWA Status Bar */}\n      {enablePerformanceOptimization && (\n        <div className=\"mb-4 flex items-center justify-between text-xs text-gray-500\">\n          <div className=\"flex items-center gap-4\">\n            {offlineCapabilities.isOffline ? (\n              <div className=\"flex items-center gap-1 text-yellow-600\">\n                <WifiIcon className=\"w-4 h-4\" />\n                <span>{t('carousel.offline', 'Offline Mode')}</span>\n              </div>\n            ) : metrics.networkStatus === 'slow' ? (\n              <div className=\"flex items-center gap-1 text-orange-600\">\n                <CloudIcon className=\"w-4 h-4\" />\n                <span>{t('carousel.slowConnection', 'Slow Connection')}</span>\n              </div>\n            ) : (\n              <div className=\"flex items-center gap-1 text-green-600\">\n                <BoltIcon className=\"w-4 h-4\" />\n                <span>{t('carousel.optimized', 'Optimized')}</span>\n              </div>\n            )}\n            \n            {typeof window !== 'undefined' && window.innerWidth <= 768 && (\n              <div className=\"flex items-center gap-1 text-blue-600\">\n                <DevicePhoneMobileIcon className=\"w-4 h-4\" />\n                <span>Mobile</span>\n              </div>\n            )}\n          </div>\n          \n          <div className=\"text-right\">\n            <span>Score: {Math.round(performanceStats.optimizationScore)}%</span>\n          </div>\n        </div>\n      )}\n\n      {/* Header */}\n      {(title || subtitle) && (\n        <div className=\"mb-8 text-center\">\n          {title && (\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-2\">\n              {title[language]}\n            </h2>\n          )}\n          {subtitle && (\n            <p className=\"text-lg text-gray-600\">\n              {subtitle[language]}\n            </p>\n          )}\n          \n          {/* Performance indicator for development */}\n          {process.env.NODE_ENV === 'development' && enablePerformanceOptimization && (\n            <div className=\"text-xs text-gray-400 mt-2 space-x-4\">\n              <span>Load: {Math.round(performanceStats.loadTime)}ms</span>\n              <span>Memory: {Math.round(performanceStats.memoryUsage)}MB</span>\n              <span>FPS: {metrics.frameRate}</span>\n              {optimizationRecommendations.length > 0 && (\n                <span className=\"text-orange-500\">\n                  {optimizationRecommendations.length} optimizations available\n                </span>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Enhanced Carousel Container with Portuguese Gestures */}\n      <EnhancedMobileGestures\n        onSwipe={(gesture) => {\n          if (gesture.direction === 'left') goToNext()\n          else if (gesture.direction === 'right') goToPrevious()\n        }}\n        enablePortugueseGestures={enablePortugueseCulturalOptimization}\n        enableHapticFeedback={false}\n        enableVoiceAnnouncements={language === 'pt'}\n        className=\"relative\"\n      >\n        <div\n          ref={containerRef}\n          className=\"relative overflow-hidden rounded-xl bg-gradient-to-br from-primary-50 to-gold-50 p-4 md:p-6\"\n        >\n          {/* Navigation Controls */}\n          {items.length > itemsPerView && showControls && (\n            <>\n              <button\n                onClick={goToPrevious}\n                className=\"absolute left-2 md:left-4 top-1/2 -translate-y-1/2 z-20 \n                           bg-white/90 hover:bg-white shadow-lg hover:shadow-xl \n                           w-11 h-11 md:w-12 md:h-12 rounded-full flex items-center justify-center\n                           border border-primary-200 hover:border-primary-300\n                           transition-all duration-300 group touch-manipulation\n                           focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2\"\n                aria-label={t('carousel.previous', 'Previous Portuguese cultural items')}\n                style={{ minWidth: '44px', minHeight: '44px' }}\n              >\n                <ChevronLeftIcon className=\"w-4 h-4 md:w-5 md:h-5 text-primary-600 group-hover:text-primary-800 transition-colors\" />\n              </button>\n\n              <button\n                onClick={goToNext}\n                className=\"absolute right-2 md:right-4 top-1/2 -translate-y-1/2 z-20\n                           bg-white/90 hover:bg-white shadow-lg hover:shadow-xl\n                           w-11 h-11 md:w-12 md:h-12 rounded-full flex items-center justify-center\n                           border border-primary-200 hover:border-primary-300\n                           transition-all duration-300 group touch-manipulation\n                           focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2\"\n                aria-label={t('carousel.next', 'Next Portuguese cultural items')}\n                style={{ minWidth: '44px', minHeight: '44px' }}\n              >\n                <ChevronRightIcon className=\"w-4 h-4 md:w-5 md:h-5 text-primary-600 group-hover:text-primary-800 transition-colors\" />\n              </button>\n            </>\n          )}\n\n          {/* Enhanced Carousel Content with Lazy Loading */}\n          <AnimatePresence mode=\"wait\">\n            <motion.div\n              key={currentIndex}\n              initial={{ opacity: 0, x: 30 }}\n              animate={{ opacity: 1, x: 0 }}\n              exit={{ opacity: 0, x: -30 }}\n              transition={{ duration: 0.25, ease: 'easeInOut' }}\n              className=\"grid gap-4 md:gap-6\"\n              style={{\n                gridTemplateColumns: `repeat(${itemsPerView}, 1fr)`,\n                minHeight: '200px'\n              }}\n            >\n              {items.slice(currentIndex, currentIndex + itemsPerView).map((item, index) => {\n                const globalIndex = currentIndex + index\n                const isVisible = visibleItems.has(globalIndex)\n                \n                return (\n                  <motion.div\n                    key={`${(item as any).id || globalIndex}-${currentIndex}`}\n                    data-index={globalIndex}\n                    className=\"carousel-item cursor-pointer touch-manipulation\"\n                    initial={{ opacity: 0, y: 10 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.2, delay: index * 0.05 }}\n                    whileHover={{ y: -4, scale: 1.02 }}\n                    whileTap={{ scale: 0.98 }}\n                    onClick={() => handleItemClick(item, globalIndex)}\n                    role=\"button\"\n                    tabIndex={0}\n                    aria-label={`${(item as any).title?.[language] || 'Portuguese cultural item'} - ${globalIndex + 1} of ${items.length}`}\n                    style={{ minHeight: '160px' }}\n                  >\n                    <Suspense fallback={\n                      <div className=\"w-full h-full bg-gray-200 rounded-lg animate-pulse flex items-center justify-center\">\n                        <span className=\"text-gray-400 text-sm\">\n                          {t('carousel.loading', 'Loading Portuguese content...')}\n                        </span>\n                      </div>\n                    }>\n                      {renderItem(item, globalIndex, isVisible)}\n                    </Suspense>\n                  </motion.div>\n                )\n              })}\n            </motion.div>\n          </AnimatePresence>\n\n          {/* Mobile swipe hint */}\n          {typeof window !== 'undefined' && window.innerWidth <= 768 && currentIndex === 0 && (\n            <div className=\"absolute bottom-2 left-1/2 transform -translate-x-1/2 flex gap-1\">\n              <div className=\"w-1 h-1 bg-gray-400 rounded-full opacity-50\"></div>\n              <div className=\"w-1 h-1 bg-gray-400 rounded-full opacity-75\"></div>\n              <div className=\"w-1 h-1 bg-primary-500 rounded-full\"></div>\n              <div className=\"w-1 h-1 bg-gray-400 rounded-full opacity-75\"></div>\n              <div className=\"w-1 h-1 bg-gray-400 rounded-full opacity-50\"></div>\n            </div>\n          )}\n        </div>\n\n        {/* Enhanced Dot Indicators */}\n        {items.length > itemsPerView && showDots && (\n          <div className=\"flex justify-center mt-6 space-x-3\">\n            {Array.from({ length: maxIndex + 1 }).map((_, index) => (\n              <button\n                key={index}\n                onClick={() => goToSlide(index)}\n                className={`w-4 h-4 rounded-full transition-all duration-300 touch-manipulation\n                           focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2\n                           ${index === currentIndex \n                             ? 'bg-primary-600 scale-125 shadow-lg' \n                             : 'bg-primary-300 hover:bg-primary-400 hover:scale-110'}`}\n                aria-label={t('carousel.goToSlide', `Go to Portuguese cultural slide ${index + 1} of ${maxIndex + 1}`)}\n                style={{ minWidth: '44px', minHeight: '44px' }}\n              />\n            ))}\n          </div>\n        )}\n      </EnhancedMobileGestures>\n\n      {/* Auto-advance control */}\n      {autoAdvance && (\n        <div className=\"flex justify-center mt-4\">\n          <button\n            onClick={() => setIsPlaying(prev => !prev)}\n            className=\"flex items-center gap-2 bg-white border border-primary-200 rounded-full px-4 py-2 shadow-sm hover:shadow-md transition-all duration-200 touch-manipulation\"\n            style={{ minHeight: '44px' }}\n            aria-label={isPlaying ? t('carousel.pause', 'Pause Portuguese cultural carousel') : t('carousel.play', 'Play Portuguese cultural carousel')}\n          >\n            {isPlaying ? (\n              <PauseIcon className=\"w-4 h-4 text-primary-600\" />\n            ) : (\n              <PlayIcon className=\"w-4 h-4 text-primary-600\" />\n            )}\n            <span className=\"text-sm text-primary-700\">\n              {isPlaying ? t('carousel.pause', 'Pause') : t('carousel.play', 'Play')}\n            </span>\n          </button>\n        </div>\n      )}\n\n      {/* Screen Reader Status */}\n      <div \n        className=\"sr-only\" \n        aria-live=\"polite\" \n        aria-atomic=\"true\"\n        role=\"status\"\n      >\n        {t('carousel.status', `Showing Portuguese cultural items ${currentIndex + 1} to ${Math.min(currentIndex + itemsPerView, items.length)} of ${items.length}. Performance score: ${Math.round(performanceStats.optimizationScore)}%.`)}\n        {offlineCapabilities.isOffline && t('carousel.offlineMode', ' Offline mode active.')}\n      </div>\n    </section>\n  )\n})\n\nOptimizedPortugueseCarousel.displayName = 'OptimizedPortugueseCarousel'\n\nexport default OptimizedPortugueseCarousel\nexport { OptimizedPortugueseCarousel }"],"names":["OptimizedPortugueseCarousel","memo","items","renderItem","title","subtitle","className","autoAdvance","autoAdvanceInterval","showControls","showDots","onItemClick","loading","enablePerformanceOptimization","enablePortugueseCulturalOptimization","enableOfflineMode","optimizationLevel","contentType","language","t","useLanguage","currentIndex","setCurrentIndex","useState","isPlaying","setIsPlaying","visibleItems","setVisibleItems","Set","performanceStats","setPerformanceStats","loadTime","renderTime","interactionLatency","memoryUsage","frameRate","optimizationScore","containerRef","useRef","itemsPerView","React","useMemo","window","innerWidth","maxIndex","Math","max","length","metrics","optimizePortugueseImages","analyzePortugueseReadingPatterns","measureInteractionLatency","recordInteractionComplete","getOptimalAutoAdvanceTime","getOptimizationRecommendations","useCarouselPerformanceOptimization","enableRealTimeMonitoring","enablePortugueseOptimizations","offlineCapabilities","queueOfflineAction","backgroundSyncData","isFullyOfflineCapable","usePortuguesePWAFeatures","dynamicAutoAdvanceTime","useEffect","observer","IntersectionObserver","entries","forEach","entry","index","parseInt","target","getAttribute","isIntersecting","prev","newSet","delete","root","current","rootMargin","threshold","itemElements","querySelectorAll","el","observe","disconnect","startTime","performance","now","measurePerformance","endTime","requestAnimationFrame","goToSlide","useCallback","newIndex","min","dwellTime","Date","lastSlideTime","scrollVelocity","abs","engagementScore","size","goToNext","goToPrevious","handleItemClick","item","isOffline","type","data","itemId","id","interval","setInterval","clearInterval","optimizationRecommendations","div","style","gridTemplateColumns","Array","from","map","_","i","span","p","section","role","aria-label","WifiIcon","networkStatus","CloudIcon","BoltIcon","DevicePhoneMobileIcon","round","h2","process","env","NODE_ENV","EnhancedMobileGestures","onSwipe","gesture","direction","enablePortugueseGestures","enableHapticFeedback","enableVoiceAnnouncements","ref","button","onClick","minWidth","minHeight","ChevronLeftIcon","ChevronRightIcon","AnimatePresence","mode","motion","initial","opacity","x","animate","exit","transition","duration","ease","slice","globalIndex","isVisible","has","data-index","y","delay","whileHover","scale","whileTap","tabIndex","Suspense","fallback","PauseIcon","PlayIcon","aria-live","aria-atomic","displayName"],"mappings":"AAAA;;;;;;;;;;;;IA0fSA,2BAA2B;eAA3BA;;IADT,OAA0C;eAA1C;;;;+DAvfgF;8BACxC;yBAUjC;iCACqB;oDAEuB;0CACV;wCACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCvC,MAAMA,4CAA8BC,IAAAA,WAAI,EAAC,CAAgB,EACvDC,KAAK,EACLC,UAAU,EACVC,KAAK,EACLC,QAAQ,EACRC,YAAY,EAAE,EACdC,cAAc,KAAK,EACnBC,sBAAsB,IAAI,EAC1BC,eAAe,IAAI,EACnBC,WAAW,IAAI,EACfC,WAAW,EACXC,UAAU,KAAK,EACfC,gCAAgC,IAAI,EACpCC,uCAAuC,IAAI,EAC3CC,oBAAoB,IAAI,EACxBC,oBAAoB,UAAU,EAC9BC,cAAc,OAAO,EACK;IAC1B,MAAM,EAAEC,QAAQ,EAAEC,CAAC,EAAE,GAAGC,IAAAA,4BAAW;IACnC,MAAM,CAACC,cAAcC,gBAAgB,GAAGC,IAAAA,eAAQ,EAAC;IACjD,MAAM,CAACC,WAAWC,aAAa,GAAGF,IAAAA,eAAQ,EAAChB;IAC3C,MAAM,CAACmB,cAAcC,gBAAgB,GAAGJ,IAAAA,eAAQ,EAAc,IAAIK;IAClE,MAAM,CAACC,kBAAkBC,oBAAoB,GAAGP,IAAAA,eAAQ,EAA2B;QACjFQ,UAAU;QACVC,YAAY;QACZC,oBAAoB;QACpBC,aAAa;QACbC,WAAW;QACXC,mBAAmB;IACrB;IAEA,MAAMC,eAAeC,IAAAA,aAAM,EAAiB;IAC5C,MAAMC,eAAeC,cAAK,CAACC,OAAO,CAAC;QACjC,IAAI,OAAOC,WAAW,aAAa,OAAO;QAC1C,OAAOA,OAAOC,UAAU,IAAI,MAAM,IAAID,OAAOC,UAAU,IAAI,OAAO,IAAI;IACxE,GAAG,EAAE;IACL,MAAMC,WAAWC,KAAKC,GAAG,CAAC,GAAG5C,MAAM6C,MAAM,GAAGR;IAE5C,yCAAyC;IACzC,MAAM,EACJS,OAAO,EACPC,wBAAwB,EACxBC,gCAAgC,EAChCC,yBAAyB,EACzBC,yBAAyB,EACzBC,yBAAyB,EACzBC,8BAA8B,EAC/B,GAAGC,IAAAA,sEAAkC,EAAC;QACrCC,0BAA0B3C;QAC1B4C,+BAA+B3C;QAC/BE;IACF;IAEA,oBAAoB;IACpB,MAAM,EACJ0C,mBAAmB,EACnBC,kBAAkB,EAClBC,kBAAkB,EAClBC,qBAAqB,EACtB,GAAGC,IAAAA,kDAAwB;IAE5B,mEAAmE;IACnE,MAAMC,yBAAyBV,0BAC7BnD,KAAK,CAACmB,aAAa,EAAEjB,OAAO,CAACc,SAAS,EAAE6B,UAAU;IAGpD,yCAAyC;IACzCiB,IAAAA,gBAAS,EAAC;QACR,IAAI,CAACnD,+BAA+B;QAEpC,MAAMoD,WAAW,IAAIC,qBACnB,CAACC;YACCA,QAAQC,OAAO,CAAC,CAACC;gBACf,MAAMC,QAAQC,SAASF,MAAMG,MAAM,CAACC,YAAY,CAAC,iBAAiB;gBAClE,IAAIJ,MAAMK,cAAc,EAAE;oBACxB/C,gBAAgBgD,CAAAA,OAAQ,IAAI/C,IAAI;+BAAI+C;4BAAML;yBAAM;gBAClD,OAAO;oBACL3C,gBAAgBgD,CAAAA;wBACd,MAAMC,SAAS,IAAIhD,IAAI+C;wBACvBC,OAAOC,MAAM,CAACP;wBACd,OAAOM;oBACT;gBACF;YACF;QACF,GACA;YACEE,MAAMzC,aAAa0C,OAAO;YAC1BC,YAAY;YACZC,WAAW;QACb;QAGF,MAAMC,eAAe7C,aAAa0C,OAAO,EAAEI,iBAAiB;QAC5DD,cAAcd,QAAQgB,CAAAA,KAAMnB,SAASoB,OAAO,CAACD;QAE7C,OAAO,IAAMnB,SAASqB,UAAU;IAClC,GAAG;QAACpF;QAAOW;KAA8B;IAEzC,yBAAyB;IACzBmD,IAAAA,gBAAS,EAAC;QACR,IAAI,CAACnD,+BAA+B;QAEpC,MAAM0E,YAAYC,YAAYC,GAAG;QAEjC,MAAMC,qBAAqB;YACzB,MAAMC,UAAUH,YAAYC,GAAG;YAC/B,MAAM1D,WAAW4D,UAAUJ;YAE3BzD,oBAAoB6C,CAAAA,OAAS,CAAA;oBAC3B,GAAGA,IAAI;oBACP5C;oBACAC,YAAYgB,QAAQhB,UAAU;oBAC9BC,oBAAoBe,QAAQf,kBAAkB;oBAC9CC,aAAac,QAAQd,WAAW;oBAChCC,WAAWa,QAAQb,SAAS;oBAC5BC,mBAAmBS,KAAKC,GAAG,CAAC,GAAG,MAAOE,QAAQd,WAAW,GAAG,IAAMH,WAAW;gBAC/E,CAAA;QACF;QAEA6D,sBAAsBF;IACxB,GAAG;QAAC1C;QAASnC;KAA8B;IAE3C,gDAAgD;IAChD,MAAMgF,YAAYC,IAAAA,kBAAW,EAAC,CAACxB;QAC7BnB;QAEA,MAAM4C,WAAWlD,KAAKC,GAAG,CAAC,GAAGD,KAAKmD,GAAG,CAAC1B,OAAO1B;QAC7CtB,gBAAgByE;QAEhB,sCAAsC;QACtC,IAAIjF,sCAAsC;YACxC,MAAMmF,YAAYC,KAAKT,GAAG,KAAK,AAAC/C,OAAeyD,aAAa,IAAI;YAChEjD,iCAAiC;gBAC/BkD,gBAAgBvD,KAAKwD,GAAG,CAACN,WAAW1E;gBACpC4E;gBACAK,iBAAiB5E,aAAa6E,IAAI,GAAG,IAAI,KAAK;YAChD;QACF;QAEE7D,OAAeyD,aAAa,GAAGD,KAAKT,GAAG;QACzCrC;IACF,GAAG;QAACR;QAAUvB;QAAc8B;QAA2BC;QAA2BF;QAAkCpC;QAAsCY,aAAa6E,IAAI;KAAC;IAE5K,MAAMC,WAAWV,IAAAA,kBAAW,EAAC,IAAMD,UAAUxE,gBAAgBuB,WAAW,IAAIvB,eAAe,IAAI;QAACwE;QAAWxE;QAAcuB;KAAS;IAClI,MAAM6D,eAAeX,IAAAA,kBAAW,EAAC,IAAMD,UAAUxE,gBAAgB,IAAIuB,WAAWvB,eAAe,IAAI;QAACwE;QAAWxE;QAAcuB;KAAS;IAEtI,2CAA2C;IAC3C,MAAM8D,kBAAkBZ,IAAAA,kBAAW,EAAC,CAACa,MAASrC;QAC5CnB;QAEA,IAAIO,oBAAoBkD,SAAS,EAAE;YACjC,oCAAoC;YACpCjD,mBAAmB;gBACjBkD,MAAM;gBACNC,MAAM;oBAAEC,QAAQ,AAACJ,KAAaK,EAAE;oBAAE1C;gBAAM;YAC1C;QACF;QAEA3D,cAAcgG,MAAMrC;QACpBlB;IACF,GAAG;QAACD;QAA2BC;QAA2BM,oBAAoBkD,SAAS;QAAEjD;QAAoBhD;KAAY;IAEzH,mDAAmD;IACnDqD,IAAAA,gBAAS,EAAC;QACR,IAAI,CAACxC,aAAatB,MAAM6C,MAAM,IAAIR,cAAc;QAEhD,MAAM0E,WAAWC,YAAY;YAC3BV;QACF,GAAGzC;QAEH,OAAO,IAAMoD,cAAcF;IAC7B,GAAG;QAACzF;QAAWtB,MAAM6C,MAAM;QAAER;QAAciE;QAAUzC;KAAuB;IAE5E,mCAAmC;IACnC,MAAMqD,8BAA8B9D;IAEpC,IAAI1C,SAAS;QACX,qBACE,qBAACyG;YAAI/G,WAAW,CAAC,2BAA2B,EAAEA,UAAU,CAAC;sBACvD,cAAA,sBAAC+G;gBAAI/G,WAAU;;kCACb,qBAAC+G;wBAAI/G,WAAU;;kCACf,qBAAC+G;wBAAI/G,WAAU;wBAAagH,OAAO;4BAAEC,qBAAqB,CAAC,OAAO,EAAEhF,aAAa,MAAM,CAAC;wBAAC;kCACtFiF,MAAMC,IAAI,CAAC;4BAAE1E,QAAQR;wBAAa,GAAGmF,GAAG,CAAC,CAACC,GAAGC,kBAC5C,qBAACP;gCAAY/G,WAAU;+BAAbsH;;;;;IAMtB;IAEA,IAAI1H,MAAM6C,MAAM,KAAK,GAAG;QACtB,qBACE,qBAACsE;YAAI/G,WAAW,CAAC,yBAAyB,EAAEA,UAAU,CAAC;sBACrD,cAAA,sBAAC+G;gBAAI/G,WAAU;;kCACb,qBAAC+G;wBAAI/G,WAAU;kCACb,cAAA,qBAACuH;4BAAKvH,WAAU;sCAAW;;;kCAE7B,qBAACwH;wBAAExH,WAAU;kCACVa,EAAE,kBAAkB;;oBAEtBuC,oBAAoBkD,SAAS,kBAC5B,qBAACkB;wBAAExH,WAAU;kCACVa,EAAE,oBAAoB;;;;;IAMnC;IAEA,qBACE,sBAAC4G;QACCzH,WAAW,CAAC,8BAA8B,EAAEA,UAAU,CAAC,EAAEoD,oBAAoBkD,SAAS,GAAG,iBAAiB,GAAG,CAAC;QAC9GoB,MAAK;QACLC,cAAY7H,QAAQA,KAAK,CAACc,SAAS,GAAGC,EAAE,yBAAyB;;YAGhEN,+CACC,sBAACwG;gBAAI/G,WAAU;;kCACb,sBAAC+G;wBAAI/G,WAAU;;4BACZoD,oBAAoBkD,SAAS,iBAC5B,sBAACS;gCAAI/G,WAAU;;kDACb,qBAAC4H,iBAAQ;wCAAC5H,WAAU;;kDACpB,qBAACuH;kDAAM1G,EAAE,oBAAoB;;;iCAE7B6B,QAAQmF,aAAa,KAAK,uBAC5B,sBAACd;gCAAI/G,WAAU;;kDACb,qBAAC8H,kBAAS;wCAAC9H,WAAU;;kDACrB,qBAACuH;kDAAM1G,EAAE,2BAA2B;;;+CAGtC,sBAACkG;gCAAI/G,WAAU;;kDACb,qBAAC+H,iBAAQ;wCAAC/H,WAAU;;kDACpB,qBAACuH;kDAAM1G,EAAE,sBAAsB;;;;4BAIlC,OAAOuB,WAAW,eAAeA,OAAOC,UAAU,IAAI,qBACrD,sBAAC0E;gCAAI/G,WAAU;;kDACb,qBAACgI,8BAAqB;wCAAChI,WAAU;;kDACjC,qBAACuH;kDAAK;;;;;;kCAKZ,qBAACR;wBAAI/G,WAAU;kCACb,cAAA,sBAACuH;;gCAAK;gCAAQhF,KAAK0F,KAAK,CAAC1G,iBAAiBO,iBAAiB;gCAAE;;;;;;YAMjEhC,CAAAA,SAASC,QAAO,mBAChB,sBAACgH;gBAAI/G,WAAU;;oBACZF,uBACC,qBAACoI;wBAAGlI,WAAU;kCACXF,KAAK,CAACc,SAAS;;oBAGnBb,0BACC,qBAACyH;wBAAExH,WAAU;kCACVD,QAAQ,CAACa,SAAS;;oBAKtBuH,QAAQC,GAAG,CAACC,QAAQ,KAAK,iBAAiB9H,+CACzC,sBAACwG;wBAAI/G,WAAU;;0CACb,sBAACuH;;oCAAK;oCAAOhF,KAAK0F,KAAK,CAAC1G,iBAAiBE,QAAQ;oCAAE;;;0CACnD,sBAAC8F;;oCAAK;oCAAShF,KAAK0F,KAAK,CAAC1G,iBAAiBK,WAAW;oCAAE;;;0CACxD,sBAAC2F;;oCAAK;oCAAM7E,QAAQb,SAAS;;;4BAC5BiF,4BAA4BrE,MAAM,GAAG,mBACpC,sBAAC8E;gCAAKvH,WAAU;;oCACb8G,4BAA4BrE,MAAM;oCAAC;;;;;;;0BAShD,sBAAC6F,8CAAsB;gBACrBC,SAAS,CAACC;oBACR,IAAIA,QAAQC,SAAS,KAAK,QAAQvC;yBAC7B,IAAIsC,QAAQC,SAAS,KAAK,SAAStC;gBAC1C;gBACAuC,0BAA0BlI;gBAC1BmI,sBAAsB;gBACtBC,0BAA0BhI,aAAa;gBACvCZ,WAAU;;kCAEV,sBAAC+G;wBACC8B,KAAK9G;wBACL/B,WAAU;;4BAGTJ,MAAM6C,MAAM,GAAGR,gBAAgB9B,8BAC9B;;kDACE,qBAAC2I;wCACCC,SAAS5C;wCACTnG,WAAU;wCAMV2H,cAAY9G,EAAE,qBAAqB;wCACnCmG,OAAO;4CAAEgC,UAAU;4CAAQC,WAAW;wCAAO;kDAE7C,cAAA,qBAACC,wBAAe;4CAAClJ,WAAU;;;kDAG7B,qBAAC8I;wCACCC,SAAS7C;wCACTlG,WAAU;wCAMV2H,cAAY9G,EAAE,iBAAiB;wCAC/BmG,OAAO;4CAAEgC,UAAU;4CAAQC,WAAW;wCAAO;kDAE7C,cAAA,qBAACE,yBAAgB;4CAACnJ,WAAU;;;;;0CAMlC,qBAACoJ,6BAAe;gCAACC,MAAK;0CACpB,cAAA,qBAACC,oBAAM,CAACvC,GAAG;oCAETwC,SAAS;wCAAEC,SAAS;wCAAGC,GAAG;oCAAG;oCAC7BC,SAAS;wCAAEF,SAAS;wCAAGC,GAAG;oCAAE;oCAC5BE,MAAM;wCAAEH,SAAS;wCAAGC,GAAG,CAAC;oCAAG;oCAC3BG,YAAY;wCAAEC,UAAU;wCAAMC,MAAM;oCAAY;oCAChD9J,WAAU;oCACVgH,OAAO;wCACLC,qBAAqB,CAAC,OAAO,EAAEhF,aAAa,MAAM,CAAC;wCACnDgH,WAAW;oCACb;8CAECrJ,MAAMmK,KAAK,CAAChJ,cAAcA,eAAekB,cAAcmF,GAAG,CAAC,CAACf,MAAMrC;wCACjE,MAAMgG,cAAcjJ,eAAeiD;wCACnC,MAAMiG,YAAY7I,aAAa8I,GAAG,CAACF;wCAEnC,qBACE,qBAACV,oBAAM,CAACvC,GAAG;4CAEToD,cAAYH;4CACZhK,WAAU;4CACVuJ,SAAS;gDAAEC,SAAS;gDAAGY,GAAG;4CAAG;4CAC7BV,SAAS;gDAAEF,SAAS;gDAAGY,GAAG;4CAAE;4CAC5BR,YAAY;gDAAEC,UAAU;gDAAKQ,OAAOrG,QAAQ;4CAAK;4CACjDsG,YAAY;gDAAEF,GAAG,CAAC;gDAAGG,OAAO;4CAAK;4CACjCC,UAAU;gDAAED,OAAO;4CAAK;4CACxBxB,SAAS,IAAM3C,gBAAgBC,MAAM2D;4CACrCtC,MAAK;4CACL+C,UAAU;4CACV9C,cAAY,CAAC,EAAE,AAACtB,KAAavG,KAAK,EAAE,CAACc,SAAS,IAAI,2BAA2B,GAAG,EAAEoJ,cAAc,EAAE,IAAI,EAAEpK,MAAM6C,MAAM,CAAC,CAAC;4CACtHuE,OAAO;gDAAEiC,WAAW;4CAAQ;sDAE5B,cAAA,qBAACyB,eAAQ;gDAACC,wBACR,qBAAC5D;oDAAI/G,WAAU;8DACb,cAAA,qBAACuH;wDAAKvH,WAAU;kEACba,EAAE,oBAAoB;;;0DAI1BhB,WAAWwG,MAAM2D,aAAaC;;2CArB5B,CAAC,EAAE,AAAC5D,KAAaK,EAAE,IAAIsD,YAAY,CAAC,EAAEjJ,aAAa,CAAC;oCAyB/D;mCA1CKA;;4BA+CR,OAAOqB,WAAW,eAAeA,OAAOC,UAAU,IAAI,OAAOtB,iBAAiB,mBAC7E,sBAACgG;gCAAI/G,WAAU;;kDACb,qBAAC+G;wCAAI/G,WAAU;;kDACf,qBAAC+G;wCAAI/G,WAAU;;kDACf,qBAAC+G;wCAAI/G,WAAU;;kDACf,qBAAC+G;wCAAI/G,WAAU;;kDACf,qBAAC+G;wCAAI/G,WAAU;;;;;;oBAMpBJ,MAAM6C,MAAM,GAAGR,gBAAgB7B,0BAC9B,qBAAC2G;wBAAI/G,WAAU;kCACZkH,MAAMC,IAAI,CAAC;4BAAE1E,QAAQH,WAAW;wBAAE,GAAG8E,GAAG,CAAC,CAACC,GAAGrD,sBAC5C,qBAAC8E;gCAECC,SAAS,IAAMxD,UAAUvB;gCACzBhE,WAAW,CAAC;;2BAED,EAAEgE,UAAUjD,eACR,uCACA,sDAAsD,CAAC;gCACtE4G,cAAY9G,EAAE,sBAAsB,CAAC,gCAAgC,EAAEmD,QAAQ,EAAE,IAAI,EAAE1B,WAAW,EAAE,CAAC;gCACrG0E,OAAO;oCAAEgC,UAAU;oCAAQC,WAAW;gCAAO;+BARxCjF;;;;YAgBd/D,6BACC,qBAAC8G;gBAAI/G,WAAU;0BACb,cAAA,sBAAC8I;oBACCC,SAAS,IAAM5H,aAAakD,CAAAA,OAAQ,CAACA;oBACrCrE,WAAU;oBACVgH,OAAO;wBAAEiC,WAAW;oBAAO;oBAC3BtB,cAAYzG,YAAYL,EAAE,kBAAkB,wCAAwCA,EAAE,iBAAiB;;wBAEtGK,0BACC,qBAAC0J,kBAAS;4BAAC5K,WAAU;2CAErB,qBAAC6K,iBAAQ;4BAAC7K,WAAU;;sCAEtB,qBAACuH;4BAAKvH,WAAU;sCACbkB,YAAYL,EAAE,kBAAkB,WAAWA,EAAE,iBAAiB;;;;;0BAOvE,sBAACkG;gBACC/G,WAAU;gBACV8K,aAAU;gBACVC,eAAY;gBACZrD,MAAK;;oBAEJ7G,EAAE,mBAAmB,CAAC,kCAAkC,EAAEE,eAAe,EAAE,IAAI,EAAEwB,KAAKmD,GAAG,CAAC3E,eAAekB,cAAcrC,MAAM6C,MAAM,EAAE,IAAI,EAAE7C,MAAM6C,MAAM,CAAC,qBAAqB,EAAEF,KAAK0F,KAAK,CAAC1G,iBAAiBO,iBAAiB,EAAE,EAAE,CAAC;oBACjOsB,oBAAoBkD,SAAS,IAAIzF,EAAE,wBAAwB;;;;;AAIpE;AAEAnB,4BAA4BsL,WAAW,GAAG;MAE1C,WAAetL"}