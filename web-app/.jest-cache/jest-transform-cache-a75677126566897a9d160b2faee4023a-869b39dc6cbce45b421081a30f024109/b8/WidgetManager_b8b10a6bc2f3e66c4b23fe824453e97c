100dc1d5c733321077b398b84d2f3a7d
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    PortugueseWidgetContainer: function() {
        return PortugueseWidgetContainer;
    },
    WidgetManager: function() {
        return WidgetManager;
    },
    WidgetPositioner: function() {
        return WidgetPositioner;
    },
    default: function() {
        return _default;
    },
    useWidget: function() {
        return useWidget;
    },
    useWidgetManager: function() {
        return useWidgetManager;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _zindexlayers = require("../config/z-index-layers");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const WidgetManagerContext = /*#__PURE__*/ (0, _react.createContext)(null);
function WidgetManager({ children, className = "" }) {
    const [isAppBarVisible, setAppBarVisible] = (0, _react.useState)(false);
    const [activeWidgets, setActiveWidgets] = (0, _react.useState)(new Set());
    // Listen for app bar visibility changes
    (0, _react.useEffect)(()=>{
        const handleAppBarShow = ()=>setAppBarVisible(true);
        const handleAppBarDismiss = ()=>setAppBarVisible(false);
        // Listen for custom events from AppDownloadBar
        window.addEventListener("appDownloadBarShown", handleAppBarShow);
        window.addEventListener("appDownloadBarDismissed", handleAppBarDismiss);
        // Check initial state
        const isDismissed = localStorage.getItem("lusotown_app_download_bar_dismissed");
        const hasShownInSession = sessionStorage.getItem("lusotown_app_download_shown");
        const shouldShowAppBar = !isDismissed && hasShownInSession === "true";
        setAppBarVisible(shouldShowAppBar);
        return ()=>{
            window.removeEventListener("appDownloadBarShown", handleAppBarShow);
            window.removeEventListener("appDownloadBarDismissed", handleAppBarDismiss);
        };
    }, []);
    const registerWidget = (id, type)=>{
        setActiveWidgets((prev)=>new Set(prev).add(id));
    };
    const unregisterWidget = (id)=>{
        setActiveWidgets((prev)=>{
            const newSet = new Set(prev);
            newSet.delete(id);
            return newSet;
        });
    };
    const getWidgetClasses = (type)=>{
        return (0, _zindexlayers.getMobileWidgetClasses)(type, isAppBarVisible);
    };
    const getWidgetZIndex = (type)=>{
        const zIndexMap = {
            appBar: _zindexlayers.Z_INDEX_LAYERS.appDownloadBar,
            notification: _zindexlayers.Z_INDEX_LAYERS.notification,
            fab: _zindexlayers.Z_INDEX_LAYERS.fabButton,
            chat: _zindexlayers.Z_INDEX_LAYERS.lusoBotWidget,
            activity: _zindexlayers.Z_INDEX_LAYERS.liveActivityWidget
        };
        return zIndexMap[type] || _zindexlayers.Z_INDEX_LAYERS.floatingBase;
    };
    const getBottomOffset = (type)=>{
        if (type === "appBar") return "0rem";
        return (0, _zindexlayers.getWidgetBottomOffset)(type, isAppBarVisible);
    };
    const contextValue = {
        isAppBarVisible,
        setAppBarVisible,
        registerWidget,
        unregisterWidget,
        getWidgetClasses,
        getWidgetZIndex,
        getBottomOffset,
        activeWidgets
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(WidgetManagerContext.Provider, {
        value: contextValue,
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: `widget-manager ${className}`,
            children: [
                children,
                process.env.NODE_ENV === "development" && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "fixed top-4 left-4 bg-black/80 text-white text-xs p-2 rounded-lg z-[9999] font-mono",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            children: [
                                "App Bar: ",
                                isAppBarVisible ? "Visible" : "Hidden"
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            children: [
                                "Active: ",
                                activeWidgets.size,
                                " widgets"
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "text-primary-300",
                            children: "Z-Index Hierarchy:"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "ml-2 space-y-1",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    children: [
                                        "App Bar: ",
                                        _zindexlayers.Z_INDEX_LAYERS.appDownloadBar
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    children: [
                                        "Notification: ",
                                        _zindexlayers.Z_INDEX_LAYERS.notification
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    children: [
                                        "FAB: ",
                                        _zindexlayers.Z_INDEX_LAYERS.fabButton
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    children: [
                                        "Chat: ",
                                        _zindexlayers.Z_INDEX_LAYERS.lusoBotWidget
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    children: [
                                        "Activity: ",
                                        _zindexlayers.Z_INDEX_LAYERS.liveActivityWidget
                                    ]
                                })
                            ]
                        })
                    ]
                })
            ]
        })
    });
}
function useWidgetManager() {
    const context = (0, _react.useContext)(WidgetManagerContext);
    if (!context) {
        throw new Error("useWidgetManager must be used within a WidgetManager");
    }
    return context;
}
function useWidget(id, type) {
    const manager = useWidgetManager();
    (0, _react.useEffect)(()=>{
        manager.registerWidget(id, type);
        return ()=>manager.unregisterWidget(id);
    }, [
        id,
        type,
        manager
    ]);
    return {
        isAppBarVisible: manager.isAppBarVisible,
        classes: manager.getWidgetClasses(type),
        zIndex: manager.getWidgetZIndex(type),
        bottomOffset: manager.getBottomOffset(type)
    };
}
function WidgetPositioner({ type, id, children, className = "" }) {
    const { classes } = useWidget(id, type);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        className: `${classes} ${className}`,
        children: children
    });
}
function PortugueseWidgetContainer({ children, className = "", variant = "primary" }) {
    const variantClasses = {
        primary: "bg-gradient-to-r from-primary-500 to-secondary-500",
        secondary: "bg-white border-2 border-primary-200 text-primary-900",
        heritage: "bg-gradient-to-br from-green-600 via-red-500 to-yellow-500"
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        className: `
      ${variantClasses[variant]} 
      rounded-2xl shadow-lg transition-all duration-300
      ${className}
    `,
        children: children
    });
}
const _default = WidgetManager;

//# sourceMappingURL=data:application/json;base64,