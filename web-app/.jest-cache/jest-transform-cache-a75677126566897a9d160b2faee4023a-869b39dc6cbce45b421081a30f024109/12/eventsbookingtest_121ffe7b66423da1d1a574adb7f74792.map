{"version":3,"sources":["/workspaces/LusoTown/web-app/__tests__/integration/events-booking.test.tsx"],"sourcesContent":["import { render, screen, fireEvent, waitFor } from '@testing-library/react'\nimport { BrowserRouter } from 'react-router-dom'\nimport EventsPage from '@/app/events/page'\nimport EventDetailsPage from '@/app/events/[id]/page'\nimport TechnologyWorkshopBookingPage from '@/app/events/[id]/book/page'\nimport { LanguageProvider } from '@/context/LanguageContext'\nimport { CartProvider } from '@/context/CartContext'\nimport { NetworkingProvider } from '@/context/NetworkingContext'\nimport { authService } from '@/lib/auth'\n\n// Mock next/router\njest.mock('next/navigation', () => ({\n  useRouter: () => ({\n    push: jest.fn(),\n    back: jest.fn(),\n  }),\n  useParams: () => ({\n    id: '4',\n  }),\n  usePathname: () => '/events',\n}))\n\n// Mock auth service\njest.mock('@/lib/auth', () => ({\n  authService: {\n    getCurrentUser: jest.fn(() => ({\n      id: 'test-user',\n      email: 'test@example.com',\n      name: 'Test User',\n      membershipTier: 'free'\n    })),\n  },\n  getCurrentUser: jest.fn(() => ({\n    id: 'test-user',\n    email: 'test@example.com',\n    name: 'Test User',\n    membershipTier: 'free'\n  })),\n}))\n\nconst TestWrapper = ({ children }: { children: React.ReactNode }) => (\n  <BrowserRouter>\n    <LanguageProvider>\n      <CartProvider>\n        <NetworkingProvider>\n          {children}\n        </NetworkingProvider>\n      </CartProvider>\n    </LanguageProvider>\n  </BrowserRouter>\n)\n\ndescribe('Events Booking System Integration', () => {\n  describe('Events Page', () => {\n    it('renders events list with proper accessibility', async () => {\n      render(\n        <TestWrapper>\n          <EventsPage />\n        </TestWrapper>\n      )\n\n      // Check main search input has proper label\n      const searchInput = screen.getByLabelText(/search events/i)\n      expect(searchInput).toBeInTheDocument()\n      expect(searchInput).toHaveAttribute('id', 'event-search')\n\n      // Check sort dropdown has proper label\n      const sortSelect = screen.getByLabelText(/sort events/i)\n      expect(sortSelect).toBeInTheDocument()\n      expect(sortSelect).toHaveAttribute('id', 'sort-events')\n\n      // Wait for events to load\n      await waitFor(() => {\n        const eventCards = screen.getAllByRole('button', { name: /view more details about/i })\n        expect(eventCards.length).toBeGreaterThan(0)\n      }, { timeout: 5000 })\n    })\n\n    it('allows filtering events by category', async () => {\n      render(\n        <TestWrapper>\n          <EventsPage />\n        </TestWrapper>\n      )\n\n      // Wait for events to load\n      await waitFor(() => {\n        const eventCards = screen.getAllByRole('button', { name: /view more details about/i })\n        expect(eventCards.length).toBeGreaterThan(0)\n      })\n\n      // Check filter functionality\n      const techFilter = screen.getByText(/tech\\/innovation/i)\n      expect(techFilter).toBeInTheDocument()\n      \n      fireEvent.click(techFilter)\n      \n      // Should filter events by technology category\n      await waitFor(() => {\n        expect(techFilter.closest('button')).toHaveClass('scale-105')\n      })\n    })\n\n    it('has accessible event cards with proper ARIA labels', async () => {\n      render(\n        <TestWrapper>\n          <EventsPage />\n        </TestWrapper>\n      )\n\n      await waitFor(() => {\n        const eventCards = screen.getAllByRole('button', { name: /view more details about/i })\n        expect(eventCards.length).toBeGreaterThan(0)\n        \n        // Check each event card has proper accessibility\n        eventCards.forEach(card => {\n          expect(card).toHaveAttribute('aria-label')\n          expect(card).toHaveAttribute('tabIndex', '0')\n        })\n      })\n    })\n  })\n\n  describe('Event Details Page', () => {\n    it('renders event details with booking button', async () => {\n      render(\n        <TestWrapper>\n          <EventDetailsPage />\n        </TestWrapper>\n      )\n\n      // Wait for event to load\n      await waitFor(() => {\n        const eventTitle = screen.getByRole('heading', { level: 1 })\n        expect(eventTitle).toBeInTheDocument()\n      })\n\n      // Check RSVP button exists and is accessible\n      const rsvpButton = screen.getByRole('button', { name: /rsvp to/i })\n      expect(rsvpButton).toBeInTheDocument()\n      expect(rsvpButton).toHaveClass('focus:ring-2')\n    })\n\n    it('opens RSVP modal with accessible form fields', async () => {\n      render(\n        <TestWrapper>\n          <EventDetailsPage />\n        </TestWrapper>\n      )\n\n      await waitFor(() => {\n        const rsvpButton = screen.getByRole('button', { name: /rsvp to/i })\n        fireEvent.click(rsvpButton)\n      })\n\n      // Check modal opened\n      await waitFor(() => {\n        const modal = screen.getByRole('dialog', { hidden: true })\n        expect(modal).toBeInTheDocument()\n      })\n\n      // Check form fields have proper labels\n      const notesField = screen.getByLabelText(/notes \\(optional\\)/i)\n      expect(notesField).toBeInTheDocument()\n      expect(notesField).toHaveAttribute('id', 'rsvp-notes')\n\n      const dietaryField = screen.getByLabelText(/dietary requirements/i)\n      expect(dietaryField).toBeInTheDocument()\n      expect(dietaryField).toHaveAttribute('id', 'dietary-requirements')\n    })\n  })\n\n  describe('Event Booking Page', () => {\n    it('renders multi-step booking form with accessibility', async () => {\n      render(\n        <TestWrapper>\n          <TechnologyWorkshopBookingPage />\n        </TestWrapper>\n      )\n\n      // Check form step 1 fields have proper labels\n      await waitFor(() => {\n        const firstNameField = screen.getByLabelText(/first name/i)\n        expect(firstNameField).toBeInTheDocument()\n        expect(firstNameField).toHaveAttribute('id', 'firstName')\n        expect(firstNameField).toHaveAttribute('required')\n\n        const lastNameField = screen.getByLabelText(/last name/i)\n        expect(lastNameField).toBeInTheDocument()\n        expect(lastNameField).toHaveAttribute('id', 'lastName')\n\n        const emailField = screen.getByLabelText(/email address/i)\n        expect(emailField).toBeInTheDocument()\n        expect(emailField).toHaveAttribute('id', 'email')\n        expect(emailField).toHaveAttribute('autoComplete', 'email')\n      })\n    })\n\n    it('progresses through booking steps correctly', async () => {\n      render(\n        <TestWrapper>\n          <TechnologyWorkshopBookingPage />\n        </TestWrapper>\n      )\n\n      // Fill out step 1\n      const firstNameField = screen.getByLabelText(/first name/i)\n      const lastNameField = screen.getByLabelText(/last name/i)\n      const emailField = screen.getByLabelText(/email address/i)\n\n      fireEvent.change(firstNameField, { target: { value: 'JoÃ£o' } })\n      fireEvent.change(lastNameField, { target: { value: 'Silva' } })\n      fireEvent.change(emailField, { target: { value: 'joao@example.com' } })\n\n      const continueButton = screen.getByText(/continue/i)\n      fireEvent.click(continueButton)\n\n      // Should progress to step 2\n      await waitFor(() => {\n        const step2Title = screen.getByText(/workshop details/i)\n        expect(step2Title).toBeInTheDocument()\n      })\n\n      // Continue to step 3\n      const continueButton2 = screen.getByText(/continue/i)\n      fireEvent.click(continueButton2)\n\n      await waitFor(() => {\n        const step3Title = screen.getByText(/payment & confirmation/i)\n        expect(step3Title).toBeInTheDocument()\n      })\n\n      // Check terms checkbox\n      const termsCheckbox = screen.getByRole('checkbox', { name: /i agree to the terms/i })\n      expect(termsCheckbox).toBeInTheDocument()\n      expect(termsCheckbox).toHaveAttribute('required')\n    })\n\n    it('validates required fields and shows errors', async () => {\n      render(\n        <TestWrapper>\n          <TechnologyWorkshopBookingPage />\n        </TestWrapper>\n      )\n\n      // Try to continue without filling required fields\n      const continueButton = screen.getByText(/continue/i)\n      expect(continueButton).toBeDisabled()\n\n      // Fill one field\n      const firstNameField = screen.getByLabelText(/first name/i)\n      fireEvent.change(firstNameField, { target: { value: 'JoÃ£o' } })\n\n      // Button should still be disabled\n      expect(continueButton).toBeDisabled()\n\n      // Fill all required fields\n      const lastNameField = screen.getByLabelText(/last name/i)\n      const emailField = screen.getByLabelText(/email address/i)\n      \n      fireEvent.change(lastNameField, { target: { value: 'Silva' } })\n      fireEvent.change(emailField, { target: { value: 'joao@example.com' } })\n\n      // Button should now be enabled\n      expect(continueButton).toBeEnabled()\n    })\n\n    it('supports keyboard navigation', async () => {\n      render(\n        <TestWrapper>\n          <TechnologyWorkshopBookingPage />\n        </TestWrapper>\n      )\n\n      const firstNameField = screen.getByLabelText(/first name/i)\n      const lastNameField = screen.getByLabelText(/last name/i)\n      const emailField = screen.getByLabelText(/email address/i)\n\n      // Tab navigation should work\n      firstNameField.focus()\n      expect(document.activeElement).toBe(firstNameField)\n\n      fireEvent.keyDown(firstNameField, { key: 'Tab' })\n      // Note: Actual tab navigation would require a more sophisticated test setup\n      // This tests that the fields are properly focusable\n      expect(lastNameField).toHaveAttribute('tabIndex', undefined)\n    })\n  })\n\n  describe('Portuguese Cultural Events', () => {\n    it('displays Portuguese cultural elements correctly', async () => {\n      render(\n        <TestWrapper>\n          <EventsPage />\n        </TestWrapper>\n      )\n\n      // Look for Portuguese flag and cultural indicators\n      await waitFor(() => {\n        const portugueseFlag = screen.getByText('ğµğ¹')\n        expect(portugueseFlag).toBeInTheDocument()\n      })\n\n      // Check for Portuguese language toggle or content\n      const culturalElements = screen.getAllByText(/portuguese/i)\n      expect(culturalElements.length).toBeGreaterThan(0)\n    })\n\n    it('filters events for Portuguese community', async () => {\n      render(\n        <TestWrapper>\n          <EventsPage />\n        </TestWrapper>\n      )\n\n      // Look for cultural filter\n      await waitFor(() => {\n        const culturalFilter = screen.getByText(/ğ­ cultural/i)\n        expect(culturalFilter).toBeInTheDocument()\n      })\n\n      fireEvent.click(screen.getByText(/ğ­ cultural/i))\n\n      // Should show Portuguese cultural events\n      await waitFor(() => {\n        const culturalEvents = screen.queryAllByText(/cultural/i)\n        expect(culturalEvents.length).toBeGreaterThan(0)\n      })\n    })\n  })\n\n  describe('Mobile Accessibility', () => {\n    it('has minimum touch target sizes', async () => {\n      render(\n        <TestWrapper>\n          <EventsPage />\n        </TestWrapper>\n      )\n\n      await waitFor(() => {\n        // Check buttons meet 44px minimum touch target\n        const buttons = screen.getAllByRole('button')\n        buttons.forEach(button => {\n          const styles = window.getComputedStyle(button)\n          const minHeight = parseInt(styles.minHeight) || parseInt(styles.height)\n          // Note: In jsdom, actual pixel measurements aren't available\n          // In a real browser test, we would check minHeight >= 44\n          expect(button).toBeInTheDocument()\n        })\n      })\n    })\n\n    it('supports screen readers with proper labels', async () => {\n      render(\n        <TestWrapper>\n          <EventsPage />\n        </TestWrapper>\n      )\n\n      // Check all interactive elements have accessible names\n      await waitFor(() => {\n        const buttons = screen.getAllByRole('button')\n        buttons.forEach(button => {\n          const accessibleName = button.getAttribute('aria-label') || \n                                 button.textContent || \n                                 button.getAttribute('title')\n          expect(accessibleName).toBeTruthy()\n        })\n\n        const inputs = screen.getAllByRole('textbox')\n        inputs.forEach(input => {\n          const label = screen.getByLabelText(new RegExp(input.getAttribute('placeholder') || '', 'i'), { exact: false })\n          expect(label).toBeInTheDocument()\n        })\n      })\n    })\n  })\n})"],"names":["jest","mock","useRouter","push","fn","back","useParams","id","usePathname","authService","getCurrentUser","email","name","membershipTier","TestWrapper","children","BrowserRouter","LanguageProvider","CartProvider","NetworkingProvider","describe","it","render","EventsPage","searchInput","screen","getByLabelText","expect","toBeInTheDocument","toHaveAttribute","sortSelect","waitFor","eventCards","getAllByRole","length","toBeGreaterThan","timeout","techFilter","getByText","fireEvent","click","closest","toHaveClass","forEach","card","EventDetailsPage","eventTitle","getByRole","level","rsvpButton","modal","hidden","notesField","dietaryField","TechnologyWorkshopBookingPage","firstNameField","lastNameField","emailField","change","target","value","continueButton","step2Title","continueButton2","step3Title","termsCheckbox","toBeDisabled","toBeEnabled","focus","document","activeElement","toBe","keyDown","key","undefined","portugueseFlag","culturalElements","getAllByText","culturalFilter","culturalEvents","queryAllByText","buttons","button","styles","window","getComputedStyle","minHeight","parseInt","height","accessibleName","getAttribute","textContent","toBeTruthy","inputs","input","label","RegExp","exact"],"mappings":"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"}