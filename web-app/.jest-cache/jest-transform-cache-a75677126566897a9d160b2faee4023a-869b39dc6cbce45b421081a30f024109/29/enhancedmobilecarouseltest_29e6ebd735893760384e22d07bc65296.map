{"version":3,"sources":["/workspaces/LusoTown/web-app/__tests__/carousels/enhanced-mobile-carousel.test.tsx"],"sourcesContent":["import React from 'react'\nimport { render, screen, fireEvent, waitFor, act } from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\nimport { LanguageProvider } from '@/context/LanguageContext'\nimport LusophoneCarousel, { \n  WeekendEventItem, \n  MobileSettings, \n  PWASettings,\n  useMobilePerformance,\n  usePWAFeatures\n} from '@/components/carousels/LusophoneCarousel'\n\n// Mock framer-motion\njest.mock('framer-motion', () => ({\n  motion: {\n    div: ({ children, ...props }: any) => <div {...props}>{children}</div>,\n    section: ({ children, ...props }: any) => <section {...props}>{children}</section>\n  },\n  AnimatePresence: ({ children }: any) => <div>{children}</div>,\n  useMotionValue: () => ({ set: jest.fn(), get: () => 0 }),\n  useTransform: () => 0,\n  animate: jest.fn()\n}))\n\n// Mock EnhancedMobileGestures\njest.mock('@/components/EnhancedMobileGestures', () => ({\n  EnhancedMobileGestures: ({ children, onSwipe, onTap }: any) => (\n    <div data-testid=\"enhanced-mobile-gestures\" onClick={() => onTap?.({ x: 100, y: 100 })}>\n      {children}\n    </div>\n  ),\n  usePortugueseGestures: () => ({\n    detectCulturalPattern: jest.fn(() => null),\n    gestureHistory: []\n  })\n}))\n\n// Mock Navigator APIs\nObject.defineProperty(navigator, 'onLine', {\n  writable: true,\n  value: true\n})\n\nObject.defineProperty(navigator, 'vibrate', {\n  writable: true,\n  value: jest.fn()\n})\n\n// Mock performance API\nObject.defineProperty(performance, 'memory', {\n  writable: true,\n  value: {\n    usedJSHeapSize: 1024 * 1024 * 10 // 10MB\n  }\n})\n\n// Mock SpeechSynthesis\nObject.defineProperty(window, 'speechSynthesis', {\n  writable: true,\n  value: {\n    speak: jest.fn(),\n    cancel: jest.fn(),\n    getVoices: jest.fn(() => [])\n  }\n})\n\ndescribe('Enhanced Mobile LusophoneCarousel', () => {\n  const mockWeekendEvents: WeekendEventItem[] = [\n    {\n      id: 'event-1',\n      title: { en: 'Fado Night London', pt: 'Noite de Fado Londres' },\n      description: { en: 'Authentic Portuguese music', pt: 'MÃºsica portuguesa autÃªntica' },\n      image: '/events/fado-night.jpg',\n      flagEmoji: 'ðŸ‡µðŸ‡¹',\n      countries: ['Portugal'],\n      category: 'music',\n      priority: 1,\n      date: '2024-12-14',\n      time: '20:00',\n      location: 'Heritage Centre',\n      price: 25,\n      attendees: 45,\n      maxAttendees: 80,\n      tags: ['Fado', 'Traditional Music']\n    },\n    {\n      id: 'event-2',\n      title: { en: 'Brazilian Carnival Workshop', pt: 'Workshop de Carnaval Brasileiro' },\n      description: { en: 'Learn samba steps', pt: 'Aprenda passos de samba' },\n      image: '/events/carnival.jpg',\n      flagEmoji: 'ðŸ‡§ðŸ‡·',\n      countries: ['Brazil'],\n      category: 'dance',\n      priority: 2,\n      date: '2024-12-15',\n      time: '14:00',\n      location: 'Community Hall',\n      price: 18,\n      attendees: 32,\n      maxAttendees: 60,\n      tags: ['Samba', 'Dance']\n    }\n  ]\n\n  const defaultMobileSettings: Partial<MobileSettings> = {\n    enableSwipeGestures: true,\n    enableHapticFeedback: true,\n    enableMomentumScrolling: true,\n    enablePullToRefresh: true,\n    touchThreshold: 44,\n    swipeVelocityThreshold: 0.3,\n    enableLazyLoading: true,\n    preloadDistance: 2\n  }\n\n  const defaultPWASettings: Partial<PWASettings> = {\n    enableOfflineMode: true,\n    enablePushNotifications: true,\n    enableBackgroundSync: true,\n    cacheStrategy: 'stale-while-revalidate',\n    offlineQueueLimit: 50\n  }\n\n  const renderCarousel = (props?: any) => {\n    return render(\n      <LanguageProvider>\n        <LusophoneCarousel\n          items={mockWeekendEvents}\n          renderItem={(item) => (\n            <div data-testid={`carousel-item-${item.id}`}>\n              <h3>{item.title.en}</h3>\n              <p>{item.description?.en}</p>\n            </div>\n          )}\n          title={{\n            en: 'Portuguese Cultural Events',\n            pt: 'Eventos Culturais Portugueses'\n          }}\n          mobileSettings={defaultMobileSettings}\n          pwaSettings={defaultPWASettings}\n          enablePortugueseGestures={true}\n          enableAccessibilityAnnouncements={true}\n          {...props}\n        />\n      </LanguageProvider>\n    )\n  }\n\n  beforeEach(() => {\n    jest.clearAllMocks()\n    // Reset navigator.onLine to true\n    Object.defineProperty(navigator, 'onLine', { value: true, writable: true })\n  })\n\n  describe('Basic Mobile Functionality', () => {\n    it('renders with mobile-optimized layout', () => {\n      renderCarousel()\n      \n      expect(screen.getByText('Portuguese Cultural Events')).toBeInTheDocument()\n      expect(screen.getByTestId('carousel-item-event-1')).toBeInTheDocument()\n      expect(screen.getByTestId('enhanced-mobile-gestures')).toBeInTheDocument()\n    })\n\n    it('displays Portuguese cultural content correctly', () => {\n      renderCarousel()\n      \n      expect(screen.getByText('Fado Night London')).toBeInTheDocument()\n      expect(screen.getByText('Brazilian Carnival Workshop')).toBeInTheDocument()\n    })\n\n    it('applies mobile-specific CSS classes', () => {\n      const { container } = renderCarousel()\n      \n      const carouselSection = container.querySelector('.lusophone-carousel')\n      expect(carouselSection).toBeInTheDocument()\n    })\n  })\n\n  describe('Mobile Touch Interactions', () => {\n    it('handles swipe gestures for navigation', async () => {\n      const mockSwipeHandler = jest.fn()\n      renderCarousel({ onSwipeGesture: mockSwipeHandler })\n      \n      const gesturesContainer = screen.getByTestId('enhanced-mobile-gestures')\n      \n      // Simulate swipe gesture through the EnhancedMobileGestures component\n      fireEvent.click(gesturesContainer)\n      \n      await waitFor(() => {\n        expect(gesturesContainer).toBeInTheDocument()\n      })\n    })\n\n    it('provides haptic feedback on navigation', async () => {\n      renderCarousel()\n      \n      const nextButton = screen.getByLabelText(/next portuguese cultural items/i)\n      fireEvent.click(nextButton)\n      \n      await waitFor(() => {\n        expect(navigator.vibrate).toHaveBeenCalledWith(10)\n      })\n    })\n\n    it('maintains WCAG 2.1 AA touch target sizes', () => {\n      renderCarousel()\n      \n      const navigationButtons = screen.getAllByRole('button')\n      navigationButtons.forEach(button => {\n        const styles = window.getComputedStyle(button)\n        const minSize = button.style.minWidth || button.style.minHeight\n        if (minSize) {\n          expect(minSize).toBe('44px')\n        }\n      })\n    })\n  })\n\n  describe('PWA Features', () => {\n    it('displays offline mode indicator when offline', async () => {\n      // Mock offline state\n      Object.defineProperty(navigator, 'onLine', { value: false, writable: true })\n      \n      renderCarousel()\n      \n      await waitFor(() => {\n        expect(screen.getByText(/offline mode.*cached portuguese cultural content/i)).toBeInTheDocument()\n      })\n    })\n\n    it('shows PWA install prompt when available', async () => {\n      // Mock beforeinstallprompt event\n      const mockInstallPrompt = {\n        prompt: jest.fn(),\n        userChoice: Promise.resolve({ outcome: 'accepted' })\n      }\n\n      // Simulate install prompt availability\n      window.dispatchEvent(new CustomEvent('beforeinstallprompt', { detail: mockInstallPrompt }))\n      \n      renderCarousel()\n      \n      await waitFor(() => {\n        const installButton = screen.queryByText(/install app/i)\n        if (installButton) {\n          expect(installButton).toBeInTheDocument()\n        }\n      })\n    })\n\n    it('handles pull-to-refresh gesture', async () => {\n      const mockRefreshHandler = jest.fn().mockResolvedValue(undefined)\n      renderCarousel({ onPullToRefresh: mockRefreshHandler })\n      \n      // Simulate pull gesture\n      const gesturesContainer = screen.getByTestId('enhanced-mobile-gestures')\n      fireEvent.touchStart(gesturesContainer, {\n        touches: [{ clientX: 100, clientY: 0 }]\n      })\n      fireEvent.touchMove(gesturesContainer, {\n        touches: [{ clientX: 100, clientY: 100 }]\n      })\n      fireEvent.touchEnd(gesturesContainer)\n      \n      // Note: Actual pull-to-refresh would be handled by the EnhancedMobileGestures component\n      expect(gesturesContainer).toBeInTheDocument()\n    })\n  })\n\n  describe('Performance Monitoring', () => {\n    it('tracks and reports performance metrics', async () => {\n      const mockPerformanceHandler = jest.fn()\n      renderCarousel({ onPerformanceUpdate: mockPerformanceHandler })\n      \n      await waitFor(() => {\n        expect(mockPerformanceHandler).toHaveBeenCalled()\n        const callArgs = mockPerformanceHandler.mock.calls[0][0]\n        expect(callArgs).toHaveProperty('loadTime')\n        expect(callArgs).toHaveProperty('memoryUsage')\n        expect(callArgs).toHaveProperty('networkStatus')\n      })\n    })\n\n    it('displays performance info in development mode', () => {\n      const originalEnv = process.env.NODE_ENV\n      Object.defineProperty(process.env, 'NODE_ENV', { value: 'development' })\n      \n      const mockPerformanceHandler = jest.fn()\n      renderCarousel({ onPerformanceUpdate: mockPerformanceHandler })\n      \n      expect(screen.queryByText(/Load:/)).toBeInTheDocument()\n      \n      Object.defineProperty(process.env, 'NODE_ENV', { value: originalEnv })\n    })\n\n    it('detects slow network conditions', async () => {\n      // Mock slow connection\n      Object.defineProperty(navigator, 'connection', {\n        value: { effectiveType: '2g' },\n        writable: true\n      })\n      \n      const mockPerformanceHandler = jest.fn()\n      renderCarousel({ onPerformanceUpdate: mockPerformanceHandler })\n      \n      await waitFor(() => {\n        expect(mockPerformanceHandler).toHaveBeenCalled()\n        const callArgs = mockPerformanceHandler.mock.calls[0][0]\n        expect(callArgs.networkStatus).toBe('slow')\n      })\n    })\n  })\n\n  describe('Portuguese Cultural Features', () => {\n    it('enables Portuguese gesture detection', () => {\n      renderCarousel({ enablePortugueseGestures: true })\n      \n      const gesturesContainer = screen.getByTestId('enhanced-mobile-gestures')\n      expect(gesturesContainer).toBeInTheDocument()\n    })\n\n    it('provides accessibility announcements in Portuguese', async () => {\n      renderCarousel({ enableAccessibilityAnnouncements: true })\n      \n      const nextButton = screen.getByLabelText(/next portuguese cultural items/i)\n      fireEvent.click(nextButton)\n      \n      await waitFor(() => {\n        expect(window.speechSynthesis.speak).toHaveBeenCalled()\n      })\n    })\n\n    it('displays Portuguese cultural flag emojis', () => {\n      renderCarousel()\n      \n      // The flag emojis would be rendered within the custom renderItem function\n      expect(screen.getByText('Fado Night London')).toBeInTheDocument()\n      expect(screen.getByText('Brazilian Carnival Workshop')).toBeInTheDocument()\n    })\n  })\n\n  describe('Lazy Loading and Optimization', () => {\n    it('implements lazy loading for performance', () => {\n      renderCarousel({\n        mobileSettings: {\n          ...defaultMobileSettings,\n          enableLazyLoading: true,\n          preloadDistance: 1\n        }\n      })\n      \n      // Lazy loading would show loading placeholders for items beyond preloadDistance\n      const carouselItems = screen.getAllByTestId(/carousel-item-/)\n      expect(carouselItems.length).toBeGreaterThan(0)\n    })\n\n    it('preloads items within configured distance', () => {\n      const manyEvents = Array.from({ length: 10 }, (_, i) => ({\n        ...mockWeekendEvents[0],\n        id: `event-${i + 1}`,\n        title: { en: `Event ${i + 1}`, pt: `Evento ${i + 1}` }\n      }))\n      \n      renderCarousel({\n        items: manyEvents,\n        mobileSettings: {\n          ...defaultMobileSettings,\n          enableLazyLoading: true,\n          preloadDistance: 2\n        }\n      })\n      \n      // Should render at least the first few items\n      expect(screen.getByTestId('carousel-item-event-1')).toBeInTheDocument()\n    })\n  })\n\n  describe('Accessibility Compliance', () => {\n    it('provides proper ARIA labels for Portuguese content', () => {\n      renderCarousel()\n      \n      const carouselRegion = screen.getByRole('region')\n      expect(carouselRegion).toHaveAttribute('aria-label', expect.stringContaining('carousel'))\n      \n      const carouselContent = screen.getByRole('group')\n      expect(carouselContent).toHaveAttribute('aria-label', expect.stringContaining('Portuguese cultural'))\n    })\n\n    it('supports keyboard navigation', () => {\n      renderCarousel()\n      \n      const carouselContent = screen.getByRole('group')\n      fireEvent.keyDown(carouselContent, { key: 'ArrowRight' })\n      \n      expect(window.speechSynthesis.speak).toHaveBeenCalledWith(\n        expect.objectContaining({\n          text: expect.stringContaining('Next item')\n        })\n      )\n    })\n\n    it('announces status changes to screen readers', async () => {\n      renderCarousel()\n      \n      const statusElement = screen.getByRole('status')\n      expect(statusElement).toHaveAttribute('aria-live', 'polite')\n      expect(statusElement.textContent).toContain('Showing Portuguese cultural items')\n    })\n  })\n\n  describe('Responsive Design', () => {\n    it('adapts layout for different screen sizes', () => {\n      // Mock mobile viewport\n      Object.defineProperty(window, 'innerWidth', {\n        writable: true,\n        configurable: true,\n        value: 375\n      })\n      \n      renderCarousel()\n      \n      const carouselItems = screen.getAllByTestId(/carousel-item-/)\n      expect(carouselItems.length).toBeGreaterThan(0)\n    })\n\n    it('adjusts touch targets for mobile screens', () => {\n      renderCarousel()\n      \n      const dotIndicators = screen.getAllByRole('button').filter(btn => \n        btn.getAttribute('aria-label')?.includes('slide')\n      )\n      \n      dotIndicators.forEach(dot => {\n        expect(dot.style.minWidth || dot.style.minHeight).toBeTruthy()\n      })\n    })\n  })\n})\n\n// Test custom hooks separately\ndescribe('Mobile Performance Hook', () => {\n  it('tracks performance metrics', async () => {\n    const TestComponent = () => {\n      const metrics = useMobilePerformance()\n      return <div data-testid=\"metrics\">{JSON.stringify(metrics)}</div>\n    }\n    \n    render(\n      <LanguageProvider>\n        <TestComponent />\n      </LanguageProvider>\n    )\n    \n    const metricsElement = screen.getByTestId('metrics')\n    const metrics = JSON.parse(metricsElement.textContent || '{}')\n    \n    expect(metrics).toHaveProperty('loadTime')\n    expect(metrics).toHaveProperty('memoryUsage')\n    expect(metrics).toHaveProperty('networkStatus')\n  })\n})\n\ndescribe('PWA Features Hook', () => {\n  it('detects offline/online status', () => {\n    const TestComponent = () => {\n      const { isOffline } = usePWAFeatures({\n        enableOfflineMode: true,\n        enablePushNotifications: false,\n        enableBackgroundSync: false,\n        cacheStrategy: 'cache-first',\n        offlineQueueLimit: 10\n      })\n      return <div data-testid=\"offline-status\">{isOffline.toString()}</div>\n    }\n    \n    render(\n      <LanguageProvider>\n        <TestComponent />\n      </LanguageProvider>\n    )\n    \n    expect(screen.getByTestId('offline-status')).toHaveTextContent('false')\n  })\n})"],"names":["jest","mock","motion","div","children","props","section","AnimatePresence","useMotionValue","set","fn","get","useTransform","animate","EnhancedMobileGestures","onSwipe","onTap","data-testid","onClick","x","y","usePortugueseGestures","detectCulturalPattern","gestureHistory","Object","defineProperty","navigator","writable","value","performance","usedJSHeapSize","window","speak","cancel","getVoices","describe","mockWeekendEvents","id","title","en","pt","description","image","flagEmoji","countries","category","priority","date","time","location","price","attendees","maxAttendees","tags","defaultMobileSettings","enableSwipeGestures","enableHapticFeedback","enableMomentumScrolling","enablePullToRefresh","touchThreshold","swipeVelocityThreshold","enableLazyLoading","preloadDistance","defaultPWASettings","enableOfflineMode","enablePushNotifications","enableBackgroundSync","cacheStrategy","offlineQueueLimit","renderCarousel","render","LanguageProvider","LusophoneCarousel","items","renderItem","item","h3","p","mobileSettings","pwaSettings","enablePortugueseGestures","enableAccessibilityAnnouncements","beforeEach","clearAllMocks","it","expect","screen","getByText","toBeInTheDocument","getByTestId","container","carouselSection","querySelector","mockSwipeHandler","onSwipeGesture","gesturesContainer","fireEvent","click","waitFor","nextButton","getByLabelText","vibrate","toHaveBeenCalledWith","navigationButtons","getAllByRole","forEach","button","styles","getComputedStyle","minSize","style","minWidth","minHeight","toBe","mockInstallPrompt","prompt","userChoice","Promise","resolve","outcome","dispatchEvent","CustomEvent","detail","installButton","queryByText","mockRefreshHandler","mockResolvedValue","undefined","onPullToRefresh","touchStart","touches","clientX","clientY","touchMove","touchEnd","mockPerformanceHandler","onPerformanceUpdate","toHaveBeenCalled","callArgs","calls","toHaveProperty","originalEnv","process","env","NODE_ENV","effectiveType","networkStatus","speechSynthesis","carouselItems","getAllByTestId","length","toBeGreaterThan","manyEvents","Array","from","_","i","carouselRegion","getByRole","toHaveAttribute","stringContaining","carouselContent","keyDown","key","objectContaining","text","statusElement","textContent","toContain","configurable","dotIndicators","filter","btn","getAttribute","includes","dot","toBeTruthy","TestComponent","metrics","useMobilePerformance","JSON","stringify","metricsElement","parse","isOffline","usePWAFeatures","toString","toHaveTextContent"],"mappings":";AAYA,qBAAqB;AACrBA,KAAKC,IAAI,CAAC,iBAAiB,IAAO,CAAA;QAChCC,QAAQ;YACNC,KAAK,CAAC,EAAEC,QAAQ,EAAE,GAAGC,OAAY,iBAAK,qBAACF;oBAAK,GAAGE,KAAK;8BAAGD;;YACvDE,SAAS,CAAC,EAAEF,QAAQ,EAAE,GAAGC,OAAY,iBAAK,qBAACC;oBAAS,GAAGD,KAAK;8BAAGD;;QACjE;QACAG,iBAAiB,CAAC,EAAEH,QAAQ,EAAO,iBAAK,qBAACD;0BAAKC;;QAC9CI,gBAAgB,IAAO,CAAA;gBAAEC,KAAKT,KAAKU,EAAE;gBAAIC,KAAK,IAAM;YAAE,CAAA;QACtDC,cAAc,IAAM;QACpBC,SAASb,KAAKU,EAAE;IAClB,CAAA;AAEA,8BAA8B;AAC9BV,KAAKC,IAAI,CAAC,uCAAuC,IAAO,CAAA;QACtDa,wBAAwB,CAAC,EAAEV,QAAQ,EAAEW,OAAO,EAAEC,KAAK,EAAO,iBACxD,qBAACb;gBAAIc,eAAY;gBAA2BC,SAAS,IAAMF,QAAQ;wBAAEG,GAAG;wBAAKC,GAAG;oBAAI;0BACjFhB;;QAGLiB,uBAAuB,IAAO,CAAA;gBAC5BC,uBAAuBtB,KAAKU,EAAE,CAAC,IAAM;gBACrCa,gBAAgB,EAAE;YACpB,CAAA;IACF,CAAA;;;;;8DAnCkB;wBACsC;iCAEvB;2EAO1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BP,sBAAsB;AACtBC,OAAOC,cAAc,CAACC,WAAW,UAAU;IACzCC,UAAU;IACVC,OAAO;AACT;AAEAJ,OAAOC,cAAc,CAACC,WAAW,WAAW;IAC1CC,UAAU;IACVC,OAAO5B,KAAKU,EAAE;AAChB;AAEA,uBAAuB;AACvBc,OAAOC,cAAc,CAACI,aAAa,UAAU;IAC3CF,UAAU;IACVC,OAAO;QACLE,gBAAgB,OAAO,OAAO,GAAG,OAAO;IAC1C;AACF;AAEA,uBAAuB;AACvBN,OAAOC,cAAc,CAACM,QAAQ,mBAAmB;IAC/CJ,UAAU;IACVC,OAAO;QACLI,OAAOhC,KAAKU,EAAE;QACduB,QAAQjC,KAAKU,EAAE;QACfwB,WAAWlC,KAAKU,EAAE,CAAC,IAAM,EAAE;IAC7B;AACF;AAEAyB,SAAS,qCAAqC;IAC5C,MAAMC,oBAAwC;QAC5C;YACEC,IAAI;YACJC,OAAO;gBAAEC,IAAI;gBAAqBC,IAAI;YAAwB;YAC9DC,aAAa;gBAAEF,IAAI;gBAA8BC,IAAI;YAA8B;YACnFE,OAAO;YACPC,WAAW;YACXC,WAAW;gBAAC;aAAW;YACvBC,UAAU;YACVC,UAAU;YACVC,MAAM;YACNC,MAAM;YACNC,UAAU;YACVC,OAAO;YACPC,WAAW;YACXC,cAAc;YACdC,MAAM;gBAAC;gBAAQ;aAAoB;QACrC;QACA;YACEhB,IAAI;YACJC,OAAO;gBAAEC,IAAI;gBAA+BC,IAAI;YAAkC;YAClFC,aAAa;gBAAEF,IAAI;gBAAqBC,IAAI;YAA0B;YACtEE,OAAO;YACPC,WAAW;YACXC,WAAW;gBAAC;aAAS;YACrBC,UAAU;YACVC,UAAU;YACVC,MAAM;YACNC,MAAM;YACNC,UAAU;YACVC,OAAO;YACPC,WAAW;YACXC,cAAc;YACdC,MAAM;gBAAC;gBAAS;aAAQ;QAC1B;KACD;IAED,MAAMC,wBAAiD;QACrDC,qBAAqB;QACrBC,sBAAsB;QACtBC,yBAAyB;QACzBC,qBAAqB;QACrBC,gBAAgB;QAChBC,wBAAwB;QACxBC,mBAAmB;QACnBC,iBAAiB;IACnB;IAEA,MAAMC,qBAA2C;QAC/CC,mBAAmB;QACnBC,yBAAyB;QACzBC,sBAAsB;QACtBC,eAAe;QACfC,mBAAmB;IACrB;IAEA,MAAMC,iBAAiB,CAAChE;QACtB,OAAOiE,IAAAA,cAAM,gBACX,qBAACC,iCAAgB;sBACf,cAAA,qBAACC,0BAAiB;gBAChBC,OAAOrC;gBACPsC,YAAY,CAACC,qBACX,sBAACxE;wBAAIc,eAAa,CAAC,cAAc,EAAE0D,KAAKtC,EAAE,CAAC,CAAC;;0CAC1C,qBAACuC;0CAAID,KAAKrC,KAAK,CAACC,EAAE;;0CAClB,qBAACsC;0CAAGF,KAAKlC,WAAW,EAAEF;;;;gBAG1BD,OAAO;oBACLC,IAAI;oBACJC,IAAI;gBACN;gBACAsC,gBAAgBxB;gBAChByB,aAAahB;gBACbiB,0BAA0B;gBAC1BC,kCAAkC;gBACjC,GAAG5E,KAAK;;;IAIjB;IAEA6E,WAAW;QACTlF,KAAKmF,aAAa;QAClB,iCAAiC;QACjC3D,OAAOC,cAAc,CAACC,WAAW,UAAU;YAAEE,OAAO;YAAMD,UAAU;QAAK;IAC3E;IAEAQ,SAAS,8BAA8B;QACrCiD,GAAG,wCAAwC;YACzCf;YAEAgB,OAAOC,cAAM,CAACC,SAAS,CAAC,+BAA+BC,iBAAiB;YACxEH,OAAOC,cAAM,CAACG,WAAW,CAAC,0BAA0BD,iBAAiB;YACrEH,OAAOC,cAAM,CAACG,WAAW,CAAC,6BAA6BD,iBAAiB;QAC1E;QAEAJ,GAAG,kDAAkD;YACnDf;YAEAgB,OAAOC,cAAM,CAACC,SAAS,CAAC,sBAAsBC,iBAAiB;YAC/DH,OAAOC,cAAM,CAACC,SAAS,CAAC,gCAAgCC,iBAAiB;QAC3E;QAEAJ,GAAG,uCAAuC;YACxC,MAAM,EAAEM,SAAS,EAAE,GAAGrB;YAEtB,MAAMsB,kBAAkBD,UAAUE,aAAa,CAAC;YAChDP,OAAOM,iBAAiBH,iBAAiB;QAC3C;IACF;IAEArD,SAAS,6BAA6B;QACpCiD,GAAG,yCAAyC;YAC1C,MAAMS,mBAAmB7F,KAAKU,EAAE;YAChC2D,eAAe;gBAAEyB,gBAAgBD;YAAiB;YAElD,MAAME,oBAAoBT,cAAM,CAACG,WAAW,CAAC;YAE7C,sEAAsE;YACtEO,iBAAS,CAACC,KAAK,CAACF;YAEhB,MAAMG,IAAAA,eAAO,EAAC;gBACZb,OAAOU,mBAAmBP,iBAAiB;YAC7C;QACF;QAEAJ,GAAG,0CAA0C;YAC3Cf;YAEA,MAAM8B,aAAab,cAAM,CAACc,cAAc,CAAC;YACzCJ,iBAAS,CAACC,KAAK,CAACE;YAEhB,MAAMD,IAAAA,eAAO,EAAC;gBACZb,OAAO3D,UAAU2E,OAAO,EAAEC,oBAAoB,CAAC;YACjD;QACF;QAEAlB,GAAG,4CAA4C;YAC7Cf;YAEA,MAAMkC,oBAAoBjB,cAAM,CAACkB,YAAY,CAAC;YAC9CD,kBAAkBE,OAAO,CAACC,CAAAA;gBACxB,MAAMC,SAAS5E,OAAO6E,gBAAgB,CAACF;gBACvC,MAAMG,UAAUH,OAAOI,KAAK,CAACC,QAAQ,IAAIL,OAAOI,KAAK,CAACE,SAAS;gBAC/D,IAAIH,SAAS;oBACXxB,OAAOwB,SAASI,IAAI,CAAC;gBACvB;YACF;QACF;IACF;IAEA9E,SAAS,gBAAgB;QACvBiD,GAAG,gDAAgD;YACjD,qBAAqB;YACrB5D,OAAOC,cAAc,CAACC,WAAW,UAAU;gBAAEE,OAAO;gBAAOD,UAAU;YAAK;YAE1E0C;YAEA,MAAM6B,IAAAA,eAAO,EAAC;gBACZb,OAAOC,cAAM,CAACC,SAAS,CAAC,sDAAsDC,iBAAiB;YACjG;QACF;QAEAJ,GAAG,2CAA2C;YAC5C,iCAAiC;YACjC,MAAM8B,oBAAoB;gBACxBC,QAAQnH,KAAKU,EAAE;gBACf0G,YAAYC,QAAQC,OAAO,CAAC;oBAAEC,SAAS;gBAAW;YACpD;YAEA,uCAAuC;YACvCxF,OAAOyF,aAAa,CAAC,IAAIC,YAAY,uBAAuB;gBAAEC,QAAQR;YAAkB;YAExF7C;YAEA,MAAM6B,IAAAA,eAAO,EAAC;gBACZ,MAAMyB,gBAAgBrC,cAAM,CAACsC,WAAW,CAAC;gBACzC,IAAID,eAAe;oBACjBtC,OAAOsC,eAAenC,iBAAiB;gBACzC;YACF;QACF;QAEAJ,GAAG,mCAAmC;YACpC,MAAMyC,qBAAqB7H,KAAKU,EAAE,GAAGoH,iBAAiB,CAACC;YACvD1D,eAAe;gBAAE2D,iBAAiBH;YAAmB;YAErD,wBAAwB;YACxB,MAAM9B,oBAAoBT,cAAM,CAACG,WAAW,CAAC;YAC7CO,iBAAS,CAACiC,UAAU,CAAClC,mBAAmB;gBACtCmC,SAAS;oBAAC;wBAAEC,SAAS;wBAAKC,SAAS;oBAAE;iBAAE;YACzC;YACApC,iBAAS,CAACqC,SAAS,CAACtC,mBAAmB;gBACrCmC,SAAS;oBAAC;wBAAEC,SAAS;wBAAKC,SAAS;oBAAI;iBAAE;YAC3C;YACApC,iBAAS,CAACsC,QAAQ,CAACvC;YAEnB,wFAAwF;YACxFV,OAAOU,mBAAmBP,iBAAiB;QAC7C;IACF;IAEArD,SAAS,0BAA0B;QACjCiD,GAAG,0CAA0C;YAC3C,MAAMmD,yBAAyBvI,KAAKU,EAAE;YACtC2D,eAAe;gBAAEmE,qBAAqBD;YAAuB;YAE7D,MAAMrC,IAAAA,eAAO,EAAC;gBACZb,OAAOkD,wBAAwBE,gBAAgB;gBAC/C,MAAMC,WAAWH,uBAAuBtI,IAAI,CAAC0I,KAAK,CAAC,EAAE,CAAC,EAAE;gBACxDtD,OAAOqD,UAAUE,cAAc,CAAC;gBAChCvD,OAAOqD,UAAUE,cAAc,CAAC;gBAChCvD,OAAOqD,UAAUE,cAAc,CAAC;YAClC;QACF;QAEAxD,GAAG,iDAAiD;YAClD,MAAMyD,cAAcC,QAAQC,GAAG,CAACC,QAAQ;YACxCxH,OAAOC,cAAc,CAACqH,QAAQC,GAAG,EAAE,YAAY;gBAAEnH,OAAO;YAAc;YAEtE,MAAM2G,yBAAyBvI,KAAKU,EAAE;YACtC2D,eAAe;gBAAEmE,qBAAqBD;YAAuB;YAE7DlD,OAAOC,cAAM,CAACsC,WAAW,CAAC,UAAUpC,iBAAiB;YAErDhE,OAAOC,cAAc,CAACqH,QAAQC,GAAG,EAAE,YAAY;gBAAEnH,OAAOiH;YAAY;QACtE;QAEAzD,GAAG,mCAAmC;YACpC,uBAAuB;YACvB5D,OAAOC,cAAc,CAACC,WAAW,cAAc;gBAC7CE,OAAO;oBAAEqH,eAAe;gBAAK;gBAC7BtH,UAAU;YACZ;YAEA,MAAM4G,yBAAyBvI,KAAKU,EAAE;YACtC2D,eAAe;gBAAEmE,qBAAqBD;YAAuB;YAE7D,MAAMrC,IAAAA,eAAO,EAAC;gBACZb,OAAOkD,wBAAwBE,gBAAgB;gBAC/C,MAAMC,WAAWH,uBAAuBtI,IAAI,CAAC0I,KAAK,CAAC,EAAE,CAAC,EAAE;gBACxDtD,OAAOqD,SAASQ,aAAa,EAAEjC,IAAI,CAAC;YACtC;QACF;IACF;IAEA9E,SAAS,gCAAgC;QACvCiD,GAAG,wCAAwC;YACzCf,eAAe;gBAAEW,0BAA0B;YAAK;YAEhD,MAAMe,oBAAoBT,cAAM,CAACG,WAAW,CAAC;YAC7CJ,OAAOU,mBAAmBP,iBAAiB;QAC7C;QAEAJ,GAAG,sDAAsD;YACvDf,eAAe;gBAAEY,kCAAkC;YAAK;YAExD,MAAMkB,aAAab,cAAM,CAACc,cAAc,CAAC;YACzCJ,iBAAS,CAACC,KAAK,CAACE;YAEhB,MAAMD,IAAAA,eAAO,EAAC;gBACZb,OAAOtD,OAAOoH,eAAe,CAACnH,KAAK,EAAEyG,gBAAgB;YACvD;QACF;QAEArD,GAAG,4CAA4C;YAC7Cf;YAEA,0EAA0E;YAC1EgB,OAAOC,cAAM,CAACC,SAAS,CAAC,sBAAsBC,iBAAiB;YAC/DH,OAAOC,cAAM,CAACC,SAAS,CAAC,gCAAgCC,iBAAiB;QAC3E;IACF;IAEArD,SAAS,iCAAiC;QACxCiD,GAAG,2CAA2C;YAC5Cf,eAAe;gBACbS,gBAAgB;oBACd,GAAGxB,qBAAqB;oBACxBO,mBAAmB;oBACnBC,iBAAiB;gBACnB;YACF;YAEA,gFAAgF;YAChF,MAAMsF,gBAAgB9D,cAAM,CAAC+D,cAAc,CAAC;YAC5ChE,OAAO+D,cAAcE,MAAM,EAAEC,eAAe,CAAC;QAC/C;QAEAnE,GAAG,6CAA6C;YAC9C,MAAMoE,aAAaC,MAAMC,IAAI,CAAC;gBAAEJ,QAAQ;YAAG,GAAG,CAACK,GAAGC,IAAO,CAAA;oBACvD,GAAGxH,iBAAiB,CAAC,EAAE;oBACvBC,IAAI,CAAC,MAAM,EAAEuH,IAAI,EAAE,CAAC;oBACpBtH,OAAO;wBAAEC,IAAI,CAAC,MAAM,EAAEqH,IAAI,EAAE,CAAC;wBAAEpH,IAAI,CAAC,OAAO,EAAEoH,IAAI,EAAE,CAAC;oBAAC;gBACvD,CAAA;YAEAvF,eAAe;gBACbI,OAAO+E;gBACP1E,gBAAgB;oBACd,GAAGxB,qBAAqB;oBACxBO,mBAAmB;oBACnBC,iBAAiB;gBACnB;YACF;YAEA,6CAA6C;YAC7CuB,OAAOC,cAAM,CAACG,WAAW,CAAC,0BAA0BD,iBAAiB;QACvE;IACF;IAEArD,SAAS,4BAA4B;QACnCiD,GAAG,sDAAsD;YACvDf;YAEA,MAAMwF,iBAAiBvE,cAAM,CAACwE,SAAS,CAAC;YACxCzE,OAAOwE,gBAAgBE,eAAe,CAAC,cAAc1E,OAAO2E,gBAAgB,CAAC;YAE7E,MAAMC,kBAAkB3E,cAAM,CAACwE,SAAS,CAAC;YACzCzE,OAAO4E,iBAAiBF,eAAe,CAAC,cAAc1E,OAAO2E,gBAAgB,CAAC;QAChF;QAEA5E,GAAG,gCAAgC;YACjCf;YAEA,MAAM4F,kBAAkB3E,cAAM,CAACwE,SAAS,CAAC;YACzC9D,iBAAS,CAACkE,OAAO,CAACD,iBAAiB;gBAAEE,KAAK;YAAa;YAEvD9E,OAAOtD,OAAOoH,eAAe,CAACnH,KAAK,EAAEsE,oBAAoB,CACvDjB,OAAO+E,gBAAgB,CAAC;gBACtBC,MAAMhF,OAAO2E,gBAAgB,CAAC;YAChC;QAEJ;QAEA5E,GAAG,8CAA8C;YAC/Cf;YAEA,MAAMiG,gBAAgBhF,cAAM,CAACwE,SAAS,CAAC;YACvCzE,OAAOiF,eAAeP,eAAe,CAAC,aAAa;YACnD1E,OAAOiF,cAAcC,WAAW,EAAEC,SAAS,CAAC;QAC9C;IACF;IAEArI,SAAS,qBAAqB;QAC5BiD,GAAG,4CAA4C;YAC7C,uBAAuB;YACvB5D,OAAOC,cAAc,CAACM,QAAQ,cAAc;gBAC1CJ,UAAU;gBACV8I,cAAc;gBACd7I,OAAO;YACT;YAEAyC;YAEA,MAAM+E,gBAAgB9D,cAAM,CAAC+D,cAAc,CAAC;YAC5ChE,OAAO+D,cAAcE,MAAM,EAAEC,eAAe,CAAC;QAC/C;QAEAnE,GAAG,4CAA4C;YAC7Cf;YAEA,MAAMqG,gBAAgBpF,cAAM,CAACkB,YAAY,CAAC,UAAUmE,MAAM,CAACC,CAAAA,MACzDA,IAAIC,YAAY,CAAC,eAAeC,SAAS;YAG3CJ,cAAcjE,OAAO,CAACsE,CAAAA;gBACpB1F,OAAO0F,IAAIjE,KAAK,CAACC,QAAQ,IAAIgE,IAAIjE,KAAK,CAACE,SAAS,EAAEgE,UAAU;YAC9D;QACF;IACF;AACF;AAEA,+BAA+B;AAC/B7I,SAAS,2BAA2B;IAClCiD,GAAG,8BAA8B;QAC/B,MAAM6F,gBAAgB;YACpB,MAAMC,UAAUC,IAAAA,uCAAoB;YACpC,qBAAO,qBAAChL;gBAAIc,eAAY;0BAAWmK,KAAKC,SAAS,CAACH;;QACpD;QAEA5G,IAAAA,cAAM,gBACJ,qBAACC,iCAAgB;sBACf,cAAA,qBAAC0G;;QAIL,MAAMK,iBAAiBhG,cAAM,CAACG,WAAW,CAAC;QAC1C,MAAMyF,UAAUE,KAAKG,KAAK,CAACD,eAAef,WAAW,IAAI;QAEzDlF,OAAO6F,SAAStC,cAAc,CAAC;QAC/BvD,OAAO6F,SAAStC,cAAc,CAAC;QAC/BvD,OAAO6F,SAAStC,cAAc,CAAC;IACjC;AACF;AAEAzG,SAAS,qBAAqB;IAC5BiD,GAAG,iCAAiC;QAClC,MAAM6F,gBAAgB;YACpB,MAAM,EAAEO,SAAS,EAAE,GAAGC,IAAAA,iCAAc,EAAC;gBACnCzH,mBAAmB;gBACnBC,yBAAyB;gBACzBC,sBAAsB;gBACtBC,eAAe;gBACfC,mBAAmB;YACrB;YACA,qBAAO,qBAACjE;gBAAIc,eAAY;0BAAkBuK,UAAUE,QAAQ;;QAC9D;QAEApH,IAAAA,cAAM,gBACJ,qBAACC,iCAAgB;sBACf,cAAA,qBAAC0G;;QAIL5F,OAAOC,cAAM,CAACG,WAAW,CAAC,mBAAmBkG,iBAAiB,CAAC;IACjE;AACF"}