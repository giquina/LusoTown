{"version":3,"sources":["/workspaces/LusoTown/web-app/src/components/LusoBotChat.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport logger from \"@/utils/logger\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport {\n  ChatBubbleLeftRightIcon,\n  PaperAirplaneIcon,\n  HeartIcon,\n  LanguageIcon,\n  MapPinIcon,\n  SparklesIcon,\n  AcademicCapIcon,\n  BuildingStorefrontIcon,\n  CalendarDaysIcon,\n  UserGroupIcon,\n  ArrowTopRightOnSquareIcon,\n  SunIcon,\n  MoonIcon,\n  XMarkIcon,\n  MicrophoneIcon,\n  PlusIcon,\n} from \"@heroicons/react/24/outline\";\nimport { HeartIcon as HeartSolidIcon } from \"@heroicons/react/24/solid\";\nimport { useLanguage } from \"@/context/LanguageContext\";\nimport { useSubscription } from \"@/context/SubscriptionContext\";\nimport {\n  LusoBotMessage,\n  LusoBotSession,\n  MessageMetadata,\n  EmotionalTone,\n  LusoBotSuggestion,\n  PortugueseRegion,\n} from \"@/lib/lusobot-engine\";\nimport { toast } from \"react-hot-toast\";\n\ninterface LusoBotChatProps {\n  className?: string;\n  isEmbedded?: boolean;\n  onClose?: () => void;\n}\n\ninterface SaudadeMeterProps {\n  emotionalTone: EmotionalTone;\n  language: string;\n}\n\nfunction SaudadeMeter({ emotionalTone, language }: SaudadeMeterProps) {\n  const { saudade, nostalgia, hope, community, heritage } = emotionalTone;\n\n  const emotions = [\n    {\n      key: \"saudade\",\n      value: saudade,\n      label: language === \"pt\" ? \"Saudade\" : \"Longing\",\n      color: \"from-blue-400 to-indigo-600\",\n    },\n    {\n      key: \"nostalgia\",\n      value: nostalgia,\n      label: language === \"pt\" ? \"Nostalgia\" : \"Nostalgia\",\n      color: \"from-purple-400 to-pink-600\",\n    },\n    {\n      key: \"hope\",\n      value: hope,\n      label: language === \"pt\" ? \"Esperança\" : \"Hope\",\n      color: \"from-green-400 to-emerald-600\",\n    },\n    {\n      key: \"community\",\n      value: community,\n      label: language === \"pt\" ? \"Comunidade\" : \"Community\",\n      color: \"from-orange-400 to-red-600\",\n    },\n    {\n      key: \"heritage\",\n      value: heritage,\n      label: language === \"pt\" ? \"Património\" : \"Heritage\",\n      color: \"from-amber-400 to-yellow-600\",\n    },\n  ];\n\n  const hasSignificantEmotions = emotions.some(\n    (emotion) => emotion.value > 0.3\n  );\n\n  if (!hasSignificantEmotions) return null;\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 10 }}\n      animate={{ opacity: 1, y: 0 }}\n      className=\"bg-gradient-to-r from-primary-50 to-secondary-50 rounded-xl p-4 mb-4\"\n    >\n      <div className=\"flex items-center gap-2 mb-3\">\n        <HeartSolidIcon className=\"w-4 h-4 text-primary-600\" />\n        <span className=\"text-sm font-medium text-primary-900\">\n          {language === \"pt\"\n            ? \"Tom Emocional Detectado\"\n            : \"Emotional Tone Detected\"}\n        </span>\n      </div>\n\n      <div className=\"space-y-2\">\n        {emotions\n          .filter((emotion) => emotion.value > 0.1)\n          .map((emotion) => (\n            <div key={emotion.key} className=\"flex items-center gap-3\">\n              <span className=\"text-xs font-medium text-gray-700 w-20 text-right\">\n                {emotion.label}\n              </span>\n              <div className=\"flex-1 bg-gray-200 rounded-full h-2 overflow-hidden\">\n                <motion.div\n                  initial={{ width: 0 }}\n                  animate={{ width: `${emotion.value * 100}%` }}\n                  transition={{ duration: 0.8, ease: \"easeOut\" }}\n                  className={`h-full bg-gradient-to-r ${emotion.color} rounded-full`}\n                />\n              </div>\n              <span className=\"text-xs text-gray-500 w-8\">\n                {Math.round(emotion.value * 100)}%\n              </span>\n            </div>\n          ))}\n      </div>\n    </motion.div>\n  );\n}\n\ninterface SuggestionCardProps {\n  suggestion: LusoBotSuggestion;\n  onSelect: (suggestion: LusoBotSuggestion) => void;\n  language: string;\n}\n\nfunction SuggestionCard({\n  suggestion,\n  onSelect,\n  language,\n}: SuggestionCardProps) {\n  const getIcon = () => {\n    switch (suggestion.type) {\n      case \"event\":\n        return <CalendarDaysIcon className=\"w-5 h-5\" />;\n      case \"business\":\n        return <BuildingStorefrontIcon className=\"w-5 h-5\" />;\n      case \"community\":\n        return <UserGroupIcon className=\"w-5 h-5\" />;\n      case \"language\":\n        return <LanguageIcon className=\"w-5 h-5\" />;\n      case \"resource\":\n        return <AcademicCapIcon className=\"w-5 h-5\" />;\n      default:\n        return <SparklesIcon className=\"w-5 h-5\" />;\n    }\n  };\n\n  const getPriorityColor = () => {\n    switch (suggestion.priority) {\n      case \"high\":\n        return \"border-l-primary-500 bg-primary-50\";\n      case \"medium\":\n        return \"border-l-secondary-500 bg-secondary-50\";\n      case \"low\":\n        return \"border-l-gray-400 bg-gray-50\";\n    }\n  };\n\n  return (\n    <motion.button\n      initial={{ opacity: 0, x: 20 }}\n      animate={{ opacity: 1, x: 0 }}\n      whileHover={{ scale: 1.02 }}\n      whileTap={{ scale: 0.98 }}\n      onClick={() => onSelect(suggestion)}\n      className={`w-full text-left p-3 rounded-lg border-l-4 ${getPriorityColor()} \n        hover:shadow-md transition-all duration-200 group`}\n    >\n      <div className=\"flex items-start gap-3\">\n        <div className=\"text-primary-600 group-hover:text-primary-700 transition-colors\">\n          {getIcon()}\n        </div>\n        <div className=\"flex-1 min-w-0\">\n          <h4 className=\"font-medium text-gray-900 text-sm group-hover:text-primary-900 transition-colors\">\n            {suggestion.title}\n          </h4>\n          <p className=\"text-xs text-gray-600 mt-1 line-clamp-2\">\n            {suggestion.description}\n          </p>\n          <div className=\"flex items-center gap-2 mt-2\">\n            <span\n              className={`text-xs px-2 py-0.5 rounded-full ${getPriorityColor()}`}\n            >\n              {suggestion.priority === \"high\"\n                ? language === \"pt\"\n                  ? \"Alta\"\n                  : \"High\"\n                : suggestion.priority === \"medium\"\n                  ? language === \"pt\"\n                    ? \"Média\"\n                    : \"Medium\"\n                  : language === \"pt\"\n                    ? \"Baixa\"\n                    : \"Low\"}\n            </span>\n            <span className=\"text-xs text-gray-500\">\n              {Math.round(suggestion.culturalRelevance * 100)}%{\" \"}\n              {language === \"pt\" ? \"relevante\" : \"relevant\"}\n            </span>\n          </div>\n        </div>\n        <ArrowTopRightOnSquareIcon className=\"w-4 h-4 text-gray-400 group-hover:text-primary-600 transition-colors\" />\n      </div>\n    </motion.button>\n  );\n}\n\ninterface MessageBubbleProps {\n  message: LusoBotMessage;\n  language: string;\n  isLatest: boolean;\n}\n\nfunction MessageBubble({ message, language, isLatest }: MessageBubbleProps) {\n  const isBot = message.role === \"assistant\";\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20, scale: 0.95 }}\n      animate={{ opacity: 1, y: 0, scale: 1 }}\n      transition={{ duration: 0.3 }}\n      className={`flex ${isBot ? \"justify-start\" : \"justify-end\"} mb-4`}\n    >\n      <div className={`max-w-[85%] ${isBot ? \"order-2\" : \"order-1\"}`}>\n        {/* Avatar */}\n        {isBot && (\n          <div className=\"flex items-center gap-2 mb-2\">\n            <div className=\"w-8 h-8 bg-gradient-to-r from-primary-500 to-secondary-500 rounded-full flex items-center justify-center\">\n              <span className=\"text-white font-bold text-sm\">🇵🇹</span>\n            </div>\n            <span className=\"text-xs font-medium text-gray-600\">LusoBot</span>\n          </div>\n        )}\n\n        {/* Message Content */}\n        <div\n          className={`\n          rounded-2xl px-4 py-3 shadow-sm\n          ${\n            isBot\n              ? \"bg-white border border-gray-100 text-gray-900\"\n              : \"bg-gradient-to-r from-primary-500 to-secondary-500 text-white\"\n          }\n        `}\n        >\n          <p className=\"text-sm leading-relaxed whitespace-pre-wrap\">\n            {message.content}\n          </p>\n\n          {/* Timestamp */}\n          <div\n            className={`text-xs mt-2 ${isBot ? \"text-gray-500\" : \"text-white/80\"}`}\n          >\n            {message.timestamp.toLocaleTimeString(\n              language === \"pt\" ? \"pt-PT\" : \"en-GB\",\n              {\n                hour: \"2-digit\",\n                minute: \"2-digit\",\n              }\n            )}\n          </div>\n        </div>\n\n        {/* Emotional Tone Display */}\n        {isBot && message.emotionalTone && isLatest && (\n          <SaudadeMeter\n            emotionalTone={message.emotionalTone}\n            language={language}\n          />\n        )}\n      </div>\n    </motion.div>\n  );\n}\n\nexport default function LusoBotChat({\n  className = \"\",\n  isEmbedded = false,\n  onClose,\n}: LusoBotChatProps) {\n  const { language, t } = useLanguage();\n  const { hasActiveSubscription } = useSubscription();\n\n  const [session, setSession] = useState<LusoBotSession | null>(null);\n  const [messages, setMessages] = useState<LusoBotMessage[]>([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [suggestions, setSuggestions] = useState<LusoBotSuggestion[]>([]);\n  const [isListening, setIsListening] = useState(false);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [stickToBottom, setStickToBottom] = useState(true);\n\n  // Initialize chat session\n  useEffect(() => {\n    const userContext: MessageMetadata = {\n      userRegion: \"diaspora_uk\" as PortugueseRegion,\n      communityLevel: hasActiveSubscription ? \"active\" : \"newcomer\",\n      languageProficiency: language === \"pt\" ? \"native\" : \"learning\",\n      interests: [\"community\", \"culture\", \"events\"],\n      mood: \"curious\",\n    };\n\n    const newSession = new LusoBotSession(userContext, language);\n    setSession(newSession);\n    setMessages(newSession.getMessages());\n  }, [language, hasActiveSubscription]);\n\n  // Auto-scroll to bottom when stickToBottom is true\n  useEffect(() => {\n    if (stickToBottom) {\n      messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    }\n  }, [messages, stickToBottom]);\n\n  // Track user scroll to toggle stickToBottom\n  const handleScroll = useCallback(() => {\n    const el = scrollContainerRef.current;\n    if (!el) return;\n    const threshold = 48; // px from bottom counts as at-bottom\n    const atBottom =\n      el.scrollHeight - el.scrollTop - el.clientHeight <= threshold;\n    setStickToBottom(atBottom);\n  }, []);\n\n  // Update suggestions when messages change\n  useEffect(() => {\n    const latestMessage = messages[messages.length - 1];\n    if (\n      latestMessage &&\n      latestMessage.role === \"assistant\" &&\n      latestMessage.suggestions\n    ) {\n      setSuggestions(latestMessage.suggestions);\n    }\n  }, [messages]);\n\n  const handleSendMessage = useCallback(async () => {\n    if (!inputValue.trim() || !session || isLoading) return;\n\n    const messageContent = inputValue.trim();\n    setInputValue(\"\");\n    setIsLoading(true);\n\n    try {\n      const response = await session.sendMessage(messageContent);\n      setMessages(session.getMessages());\n\n      // Show success feedback for emotional support\n      if (response.emotionalTone && response.emotionalTone.saudade > 0.5) {\n        toast.success(\n          language === \"pt\"\n            ? \"Estou aqui para te apoiar 💙\"\n            : \"I'm here to support you 💙\"\n        );\n      }\n    } catch (error) {\n      logger.error(\"Error sending message:\", error);\n      toast.error(\n        language === \"pt\"\n          ? \"Erro ao enviar mensagem. Tenta novamente.\"\n          : \"Error sending message. Please try again.\"\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  }, [inputValue, session, isLoading, language]);\n\n  const handleKeyPress = useCallback(\n    (e: React.KeyboardEvent) => {\n      if (e.key === \"Enter\" && !e.shiftKey) {\n        e.preventDefault();\n        handleSendMessage();\n      }\n    },\n    [handleSendMessage]\n  );\n\n  const handleSuggestionSelect = useCallback(\n    async (suggestion: LusoBotSuggestion) => {\n      if (suggestion.link) {\n        window.open(suggestion.link, \"_blank\");\n        return;\n      }\n\n      // Handle different suggestion actions\n      switch (suggestion.action) {\n        case \"speak\":\n          if (suggestion.voicePersonality && session) {\n            try {\n              await session.enableVoiceInteraction(suggestion.voicePersonality);\n              const voiceMessage =\n                language === \"pt\"\n                  ? `Voz cultural ativada! Agora posso falar contigo com personalidade ${suggestion.title}.`\n                  : `Cultural voice activated! I can now speak with you using ${suggestion.title} personality.`;\n\n              // Speak the activation message\n              await session.speakMessage(voiceMessage, \"warm\");\n\n              toast.success(\n                language === \"pt\"\n                  ? \"Voz cultural ativada! 🎵\"\n                  : \"Cultural voice activated! 🎵\"\n              );\n            } catch (error) {\n              toast.error(\n                language === \"pt\"\n                  ? \"Erro ao ativar voz. Verifique as permissões do microfone.\"\n                  : \"Error activating voice. Please check microphone permissions.\"\n              );\n            }\n          }\n          break;\n\n        case \"learn\":\n          if (suggestion.type === \"language\" && session) {\n            try {\n              const lesson = await session.getPersonalizedLesson(\n                suggestion.title\n              );\n              if (lesson) {\n                setInputValue(\n                  language === \"pt\"\n                    ? `Quero aprender: ${lesson.title[language]}`\n                    : `I want to learn: ${lesson.title[language]}`\n                );\n                toast.success(\n                  language === \"pt\"\n                    ? \"Lição personalizada encontrada! 📚\"\n                    : \"Personalized lesson found! 📚\"\n                );\n              }\n            } catch (error) {\n              logger.error(\"Error loading lesson:\", error);\n            }\n          } else {\n            setInputValue(\n              language === \"pt\"\n                ? `Ensina-me sobre: ${suggestion.title}`\n                : `Teach me about: ${suggestion.title}`\n            );\n          }\n          break;\n\n        case \"practice\":\n          setInputValue(\n            language === \"pt\"\n              ? `Quero praticar: ${suggestion.title}`\n              : `I want to practice: ${suggestion.title}`\n          );\n          break;\n\n        case \"support\":\n          setInputValue(\n            language === \"pt\"\n              ? `Preciso de apoio com: ${suggestion.title}`\n              : `I need support with: ${suggestion.title}`\n          );\n          break;\n\n        case \"connect\":\n          if (suggestion.link) {\n            window.open(suggestion.link, \"_blank\");\n          } else {\n            setInputValue(\n              language === \"pt\"\n                ? `Como posso conectar-me: ${suggestion.title}`\n                : `How can I connect: ${suggestion.title}`\n            );\n          }\n          break;\n\n        default:\n          // Fallback to original behavior\n          setInputValue(\n            language === \"pt\"\n              ? `Conte-me mais sobre: ${suggestion.title}`\n              : `Tell me more about: ${suggestion.title}`\n          );\n      }\n\n      inputRef.current?.focus();\n    },\n    [language, session]\n  );\n\n  const handleVoiceInput = useCallback(() => {\n    if (!(\"webkitSpeechRecognition\" in window)) {\n      toast.error(\n        language === \"pt\"\n          ? \"Reconhecimento de voz não suportado neste navegador\"\n          : \"Voice recognition not supported in this browser\"\n      );\n      return;\n    }\n\n    setIsListening(true);\n    const recognition = new (window as any).webkitSpeechRecognition();\n\n    // Enhanced language detection based on user context\n    const userRegion = session?.getCulturalProfile()?.region || \"portugal\";\n    recognition.lang =\n      language === \"pt\"\n        ? userRegion.includes(\"brasil\")\n          ? \"pt-BR\"\n          : \"pt-PT\"\n        : \"en-GB\";\n\n    recognition.continuous = false;\n    recognition.interimResults = true;\n    recognition.maxAlternatives = 3; // Get multiple alternatives for better accuracy\n\n    recognition.onresult = (event: any) => {\n      let interimTranscript = \"\";\n      let finalTranscript = \"\";\n\n      for (let i = event.resultIndex; i < event.results.length; ++i) {\n        const transcript = event.results[i][0].transcript;\n        if (event.results[i].isFinal) {\n          finalTranscript += transcript;\n        } else {\n          interimTranscript += transcript;\n        }\n      }\n\n      if (finalTranscript) {\n        setInputValue(finalTranscript.trim());\n        setIsListening(false);\n\n        // Auto-send message if voice input is complete\n        if (finalTranscript.trim()) {\n          setTimeout(() => handleSendMessage(), 500);\n        }\n\n        // Provide pronunciation feedback for language learners\n        if (\n          session &&\n          session.getCulturalProfile()?.languageLevel !== \"native\"\n        ) {\n          session\n            .assessPronunciation(finalTranscript.trim())\n            .then((assessment: any) => {\n              if (assessment.accuracy > 0.8) {\n                toast.success(\n                  language === \"pt\"\n                    ? `Boa pronúncia! ${Math.round(assessment.accuracy * 100)}% acerto`\n                    : `Good pronunciation! ${Math.round(assessment.accuracy * 100)}% accuracy`\n                );\n              }\n            })\n            .catch(logger.error);\n        }\n      }\n    };\n\n    recognition.onerror = (event: any) => {\n      setIsListening(false);\n      const errorMessages = {\n        network:\n          language === \"pt\"\n            ? \"Erro de rede. Verifique sua conexão.\"\n            : \"Network error. Check your connection.\",\n        \"not-allowed\":\n          language === \"pt\"\n            ? \"Permissão negada. Active o microfone.\"\n            : \"Permission denied. Please enable microphone.\",\n        \"no-speech\":\n          language === \"pt\"\n            ? \"Nenhuma fala detectada. Tente novamente.\"\n            : \"No speech detected. Please try again.\",\n        \"audio-capture\":\n          language === \"pt\"\n            ? \"Microfone não disponível.\"\n            : \"Microphone not available.\",\n        \"language-not-supported\":\n          language === \"pt\"\n            ? \"Idioma não suportado.\"\n            : \"Language not supported.\",\n      };\n\n      const message =\n        errorMessages[event.error as keyof typeof errorMessages] ||\n        (language === \"pt\"\n          ? \"Erro no reconhecimento de voz\"\n          : \"Voice recognition error\");\n\n      toast.error(message);\n    };\n\n    recognition.onend = () => {\n      setIsListening(false);\n    };\n\n    // Provide user feedback about voice activation\n    toast.info(\n      language === \"pt\"\n        ? `Fale agora em ${recognition.lang}... 🎤`\n        : `Speak now in ${recognition.lang}... 🎤`\n    );\n\n    recognition.start();\n  }, [language, session, handleSendMessage]);\n\n  const quickStarters = [\n    {\n      pt: \"Sou novo no Reino Unido. Por onde começo?\",\n      en: \"I'm new to the UK. Where do I start?\",\n      category: \"newcomer\",\n      icon: \"🇬🇧\",\n    },\n    {\n      pt: \"Tenho saudades de casa. Como posso lidar com isso?\",\n      en: \"I miss home. How can I deal with this?\",\n      category: \"emotional\",\n      icon: \"💙\",\n    },\n    {\n      pt: \"Quero praticar português com sotaque autêntico\",\n      en: \"I want to practice Portuguese with authentic accent\",\n      category: \"language\",\n      icon: \"🗣️\",\n    },\n    {\n      pt: \"Ativa a voz cultural portuguesa para conversarmos\",\n      en: \"Activate Portuguese cultural voice to chat\",\n      category: \"voice\",\n      icon: \"🎵\",\n    },\n    {\n      pt: \"Ensina-me tradições portuguesas importantes\",\n      en: \"Teach me important Portuguese traditions\",\n      category: \"cultural\",\n      icon: \"🇵🇹\",\n    },\n    {\n      pt: \"Quero encontrar eventos portugueses este fim de semana\",\n      en: \"Find Portuguese events this weekend\",\n      category: \"events\",\n      icon: \"📅\",\n    },\n    {\n      pt: \"Como posso melhorar a minha pronunciação?\",\n      en: \"How can I improve my pronunciation?\",\n      category: \"learning\",\n      icon: \"📚\",\n    },\n    {\n      pt: \"Preciso de apoio emocional com contexto cultural\",\n      en: \"I need emotional support with cultural context\",\n      category: \"therapeutic\",\n      icon: \"🤗\",\n    },\n    {\n      pt: \"Quero encontrar outros portugueses/brasileiros na minha área\",\n      en: \"Find other Portuguese/Brazilians in my area\",\n      category: \"community\",\n      icon: \"👥\",\n    },\n    {\n      pt: \"Negócios portugueses: restaurantes, serviços, profissionais\",\n      en: \"Portuguese businesses: restaurants, services, professionals\",\n      category: \"business\",\n      icon: \"🏢\",\n    },\n  ];\n\n  if (!session) {\n    return (\n      <div className={`flex items-center justify-center p-8 ${className}`}>\n        <div className=\"animate-spin w-8 h-8 border-4 border-primary-500 border-t-transparent rounded-full\" />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={`\n      ${isEmbedded ? \"h-full\" : \"h-screen max-h-screen\"} \n      bg-gradient-to-br from-gray-50 to-primary-50 \n      flex flex-col\n      ${className}\n    `}\n      style={{\n        overflow: \"hidden\",\n        maxHeight: isEmbedded ? \"100%\" : \"100vh\",\n      }}\n    >\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b border-gray-100 p-4 flex-shrink-0\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"w-10 h-10 bg-gradient-to-r from-primary-500 to-secondary-500 rounded-xl flex items-center justify-center\">\n              <span className=\"text-white font-bold\">🇵🇹</span>\n            </div>\n            <div>\n              <h1 className=\"font-bold text-gray-900 flex items-center gap-2\">\n                LusoBot\n                <SparklesIcon className=\"w-4 h-4 text-primary-500\" />\n              </h1>\n              <p className=\"text-xs text-gray-600\">\n                {language === \"pt\"\n                  ? \"Assistente Cultural Português\"\n                  : \"Portuguese-speaking Cultural Assistant\"}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center gap-2\">\n            <button\n              onClick={() => setIsDarkMode(!isDarkMode)}\n              className=\"p-2 text-gray-500 hover:text-gray-700 rounded-lg hover:bg-gray-100 transition-colors\"\n            >\n              {isDarkMode ? (\n                <SunIcon className=\"w-5 h-5\" />\n              ) : (\n                <MoonIcon className=\"w-5 h-5\" />\n              )}\n            </button>\n\n            {onClose && (\n              <button\n                onClick={onClose}\n                className=\"p-2 text-gray-500 hover:text-gray-700 rounded-lg hover:bg-gray-100 transition-colors\"\n              >\n                <XMarkIcon className=\"w-5 h-5\" />\n              </button>\n            )}\n          </div>\n        </div>\n\n        {/* Language Indicator */}\n        <div className=\"mt-3 flex items-center gap-2 text-xs text-gray-600\">\n          <LanguageIcon className=\"w-3 h-3\" />\n          <span>\n            {language === \"pt\"\n              ? \"Conversando em Português\"\n              : \"Chatting in English\"}\n          </span>\n          <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\" />\n        </div>\n      </div>\n\n      {/* Messages Area */}\n      <div\n        ref={scrollContainerRef}\n        onScroll={handleScroll}\n        className=\"flex-1 p-4 space-y-1 min-h-0\"\n        style={{ overflowY: \"auto\", WebkitOverflowScrolling: \"touch\" }}\n        data-lusobot-chat-container\n      >\n        <AnimatePresence>\n          {messages.map((message, index) => (\n            <MessageBubble\n              key={message.id}\n              message={message}\n              language={language}\n              isLatest={index === messages.length - 1}\n            />\n          ))}\n        </AnimatePresence>\n\n        {/* Loading indicator */}\n        {isLoading && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            className=\"flex justify-start mb-4\"\n          >\n            <div className=\"bg-white rounded-2xl px-4 py-3 shadow-sm border border-gray-100\">\n              <div className=\"flex items-center gap-2\">\n                <div className=\"flex gap-1\">\n                  <div className=\"w-2 h-2 bg-primary-400 rounded-full animate-bounce\" />\n                  <div\n                    className=\"w-2 h-2 bg-primary-400 rounded-full animate-bounce\"\n                    style={{ animationDelay: \"0.1s\" }}\n                  />\n                  <div\n                    className=\"w-2 h-2 bg-primary-400 rounded-full animate-bounce\"\n                    style={{ animationDelay: \"0.2s\" }}\n                  />\n                </div>\n                <span className=\"text-xs text-gray-500\">\n                  {language === \"pt\"\n                    ? \"LusoBot está a pensar...\"\n                    : \"LusoBot is thinking...\"}\n                </span>\n              </div>\n            </div>\n          </motion.div>\n        )}\n\n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* Scroll-to-bottom affordance */}\n      {!stickToBottom && (\n        <div className=\"pointer-events-none absolute bottom-24 right-4 z-10\">\n          <button\n            className=\"pointer-events-auto px-3 py-2 rounded-full bg-white shadow border border-gray-200 text-xs text-gray-700 hover:bg-gray-50\"\n            onClick={() => {\n              setStickToBottom(true);\n              messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n            }}\n          >\n            Jump to latest\n          </button>\n        </div>\n      )}\n\n      {/* Suggestions */}\n      {suggestions.length > 0 && (\n        <div className=\"border-t border-gray-200 bg-white p-4 flex-shrink-0\">\n          <h3 className=\"text-sm font-medium text-gray-900 mb-3 flex items-center gap-2\">\n            <SparklesIcon className=\"w-4 h-4 text-primary-500\" />\n            {language === \"pt\"\n              ? \"Sugestões Personalizadas\"\n              : \"Personalized Suggestions\"}\n          </h3>\n          <div className=\"space-y-2 max-h-40 overflow-y-auto\">\n            {suggestions.map((suggestion, index) => (\n              <SuggestionCard\n                key={index}\n                suggestion={suggestion}\n                onSelect={handleSuggestionSelect}\n                language={language}\n              />\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Enhanced Quick Starters for new conversations */}\n      {messages.length <= 1 && (\n        <div className=\"border-t border-gray-200 bg-white p-4 flex-shrink-0\">\n          <h3 className=\"text-sm font-medium text-gray-900 mb-3 flex items-center gap-2\">\n            <SparklesIcon className=\"w-4 h-4 text-primary-500\" />\n            {language === \"pt\"\n              ? \"Como Posso Ajudar-te Hoje?\"\n              : \"How Can I Help You Today?\"}\n          </h3>\n\n          <div className=\"space-y-3\">\n            <div className=\"text-xs text-gray-600 mb-2\">\n              {language === \"pt\"\n                ? \"Escolhe uma área de apoio:\"\n                : \"Choose a support area:\"}\n            </div>\n\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-2\">\n              {quickStarters.slice(0, 6).map((starter, index) => (\n                <button\n                  key={index}\n                  onClick={() =>\n                    setInputValue(\n                      starter[\n                        language as keyof Omit<\n                          typeof starter,\n                          \"category\" | \"icon\"\n                        >\n                      ]\n                    )\n                  }\n                  className=\"text-left p-3 rounded-lg bg-gradient-to-br from-gray-50 to-gray-100 \n                    hover:from-primary-50 hover:to-secondary-50 transition-all duration-200\n                    text-sm text-gray-700 border border-gray-200 hover:border-primary-300\n                    hover:shadow-sm group\"\n                >\n                  <div className=\"flex items-start gap-2\">\n                    <span className=\"text-lg group-hover:scale-110 transition-transform\">\n                      {starter.icon}\n                    </span>\n                    <div className=\"flex-1 min-w-0\">\n                      <p className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">\n                        {starter.category}\n                      </p>\n                      <p className=\"font-medium group-hover:text-primary-700 transition-colors leading-tight\">\n                        {\n                          starter[\n                            language as keyof Omit<\n                              typeof starter,\n                              \"category\" | \"icon\"\n                            >\n                          ]\n                        }\n                      </p>\n                    </div>\n                  </div>\n                </button>\n              ))}\n            </div>\n\n            {quickStarters.length > 6 && (\n              <details className=\"mt-3\">\n                <summary className=\"text-xs text-gray-500 cursor-pointer hover:text-primary-600 transition-colors\">\n                  {language === \"pt\"\n                    ? \"Ver mais opções...\"\n                    : \"Show more options...\"}\n                </summary>\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2 mt-2\">\n                  {quickStarters.slice(6).map((starter, index) => (\n                    <button\n                      key={index + 6}\n                      onClick={() =>\n                        setInputValue(\n                          starter[\n                            language as keyof Omit<\n                              typeof starter,\n                              \"category\" | \"icon\"\n                            >\n                          ]\n                        )\n                      }\n                      className=\"text-left p-2 rounded-lg bg-gray-50 hover:bg-gray-100 transition-colors\n                        text-xs text-gray-600 border border-gray-200 hover:border-primary-300\"\n                    >\n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"text-sm\">{starter.icon}</span>\n                        <span>\n                          {\n                            starter[\n                              language as keyof Omit<\n                                typeof starter,\n                                \"category\" | \"icon\"\n                              >\n                            ]\n                          }\n                        </span>\n                      </div>\n                    </button>\n                  ))}\n                </div>\n              </details>\n            )}\n          </div>\n\n          <div className=\"mt-4 pt-3 border-t border-gray-100\">\n            <div className=\"text-xs text-gray-500 flex items-center gap-2\">\n              <MicrophoneIcon className=\"w-3 h-3\" />\n              {language === \"pt\"\n                ? \"Dica: Clica no microfone para falar diretamente comigo!\"\n                : \"Tip: Click the microphone to speak directly with me!\"}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Input Area */}\n      <div className=\"border-t border-gray-200 bg-white p-4 flex-shrink-0\">\n        <div className=\"flex gap-3 items-end\">\n          <div className=\"flex-1\">\n            <div className=\"relative\">\n              <input\n                ref={inputRef}\n                type=\"text\"\n                value={inputValue}\n                onChange={(e) => setInputValue(e.target.value)}\n                onKeyPress={handleKeyPress}\n                placeholder={\n                  language === \"pt\"\n                    ? \"Escreve a tua mensagem...\"\n                    : \"Type your message...\"\n                }\n                disabled={isLoading}\n                className=\"w-full px-4 py-3 pr-12 border border-gray-300 rounded-2xl \n                  focus:ring-2 focus:ring-primary-500 focus:border-transparent\n                  disabled:bg-gray-100 disabled:cursor-not-allowed\n                  text-sm\"\n                maxLength={500}\n              />\n\n              {/* Voice Input Button */}\n              <button\n                onClick={handleVoiceInput}\n                disabled={isLoading || isListening}\n                className={`absolute right-3 top-1/2 transform -translate-y-1/2 p-1.5 rounded-lg\n                  transition-colors ${\n                    isListening\n                      ? \"bg-red-100 text-red-600\"\n                      : \"text-gray-500 hover:text-gray-700 hover:bg-gray-100\"\n                  }`}\n              >\n                <MicrophoneIcon\n                  className={`w-4 h-4 ${isListening ? \"animate-pulse\" : \"\"}`}\n                />\n              </button>\n            </div>\n\n            {/* Character Count */}\n            <div className=\"text-xs text-gray-500 mt-1 text-right\">\n              {inputValue.length}/500\n            </div>\n          </div>\n\n          <button\n            onClick={handleSendMessage}\n            disabled={!inputValue.trim() || isLoading}\n            className=\"p-3 bg-gradient-to-r from-primary-500 to-secondary-500 text-white \n              rounded-2xl hover:from-primary-600 hover:to-secondary-600 \n              disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\n              flex items-center justify-center min-w-[48px] min-h-[48px]\"\n          >\n            {isLoading ? (\n              <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n            ) : (\n              <PaperAirplaneIcon className=\"w-5 h-5\" />\n            )}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["LusoBotChat","SaudadeMeter","emotionalTone","language","saudade","nostalgia","hope","community","heritage","emotions","key","value","label","color","hasSignificantEmotions","some","emotion","motion","div","initial","opacity","y","animate","className","HeartSolidIcon","span","filter","map","width","transition","duration","ease","Math","round","SuggestionCard","suggestion","onSelect","getIcon","type","CalendarDaysIcon","BuildingStorefrontIcon","UserGroupIcon","LanguageIcon","AcademicCapIcon","SparklesIcon","getPriorityColor","priority","button","x","whileHover","scale","whileTap","onClick","h4","title","p","description","culturalRelevance","ArrowTopRightOnSquareIcon","MessageBubble","message","isLatest","isBot","role","content","timestamp","toLocaleTimeString","hour","minute","isEmbedded","onClose","t","useLanguage","hasActiveSubscription","useSubscription","session","setSession","useState","messages","setMessages","inputValue","setInputValue","isLoading","setIsLoading","suggestions","setSuggestions","isListening","setIsListening","isDarkMode","setIsDarkMode","messagesEndRef","useRef","inputRef","scrollContainerRef","stickToBottom","setStickToBottom","useEffect","userContext","userRegion","communityLevel","languageProficiency","interests","mood","newSession","LusoBotSession","getMessages","current","scrollIntoView","behavior","handleScroll","useCallback","el","threshold","atBottom","scrollHeight","scrollTop","clientHeight","latestMessage","length","handleSendMessage","trim","messageContent","response","sendMessage","toast","success","error","logger","handleKeyPress","e","shiftKey","preventDefault","handleSuggestionSelect","link","window","open","action","voicePersonality","enableVoiceInteraction","voiceMessage","speakMessage","lesson","getPersonalizedLesson","focus","handleVoiceInput","recognition","webkitSpeechRecognition","getCulturalProfile","region","lang","includes","continuous","interimResults","maxAlternatives","onresult","event","interimTranscript","finalTranscript","i","resultIndex","results","transcript","isFinal","setTimeout","languageLevel","assessPronunciation","then","assessment","accuracy","catch","onerror","errorMessages","network","onend","info","start","quickStarters","pt","en","category","icon","style","overflow","maxHeight","h1","SunIcon","MoonIcon","XMarkIcon","ref","onScroll","overflowY","WebkitOverflowScrolling","data-lusobot-chat-container","AnimatePresence","index","id","animationDelay","h3","slice","starter","details","summary","MicrophoneIcon","input","onChange","target","onKeyPress","placeholder","disabled","maxLength","PaperAirplaneIcon"],"mappings":"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"}