{"version":3,"sources":["/workspaces/LusoTown/web-app/__tests__/utils/performance-utils.ts"],"sourcesContent":["export interface PerformanceMetrics {\n  loadTime: number\n  renderTime: number\n  interactionTime: number\n  memoryUsage: number\n  networkRequests: number\n  cacheHitRate: number\n}\n\nexport class PerformanceTester {\n  private startTime: number = 0\n  private metrics: Partial<PerformanceMetrics> = {}\n  \n  startTiming(): void {\n    this.startTime = performance.now()\n    this.metrics = {}\n  }\n  \n  endTiming(): number {\n    const endTime = performance.now()\n    const duration = endTime - this.startTime\n    this.metrics.loadTime = duration\n    return duration\n  }\n  \n  measureRenderTime(component: () => void): number {\n    const start = performance.now()\n    component()\n    const end = performance.now()\n    const renderTime = end - start\n    this.metrics.renderTime = renderTime\n    return renderTime\n  }\n  \n  getMetrics(): PerformanceMetrics {\n    return {\n      loadTime: this.metrics.loadTime || 0,\n      renderTime: this.metrics.renderTime || 0,\n      interactionTime: this.metrics.interactionTime || 0,\n      memoryUsage: this.metrics.memoryUsage || 0,\n      networkRequests: this.metrics.networkRequests || 0,\n      cacheHitRate: this.metrics.cacheHitRate || 0,\n    }\n  }\n}\n\nexport const performanceThresholds = {\n  loadTime: {\n    excellent: 100,\n    good: 300,\n    acceptable: 1000,\n    poor: 3000,\n  },\n  renderTime: {\n    excellent: 16,\n    good: 33,\n    acceptable: 50,\n    poor: 100,\n  },\n  mobile: {\n    touchResponseTime: {\n      excellent: 10,\n      good: 30,\n      acceptable: 50,\n      poor: 100,\n    },\n  },\n}\n"],"names":["PerformanceTester","performanceThresholds","startTiming","startTime","performance","now","metrics","endTiming","endTime","duration","loadTime","measureRenderTime","component","start","end","renderTime","getMetrics","interactionTime","memoryUsage","networkRequests","cacheHitRate","excellent","good","acceptable","poor","mobile","touchResponseTime"],"mappings":";;;;;;;;;;;IASaA,iBAAiB;eAAjBA;;IAqCAC,qBAAqB;eAArBA;;;AArCN,MAAMD;IAIXE,cAAoB;QAClB,IAAI,CAACC,SAAS,GAAGC,YAAYC,GAAG;QAChC,IAAI,CAACC,OAAO,GAAG,CAAC;IAClB;IAEAC,YAAoB;QAClB,MAAMC,UAAUJ,YAAYC,GAAG;QAC/B,MAAMI,WAAWD,UAAU,IAAI,CAACL,SAAS;QACzC,IAAI,CAACG,OAAO,CAACI,QAAQ,GAAGD;QACxB,OAAOA;IACT;IAEAE,kBAAkBC,SAAqB,EAAU;QAC/C,MAAMC,QAAQT,YAAYC,GAAG;QAC7BO;QACA,MAAME,MAAMV,YAAYC,GAAG;QAC3B,MAAMU,aAAaD,MAAMD;QACzB,IAAI,CAACP,OAAO,CAACS,UAAU,GAAGA;QAC1B,OAAOA;IACT;IAEAC,aAAiC;QAC/B,OAAO;YACLN,UAAU,IAAI,CAACJ,OAAO,CAACI,QAAQ,IAAI;YACnCK,YAAY,IAAI,CAACT,OAAO,CAACS,UAAU,IAAI;YACvCE,iBAAiB,IAAI,CAACX,OAAO,CAACW,eAAe,IAAI;YACjDC,aAAa,IAAI,CAACZ,OAAO,CAACY,WAAW,IAAI;YACzCC,iBAAiB,IAAI,CAACb,OAAO,CAACa,eAAe,IAAI;YACjDC,cAAc,IAAI,CAACd,OAAO,CAACc,YAAY,IAAI;QAC7C;IACF;;aAjCQjB,YAAoB;aACpBG,UAAuC,CAAC;;AAiClD;AAEO,MAAML,wBAAwB;IACnCS,UAAU;QACRW,WAAW;QACXC,MAAM;QACNC,YAAY;QACZC,MAAM;IACR;IACAT,YAAY;QACVM,WAAW;QACXC,MAAM;QACNC,YAAY;QACZC,MAAM;IACR;IACAC,QAAQ;QACNC,mBAAmB;YACjBL,WAAW;YACXC,MAAM;YACNC,YAAY;YACZC,MAAM;QACR;IACF;AACF"}