e4d19077f35f1a35ae7de5bfbe387478
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    OptimizedPortugueseCarousel: function() {
        return OptimizedPortugueseCarousel;
    },
    default: function() {
        return _default;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _framermotion = require("framer-motion");
const _outline = require("@heroicons/react/24/outline");
const _LanguageContext = require("../../context/LanguageContext");
const _useCarouselPerformanceOptimization = require("../../hooks/useCarouselPerformanceOptimization");
const _usePortuguesePWAFeatures = require("../../hooks/usePortuguesePWAFeatures");
const _EnhancedMobileGestures = require("../EnhancedMobileGestures");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const OptimizedPortugueseCarousel = /*#__PURE__*/ (0, _react.memo)(({ items, renderItem, title, subtitle, className = "", autoAdvance = false, autoAdvanceInterval = 5000, showControls = true, showDots = true, onItemClick, loading = false, enablePerformanceOptimization = true, enablePortugueseCulturalOptimization = true, enableOfflineMode = true, optimizationLevel = "standard", contentType = "mixed" })=>{
    const { language, t } = (0, _LanguageContext.useLanguage)();
    const [currentIndex, setCurrentIndex] = (0, _react.useState)(0);
    const [isPlaying, setIsPlaying] = (0, _react.useState)(autoAdvance);
    const [visibleItems, setVisibleItems] = (0, _react.useState)(new Set());
    const [performanceStats, setPerformanceStats] = (0, _react.useState)({
        loadTime: 0,
        renderTime: 0,
        interactionLatency: 0,
        memoryUsage: 0,
        frameRate: 60,
        optimizationScore: 100
    });
    const containerRef = (0, _react.useRef)(null);
    const itemsPerView = _react.default.useMemo(()=>{
        if (typeof window === "undefined") return 1;
        return window.innerWidth <= 768 ? 1 : window.innerWidth <= 1024 ? 2 : 3;
    }, []);
    const maxIndex = Math.max(0, items.length - itemsPerView);
    // Enhanced performance optimization hook
    const { metrics, optimizePortugueseImages, analyzePortugueseReadingPatterns, measureInteractionLatency, recordInteractionComplete, getOptimalAutoAdvanceTime, getOptimizationRecommendations } = (0, _useCarouselPerformanceOptimization.useCarouselPerformanceOptimization)({
        enableRealTimeMonitoring: enablePerformanceOptimization,
        enablePortugueseOptimizations: enablePortugueseCulturalOptimization,
        optimizationLevel
    });
    // PWA features hook
    const { offlineCapabilities, queueOfflineAction, backgroundSyncData, isFullyOfflineCapable } = (0, _usePortuguesePWAFeatures.usePortuguesePWAFeatures)();
    // Dynamic auto-advance timing based on Portuguese reading patterns
    const dynamicAutoAdvanceTime = getOptimalAutoAdvanceTime(items[currentIndex]?.title?.[language]?.length || 100);
    // Intersection Observer for lazy loading
    (0, _react.useEffect)(()=>{
        if (!enablePerformanceOptimization) return;
        const observer = new IntersectionObserver((entries)=>{
            entries.forEach((entry)=>{
                const index = parseInt(entry.target.getAttribute("data-index") || "0");
                if (entry.isIntersecting) {
                    setVisibleItems((prev)=>new Set([
                            ...prev,
                            index
                        ]));
                } else {
                    setVisibleItems((prev)=>{
                        const newSet = new Set(prev);
                        newSet.delete(index);
                        return newSet;
                    });
                }
            });
        }, {
            root: containerRef.current,
            rootMargin: "50px",
            threshold: 0.1
        });
        const itemElements = containerRef.current?.querySelectorAll(".carousel-item");
        itemElements?.forEach((el)=>observer.observe(el));
        return ()=>observer.disconnect();
    }, [
        items.length,
        enablePerformanceOptimization
    ]);
    // Performance monitoring
    (0, _react.useEffect)(()=>{
        if (!enablePerformanceOptimization) return;
        const startTime = performance.now();
        const measurePerformance = ()=>{
            const endTime = performance.now();
            const loadTime = endTime - startTime;
            setPerformanceStats((prev)=>({
                    ...prev,
                    loadTime,
                    renderTime: metrics.renderTime,
                    interactionLatency: metrics.interactionLatency,
                    memoryUsage: metrics.memoryUsage,
                    frameRate: metrics.frameRate,
                    optimizationScore: Math.max(0, 100 - metrics.memoryUsage / 2 - loadTime / 10)
                }));
        };
        requestAnimationFrame(measurePerformance);
    }, [
        metrics.renderTime,
        metrics.interactionLatency,
        metrics.memoryUsage,
        metrics.frameRate,
        enablePerformanceOptimization
    ]);
    // Enhanced navigation with performance tracking
    const goToSlide = (0, _react.useCallback)((index)=>{
        measureInteractionLatency();
        const newIndex = Math.max(0, Math.min(index, maxIndex));
        setCurrentIndex(newIndex);
        // Analyze Portuguese reading patterns
        if (enablePortugueseCulturalOptimization) {
            const dwellTime = Date.now() - window.lastSlideTime || 0;
            analyzePortugueseReadingPatterns({
                scrollVelocity: Math.abs(newIndex - currentIndex),
                dwellTime,
                engagementScore: visibleItems.size > 0 ? 85 : 50
            });
        }
        window.lastSlideTime = Date.now();
        recordInteractionComplete();
    }, [
        maxIndex,
        currentIndex,
        measureInteractionLatency,
        recordInteractionComplete,
        analyzePortugueseReadingPatterns,
        enablePortugueseCulturalOptimization,
        visibleItems.size
    ]);
    const goToNext = (0, _react.useCallback)(()=>goToSlide(currentIndex >= maxIndex ? 0 : currentIndex + 1), [
        goToSlide,
        currentIndex,
        maxIndex
    ]);
    const goToPrevious = (0, _react.useCallback)(()=>goToSlide(currentIndex <= 0 ? maxIndex : currentIndex - 1), [
        goToSlide,
        currentIndex,
        maxIndex
    ]);
    // Enhanced item click with offline support
    const handleItemClick = (0, _react.useCallback)((item, index)=>{
        measureInteractionLatency();
        if (offlineCapabilities.isOffline) {
            // Queue action for when back online
            queueOfflineAction({
                type: "favorite-event",
                data: {
                    itemId: item.id,
                    index
                }
            });
        }
        onItemClick?.(item, index);
        recordInteractionComplete();
    }, [
        measureInteractionLatency,
        recordInteractionComplete,
        offlineCapabilities.isOffline,
        queueOfflineAction,
        onItemClick
    ]);
    // Auto-advance with Portuguese timing optimization
    (0, _react.useEffect)(()=>{
        if (!isPlaying || items.length <= itemsPerView) return;
        const interval = setInterval(()=>{
            goToNext();
        }, dynamicAutoAdvanceTime);
        return ()=>clearInterval(interval);
    }, [
        isPlaying,
        items.length,
        itemsPerView,
        goToNext,
        dynamicAutoAdvanceTime
    ]);
    // PWA optimization recommendations
    const optimizationRecommendations = getOptimizationRecommendations();
    if (loading) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: `optimized-carousel-loading ${className}`,
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "animate-pulse space-y-4",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "h-8 bg-gray-200 rounded w-1/2 mx-auto"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "grid gap-4",
                        style: {
                            gridTemplateColumns: `repeat(${itemsPerView}, 1fr)`
                        },
                        children: Array.from({
                            length: itemsPerView
                        }).map((_, i)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "h-64 bg-gray-200 rounded-xl"
                            }, i))
                    })
                ]
            })
        });
    }
    if (items.length === 0) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: `optimized-carousel-empty ${className}`,
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "text-center py-12",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "w-16 h-16 bg-primary-100 rounded-full flex items-center justify-center mb-4 mx-auto",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                            className: "text-2xl",
                            children: "\uD83C\uDFDB️"
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                        className: "text-gray-600",
                        children: t("carousel.empty", "No Portuguese cultural content available")
                    }),
                    offlineCapabilities.isOffline && /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                        className: "text-sm text-yellow-600 mt-2",
                        children: t("carousel.offline", "You are offline. Some content may be unavailable.")
                    })
                ]
            })
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("section", {
        className: `optimized-portuguese-carousel ${className} ${offlineCapabilities.isOffline ? "offline-mode" : ""}`,
        role: "region",
        "aria-label": title ? title[language] : t("carousel.defaultLabel", "Portuguese cultural carousel"),
        children: [
            enablePerformanceOptimization && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "mb-4 flex items-center justify-between text-xs text-gray-500",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center gap-4",
                        children: [
                            offlineCapabilities.isOffline ? /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center gap-1 text-yellow-600",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.WifiIcon, {
                                        className: "w-4 h-4"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                        children: t("carousel.offline", "Offline Mode")
                                    })
                                ]
                            }) : metrics.networkStatus === "slow" ? /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center gap-1 text-orange-600",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.CloudIcon, {
                                        className: "w-4 h-4"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                        children: t("carousel.slowConnection", "Slow Connection")
                                    })
                                ]
                            }) : /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center gap-1 text-green-600",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.BoltIcon, {
                                        className: "w-4 h-4"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                        children: t("carousel.optimized", "Optimized")
                                    })
                                ]
                            }),
                            typeof window !== "undefined" && window.innerWidth <= 768 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center gap-1 text-blue-600",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.DevicePhoneMobileIcon, {
                                        className: "w-4 h-4"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                        children: "Mobile"
                                    })
                                ]
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "text-right",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                            children: [
                                "Score: ",
                                Math.round(performanceStats.optimizationScore),
                                "%"
                            ]
                        })
                    })
                ]
            }),
            (title || subtitle) && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "mb-8 text-center",
                children: [
                    title && /*#__PURE__*/ (0, _jsxruntime.jsx)("h2", {
                        className: "text-3xl font-bold text-gray-900 mb-2",
                        children: title[language]
                    }),
                    subtitle && /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                        className: "text-lg text-gray-600",
                        children: subtitle[language]
                    }),
                    process.env.NODE_ENV === "development" && enablePerformanceOptimization && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "text-xs text-gray-400 mt-2 space-x-4",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                children: [
                                    "Load: ",
                                    Math.round(performanceStats.loadTime),
                                    "ms"
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                children: [
                                    "Memory: ",
                                    Math.round(performanceStats.memoryUsage),
                                    "MB"
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                children: [
                                    "FPS: ",
                                    metrics.frameRate
                                ]
                            }),
                            optimizationRecommendations.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                className: "text-orange-500",
                                children: [
                                    optimizationRecommendations.length,
                                    " optimizations available"
                                ]
                            })
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_EnhancedMobileGestures.EnhancedMobileGestures, {
                onSwipe: (gesture)=>{
                    if (gesture.direction === "left") goToNext();
                    else if (gesture.direction === "right") goToPrevious();
                },
                enablePortugueseGestures: enablePortugueseCulturalOptimization,
                enableHapticFeedback: false,
                enableVoiceAnnouncements: language === "pt",
                className: "relative",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        ref: containerRef,
                        className: "relative overflow-hidden rounded-xl bg-gradient-to-br from-primary-50 to-gold-50 p-4 md:p-6",
                        children: [
                            items.length > itemsPerView && showControls && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                        onClick: goToPrevious,
                                        className: "absolute left-2 md:left-4 top-1/2 -translate-y-1/2 z-20  bg-white/90 hover:bg-white shadow-lg hover:shadow-xl  w-11 h-11 md:w-12 md:h-12 rounded-full flex items-center justify-center border border-primary-200 hover:border-primary-300 transition-all duration-300 group touch-manipulation focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2",
                                        "aria-label": t("carousel.previous", "Previous Portuguese cultural items"),
                                        style: {
                                            minWidth: "44px",
                                            minHeight: "44px"
                                        },
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.ChevronLeftIcon, {
                                            className: "w-4 h-4 md:w-5 md:h-5 text-primary-600 group-hover:text-primary-800 transition-colors"
                                        })
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                        onClick: goToNext,
                                        className: "absolute right-2 md:right-4 top-1/2 -translate-y-1/2 z-20 bg-white/90 hover:bg-white shadow-lg hover:shadow-xl w-11 h-11 md:w-12 md:h-12 rounded-full flex items-center justify-center border border-primary-200 hover:border-primary-300 transition-all duration-300 group touch-manipulation focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2",
                                        "aria-label": t("carousel.next", "Next Portuguese cultural items"),
                                        style: {
                                            minWidth: "44px",
                                            minHeight: "44px"
                                        },
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.ChevronRightIcon, {
                                            className: "w-4 h-4 md:w-5 md:h-5 text-primary-600 group-hover:text-primary-800 transition-colors"
                                        })
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_framermotion.AnimatePresence, {
                                mode: "wait",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_framermotion.motion.div, {
                                    initial: {
                                        opacity: 0,
                                        x: 30
                                    },
                                    animate: {
                                        opacity: 1,
                                        x: 0
                                    },
                                    exit: {
                                        opacity: 0,
                                        x: -30
                                    },
                                    transition: {
                                        duration: 0.25,
                                        ease: "easeInOut"
                                    },
                                    className: "grid gap-4 md:gap-6",
                                    style: {
                                        gridTemplateColumns: `repeat(${itemsPerView}, 1fr)`,
                                        minHeight: "200px"
                                    },
                                    children: items.slice(currentIndex, currentIndex + itemsPerView).map((item, index)=>{
                                        const globalIndex = currentIndex + index;
                                        const isVisible = visibleItems.has(globalIndex);
                                        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_framermotion.motion.div, {
                                            "data-index": globalIndex,
                                            className: "carousel-item cursor-pointer touch-manipulation",
                                            initial: {
                                                opacity: 0,
                                                y: 10
                                            },
                                            animate: {
                                                opacity: 1,
                                                y: 0
                                            },
                                            transition: {
                                                duration: 0.2,
                                                delay: index * 0.05
                                            },
                                            whileHover: {
                                                y: -4,
                                                scale: 1.02
                                            },
                                            whileTap: {
                                                scale: 0.98
                                            },
                                            onClick: ()=>handleItemClick(item, globalIndex),
                                            role: "button",
                                            tabIndex: 0,
                                            "aria-label": `${item.title?.[language] || "Portuguese cultural item"} - ${globalIndex + 1} of ${items.length}`,
                                            style: {
                                                minHeight: "160px"
                                            },
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.Suspense, {
                                                fallback: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                    className: "w-full h-full bg-gray-200 rounded-lg animate-pulse flex items-center justify-center",
                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                        className: "text-gray-400 text-sm",
                                                        children: t("carousel.loading", "Loading Portuguese content...")
                                                    })
                                                }),
                                                children: renderItem(item, globalIndex, isVisible)
                                            })
                                        }, `${item.id || globalIndex}-${currentIndex}`);
                                    })
                                }, currentIndex)
                            }),
                            typeof window !== "undefined" && window.innerWidth <= 768 && currentIndex === 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "absolute bottom-2 left-1/2 transform -translate-x-1/2 flex gap-1",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "w-1 h-1 bg-gray-400 rounded-full opacity-50"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "w-1 h-1 bg-gray-400 rounded-full opacity-75"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "w-1 h-1 bg-primary-500 rounded-full"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "w-1 h-1 bg-gray-400 rounded-full opacity-75"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "w-1 h-1 bg-gray-400 rounded-full opacity-50"
                                    })
                                ]
                            })
                        ]
                    }),
                    items.length > itemsPerView && showDots && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "flex justify-center mt-6 space-x-3",
                        children: Array.from({
                            length: maxIndex + 1
                        }).map((_, index)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                onClick: ()=>goToSlide(index),
                                className: `w-4 h-4 rounded-full transition-all duration-300 touch-manipulation
                           focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2
                           ${index === currentIndex ? "bg-primary-600 scale-125 shadow-lg" : "bg-primary-300 hover:bg-primary-400 hover:scale-110"}`,
                                "aria-label": t("carousel.goToSlide", `Go to Portuguese cultural slide ${index + 1} of ${maxIndex + 1}`),
                                style: {
                                    minWidth: "44px",
                                    minHeight: "44px"
                                }
                            }, index))
                    })
                ]
            }),
            autoAdvance && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "flex justify-center mt-4",
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
                    onClick: ()=>setIsPlaying((prev)=>!prev),
                    className: "flex items-center gap-2 bg-white border border-primary-200 rounded-full px-4 py-2 shadow-sm hover:shadow-md transition-all duration-200 touch-manipulation",
                    style: {
                        minHeight: "44px"
                    },
                    "aria-label": isPlaying ? t("carousel.pause", "Pause Portuguese cultural carousel") : t("carousel.play", "Play Portuguese cultural carousel"),
                    children: [
                        isPlaying ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.PauseIcon, {
                            className: "w-4 h-4 text-primary-600"
                        }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.PlayIcon, {
                            className: "w-4 h-4 text-primary-600"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                            className: "text-sm text-primary-700",
                            children: isPlaying ? t("carousel.pause", "Pause") : t("carousel.play", "Play")
                        })
                    ]
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "sr-only",
                "aria-live": "polite",
                "aria-atomic": "true",
                role: "status",
                children: [
                    t("carousel.status", `Showing Portuguese cultural items ${currentIndex + 1} to ${Math.min(currentIndex + itemsPerView, items.length)} of ${items.length}. Performance score: ${Math.round(performanceStats.optimizationScore)}%.`),
                    offlineCapabilities.isOffline && t("carousel.offlineMode", " Offline mode active.")
                ]
            })
        ]
    });
});
OptimizedPortugueseCarousel.displayName = "OptimizedPortugueseCarousel";
const _default = OptimizedPortugueseCarousel;

//# sourceMappingURL=data:application/json;base64,