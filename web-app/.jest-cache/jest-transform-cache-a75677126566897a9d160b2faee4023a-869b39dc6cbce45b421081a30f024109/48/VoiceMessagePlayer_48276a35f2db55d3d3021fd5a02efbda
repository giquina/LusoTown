c95b0bbb33a41b3cb950cd40f3b060c5
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return VoiceMessagePlayer;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _framermotion = require("framer-motion");
const _lucidereact = require("lucide-react");
const _LanguageContext = require("../context/LanguageContext");
const _voicemessaging = require("../config/voice-messaging");
const _brand = require("../config/brand");
function VoiceMessagePlayer({ message, isOwn = false, showTranscription = true, showTranslation = true, onTranslate, onReport, onDownload, className = "" }) {
    const { language } = (0, _LanguageContext.useLanguage)();
    const [isPlaying, setIsPlaying] = (0, _react.useState)(false);
    const [currentTime, setCurrentTime] = (0, _react.useState)(0);
    const [volume, setVolume] = (0, _react.useState)(1);
    const [isMuted, setIsMuted] = (0, _react.useState)(false);
    const [playbackSpeed, setPlaybackSpeed] = (0, _react.useState)(1);
    const [showMenu, setShowMenu] = (0, _react.useState)(false);
    const [showSettings, setShowSettings] = (0, _react.useState)(false);
    const [error, setError] = (0, _react.useState)(null);
    const audioRef = (0, _react.useRef)(null);
    const progressRef = (0, _react.useRef)(null);
    const waveformRef = (0, _react.useRef)(null);
    const translations = {
        en: {
            play: "Play voice message",
            pause: "Pause voice message",
            mute: "Mute",
            unmute: "Unmute",
            transcription: "Transcription",
            translation: "Translation",
            translate: "Translate to English",
            download: "Download voice message",
            report: "Report message",
            copy: "Copy transcription",
            playbackSpeed: "Playback speed",
            forward: "Skip forward 10s",
            backward: "Skip backward 10s",
            repeat: "Repeat message",
            settings: "Voice settings",
            errorLoading: "Error loading voice message",
            noTranscription: "Transcription not available",
            confidence: "Transcription confidence"
        },
        pt: {
            play: "Reproduzir mensagem de voz",
            pause: "Pausar mensagem de voz",
            mute: "Silenciar",
            unmute: "Ativar som",
            transcription: "Transcri\xe7\xe3o",
            translation: "Tradu\xe7\xe3o",
            translate: "Traduzir para portugu\xeas",
            download: "Descarregar mensagem",
            report: "Reportar mensagem",
            copy: "Copiar transcri\xe7\xe3o",
            playbackSpeed: "Velocidade de reprodu\xe7\xe3o",
            forward: "Avan\xe7ar 10s",
            backward: "Retroceder 10s",
            repeat: "Repetir mensagem",
            settings: "Configura\xe7\xf5es de voz",
            errorLoading: "Erro ao carregar mensagem de voz",
            noTranscription: "Transcri\xe7\xe3o n\xe3o dispon\xedvel",
            confidence: "Confian\xe7a da transcri\xe7\xe3o"
        }
    };
    const t = translations[language];
    // Initialize audio element
    (0, _react.useEffect)(()=>{
        if (message.audioUrl) {
            const audio = new Audio(message.audioUrl);
            audioRef.current = audio;
            audio.addEventListener("loadedmetadata", ()=>{
                setError(null);
            });
            audio.addEventListener("timeupdate", ()=>{
                setCurrentTime(audio.currentTime);
            });
            audio.addEventListener("ended", ()=>{
                setIsPlaying(false);
                setCurrentTime(0);
            });
            audio.addEventListener("error", (e)=>{
                setError(t.errorLoading);
                console.error("Audio loading error:", e);
            });
            return ()=>{
                audio.pause();
                audio.remove();
            };
        }
    }, [
        message.audioUrl,
        t.errorLoading
    ]);
    const drawWaveform = (0, _react.useCallback)(()=>{
        const canvas = waveformRef.current;
        if (!canvas) return;
        const ctx = canvas.getContext("2d");
        if (!ctx) return;
        const width = canvas.width;
        const height = canvas.height;
        const barWidth = 3;
        const barGap = 1;
        const numBars = Math.floor(width / (barWidth + barGap));
        ctx.clearRect(0, 0, width, height);
        // Generate pseudo-random waveform based on message ID
        const seed = message.id.split("").reduce((acc, char)=>acc + char.charCodeAt(0), 0);
        const random = (seed)=>{
            const x = Math.sin(seed) * 10000;
            return x - Math.floor(x);
        };
        // Draw waveform bars
        for(let i = 0; i < numBars; i++){
            const barHeight = (random(seed + i) * 0.7 + 0.3) * height * 0.8;
            const x = i * (barWidth + barGap);
            const y = (height - barHeight) / 2;
            // Progress color
            const progress = currentTime / message.duration;
            const isPlayed = i / numBars <= progress;
            ctx.fillStyle = isPlayed ? _brand.PORTUGUESE_COLORS.red[500] : `${_voicemessaging.VOICE_MESSAGE_UI.waveformColor}40`; // 40% opacity
            ctx.fillRect(x, y, barWidth, barHeight);
        }
    }, [
        currentTime,
        message.duration,
        message.id
    ]);
    // Draw waveform visualization
    (0, _react.useEffect)(()=>{
        if (waveformRef.current && message.audioUrl) {
            drawWaveform();
        }
    }, [
        message.audioUrl,
        drawWaveform
    ]);
    const togglePlay = ()=>{
        if (!audioRef.current) return;
        if (isPlaying) {
            audioRef.current.pause();
        } else {
            audioRef.current.play();
        }
        setIsPlaying(!isPlaying);
    };
    const toggleMute = ()=>{
        if (!audioRef.current) return;
        if (isMuted) {
            audioRef.current.volume = volume;
            setIsMuted(false);
        } else {
            audioRef.current.volume = 0;
            setIsMuted(true);
        }
    };
    const handleVolumeChange = (newVolume)=>{
        if (!audioRef.current) return;
        setVolume(newVolume);
        audioRef.current.volume = newVolume;
        setIsMuted(newVolume === 0);
    };
    const handleSpeedChange = (speed)=>{
        if (!audioRef.current) return;
        setPlaybackSpeed(speed);
        audioRef.current.playbackRate = speed;
    };
    const skipForward = ()=>{
        if (!audioRef.current) return;
        audioRef.current.currentTime = Math.min(audioRef.current.currentTime + 10, message.duration);
    };
    const skipBackward = ()=>{
        if (!audioRef.current) return;
        audioRef.current.currentTime = Math.max(audioRef.current.currentTime - 10, 0);
    };
    const handleProgressClick = (event)=>{
        if (!audioRef.current || !progressRef.current) return;
        const rect = progressRef.current.getBoundingClientRect();
        const clickX = event.clientX - rect.left;
        const percentage = clickX / rect.width;
        const newTime = percentage * message.duration;
        audioRef.current.currentTime = newTime;
        setCurrentTime(newTime);
    };
    const copyTranscription = ()=>{
        if (message.transcription) {
            navigator.clipboard.writeText(message.transcription);
        }
    };
    const formatTime = (seconds)=>{
        const mins = Math.floor(seconds / 60);
        const secs = Math.floor(seconds % 60);
        return `${mins}:${secs.toString().padStart(2, "0")}`;
    };
    const getDialectFlag = (dialect)=>{
        const flags = {
            "pt-PT": "\uD83C\uDDF5\uD83C\uDDF9",
            "pt-BR": "\uD83C\uDDE7\uD83C\uDDF7",
            "pt-CV": "\uD83C\uDDE8\uD83C\uDDFB",
            "pt-AO": "\uD83C\uDDE6\uD83C\uDDF4",
            "pt-MZ": "\uD83C\uDDF2\uD83C\uDDFF"
        };
        return flags[dialect || "pt-PT"] || "\uD83C\uDDF5\uD83C\uDDF9";
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        className: `voice-message-player ${className}`,
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: `
        flex items-start space-x-3 p-4 rounded-lg max-w-md
        ${isOwn ? "bg-primary-600 text-white ml-auto flex-row-reverse space-x-reverse" : "bg-white border border-gray-200"}
  `,
            style: isOwn ? {
                backgroundColor: _brand.PORTUGUESE_COLORS.red[500]
            } : {},
            children: [
                !isOwn && /*#__PURE__*/ (0, _jsxruntime.jsx)("img", {
                    src: message.senderAvatar || "/images/default-avatar.png",
                    alt: message.senderName,
                    className: "w-8 h-8 rounded-full object-cover flex-shrink-0"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex-1 min-w-0",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center justify-between mb-2",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center space-x-2",
                                    children: [
                                        message.dialect && /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                            className: "text-sm",
                                            children: getDialectFlag(message.dialect)
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                            className: `text-sm font-medium ${isOwn ? "text-white" : "text-gray-900"}`,
                                            children: isOwn ? "You" : message.senderName
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center space-x-1",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                            className: `text-xs ${isOwn ? "text-white/70" : "text-gray-500"}`,
                                            children: formatTime(message.duration)
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "relative",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                    onClick: ()=>setShowMenu(!showMenu),
                                                    className: `p-1 rounded-full hover:bg-black/10 ${isOwn ? "text-white" : "text-gray-600"}`,
                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.MoreVertical, {
                                                        className: "w-4 h-4"
                                                    })
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_framermotion.AnimatePresence, {
                                                    children: showMenu && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_framermotion.motion.div, {
                                                        initial: {
                                                            opacity: 0,
                                                            scale: 0.95
                                                        },
                                                        animate: {
                                                            opacity: 1,
                                                            scale: 1
                                                        },
                                                        exit: {
                                                            opacity: 0,
                                                            scale: 0.95
                                                        },
                                                        className: "absolute right-0 mt-1 w-48 bg-white rounded-lg shadow-lg border border-gray-200 py-1 z-10",
                                                        children: [
                                                            onTranslate && /*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
                                                                onClick: ()=>{
                                                                    onTranslate(message.id);
                                                                    setShowMenu(false);
                                                                },
                                                                className: "w-full px-3 py-2 text-left text-sm text-gray-700 hover:bg-gray-50 flex items-center space-x-2",
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Languages, {
                                                                        className: "w-4 h-4"
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                        children: t.translate
                                                                    })
                                                                ]
                                                            }),
                                                            message.transcription && /*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
                                                                onClick: ()=>{
                                                                    copyTranscription();
                                                                    setShowMenu(false);
                                                                },
                                                                className: "w-full px-3 py-2 text-left text-sm text-gray-700 hover:bg-gray-50 flex items-center space-x-2",
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Copy, {
                                                                        className: "w-4 h-4"
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                        children: t.copy
                                                                    })
                                                                ]
                                                            }),
                                                            onDownload && /*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
                                                                onClick: ()=>{
                                                                    onDownload(message.id);
                                                                    setShowMenu(false);
                                                                },
                                                                className: "w-full px-3 py-2 text-left text-sm text-gray-700 hover:bg-gray-50 flex items-center space-x-2",
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Download, {
                                                                        className: "w-4 h-4"
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                        children: t.download
                                                                    })
                                                                ]
                                                            }),
                                                            onReport && !isOwn && /*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
                                                                onClick: ()=>{
                                                                    onReport(message.id);
                                                                    setShowMenu(false);
                                                                },
                                                                className: "w-full px-3 py-2 text-left text-sm text-red-600 hover:bg-red-50 flex items-center space-x-2",
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Flag, {
                                                                        className: "w-4 h-4"
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                        children: t.report
                                                                    })
                                                                ]
                                                            })
                                                        ]
                                                    })
                                                })
                                            ]
                                        })
                                    ]
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "space-y-3",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center space-x-3",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                            onClick: togglePlay,
                                            disabled: !!error,
                                            className: `
                  w-8 h-8 rounded-full flex items-center justify-center transition-colors
                  ${isOwn ? "bg-white/20 hover:bg-white/30 text-white" : "bg-primary-100 hover:bg-primary-200 text-primary-700"}
                  ${error ? "opacity-50 cursor-not-allowed" : ""}
                `,
                                            children: isPlaying ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Pause, {
                                                className: "w-4 h-4"
                                            }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Play, {
                                                className: "w-4 h-4 ml-0.5"
                                            })
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "flex-1 h-12 relative",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("canvas", {
                                                    ref: waveformRef,
                                                    width: 200,
                                                    height: _voicemessaging.VOICE_MESSAGE_UI.waveformHeight,
                                                    className: "w-full h-full cursor-pointer rounded",
                                                    onClick: handleProgressClick
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                    ref: progressRef,
                                                    className: "absolute inset-0 cursor-pointer",
                                                    onClick: handleProgressClick
                                                })
                                            ]
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: `text-xs font-mono ${isOwn ? "text-white/70" : "text-gray-500"}`,
                                            children: [
                                                formatTime(currentTime),
                                                " / ",
                                                formatTime(message.duration)
                                            ]
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center justify-between",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "flex items-center space-x-2",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                    onClick: skipBackward,
                                                    className: `p-1 rounded hover:bg-black/10 ${isOwn ? "text-white/70" : "text-gray-600"}`,
                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.SkipBack, {
                                                        className: "w-4 h-4"
                                                    })
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                    onClick: skipForward,
                                                    className: `p-1 rounded hover:bg-black/10 ${isOwn ? "text-white/70" : "text-gray-600"}`,
                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.SkipForward, {
                                                        className: "w-4 h-4"
                                                    })
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("select", {
                                                    value: playbackSpeed,
                                                    onChange: (e)=>handleSpeedChange(Number(e.target.value)),
                                                    className: `
                    text-xs px-1 py-0.5 rounded border-0 bg-transparent cursor-pointer
                    ${isOwn ? "text-white/70" : "text-gray-600"}
                  `,
                                                    children: _voicemessaging.VOICE_MESSAGE_UI.playbackSpeed.map((speed)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("option", {
                                                            value: speed,
                                                            className: "text-gray-900",
                                                            children: [
                                                                speed,
                                                                "x"
                                                            ]
                                                        }, speed))
                                                })
                                            ]
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "flex items-center space-x-2",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                    onClick: toggleMute,
                                                    className: `p-1 rounded hover:bg-black/10 ${isOwn ? "text-white/70" : "text-gray-600"}`,
                                                    children: isMuted ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.VolumeX, {
                                                        className: "w-4 h-4"
                                                    }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Volume2, {
                                                        className: "w-4 h-4"
                                                    })
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                    type: "range",
                                                    min: "0",
                                                    max: "1",
                                                    step: "0.1",
                                                    value: isMuted ? 0 : volume,
                                                    onChange: (e)=>handleVolumeChange(Number(e.target.value)),
                                                    className: "w-16 h-1 bg-gray-300 rounded-lg appearance-none cursor-pointer slider"
                                                })
                                            ]
                                        })
                                    ]
                                })
                            ]
                        }),
                        error && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: `mt-2 p-2 rounded text-xs ${isOwn ? "bg-white/20 text-white" : "bg-red-50 text-red-600"}`,
                            children: error
                        }),
                        showTranscription && message.transcription && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_framermotion.motion.div, {
                            initial: {
                                opacity: 0,
                                height: 0
                            },
                            animate: {
                                opacity: 1,
                                height: "auto"
                            },
                            className: `mt-3 p-2 rounded text-xs ${isOwn ? "bg-white/20" : "bg-gray-50"}`,
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center justify-between mb-1",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                            className: `font-medium ${isOwn ? "text-white/80" : "text-gray-600"}`,
                                            children: t.transcription
                                        }),
                                        message.confidence && /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                            className: `text-xs ${isOwn ? "text-white/60" : "text-gray-500"}`,
                                            children: [
                                                Math.round(message.confidence * 100),
                                                "%"
                                            ]
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                    className: `italic ${isOwn ? "text-white/90" : "text-gray-800"}`,
                                    children: [
                                        '"',
                                        message.transcription,
                                        '"'
                                    ]
                                })
                            ]
                        }),
                        showTranslation && message.translation && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_framermotion.motion.div, {
                            initial: {
                                opacity: 0,
                                height: 0
                            },
                            animate: {
                                opacity: 1,
                                height: "auto"
                            },
                            className: `mt-2 p-2 rounded text-xs ${isOwn ? "bg-white/20" : "bg-blue-50"}`,
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center space-x-1 mb-1",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Languages, {
                                            className: "w-3 h-3"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                            className: `font-medium ${isOwn ? "text-white/80" : "text-blue-600"}`,
                                            children: t.translation
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                    className: `italic ${isOwn ? "text-white/90" : "text-blue-800"}`,
                                    children: [
                                        '"',
                                        message.translation,
                                        '"'
                                    ]
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: `mt-2 text-xs ${isOwn ? "text-white/60" : "text-gray-500"}`,
                            children: new Date(message.timestamp).toLocaleTimeString([], {
                                hour: "2-digit",
                                minute: "2-digit"
                            })
                        })
                    ]
                })
            ]
        })
    });
}

//# sourceMappingURL=data:application/json;base64,