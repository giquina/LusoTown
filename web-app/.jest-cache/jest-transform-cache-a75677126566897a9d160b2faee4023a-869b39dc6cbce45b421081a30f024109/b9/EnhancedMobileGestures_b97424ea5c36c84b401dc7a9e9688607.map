{"version":3,"sources":["/workspaces/LusoTown/web-app/src/components/EnhancedMobileGestures.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useRef, useState, useEffect, useCallback, ReactNode } from 'react';\nimport { motion, PanInfo, useMotionValue, useTransform, animate } from 'framer-motion';\n\ninterface TouchPoint {\n  x: number;\n  y: number;\n  time: number;\n  id?: number;\n}\n\ninterface SwipeGesture {\n  direction: 'left' | 'right' | 'up' | 'down';\n  distance: number;\n  velocity: number;\n  duration: number;\n}\n\ninterface PinchGesture {\n  scale: number;\n  center: { x: number; y: number };\n  velocity: number;\n}\n\ninterface EnhancedMobileGesturesProps {\n  children: ReactNode;\n  onSwipe?: (gesture: SwipeGesture) => void;\n  onPinch?: (gesture: PinchGesture) => void;\n  onLongPress?: (point: TouchPoint) => void;\n  onDoubleTap?: (point: TouchPoint) => void;\n  onTap?: (point: TouchPoint) => void;\n  \n  // Configuration\n  swipeThreshold?: number;\n  longPressDelay?: number;\n  doubleTapDelay?: number;\n  pinchThreshold?: number;\n  \n  // Lusophone-specific settings\n  enablePortugueseGestures?: boolean;\n  enableHapticFeedback?: boolean;\n  enableVoiceAnnouncements?: boolean;\n  \n  // Visual feedback\n  showSwipeIndicators?: boolean;\n  showTouchRipples?: boolean;\n  \n  className?: string;\n  disabled?: boolean;\n}\n\nexport function EnhancedMobileGestures({\n  children,\n  onSwipe,\n  onPinch,\n  onLongPress,\n  onDoubleTap,\n  onTap,\n  swipeThreshold = 50,\n  longPressDelay = 500,\n  doubleTapDelay = 300,\n  pinchThreshold = 0.1,\n  enablePortugueseGestures = true,\n  enableHapticFeedback = true,\n  enableVoiceAnnouncements = false,\n  showSwipeIndicators = true,\n  showTouchRipples = true,\n  className = '',\n  disabled = false\n}: EnhancedMobileGesturesProps) {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [touches, setTouches] = useState<Map<number, TouchPoint>>(new Map());\n  const [isLongPressing, setIsLongPressing] = useState(false);\n  const [lastTap, setLastTap] = useState<TouchPoint | null>(null);\n  const [swipeDirection, setSwipeDirection] = useState<string | null>(null);\n  const [touchRipples, setTouchRipples] = useState<Array<{ id: number; x: number; y: number }>>([]);\n  \n  const longPressTimer = useRef<NodeJS.Timeout>();\n  const swipeStartRef = useRef<TouchPoint | null>(null);\n  const initialDistance = useRef<number>(0);\n  const initialScale = useRef<number>(1);\n\n  // Motion values for visual feedback\n  const x = useMotionValue(0);\n  const y = useMotionValue(0);\n  const opacity = useTransform(x, [-200, 0, 200], [0.5, 1, 0.5]);\n  const scale = useMotionValue(1);\n\n  // Create touch ripple effect\n  const createRipple = useCallback((x: number, y: number) => {\n    if (!showTouchRipples) return;\n    \n    const rippleId = Date.now();\n    setTouchRipples(prev => [...prev, { id: rippleId, x, y }]);\n    \n    setTimeout(() => {\n      setTouchRipples(prev => prev.filter(ripple => ripple.id !== rippleId));\n    }, 600);\n  }, [showTouchRipples]);\n\n  // Haptic feedback helper\n  const triggerHapticFeedback = useCallback((intensity: 'light' | 'medium' | 'heavy' = 'medium') => {\n    if (!enableHapticFeedback) return;\n    \n    if ('vibrate' in navigator) {\n      const patterns = {\n        light: [10],\n        medium: [20],\n        heavy: [30, 10, 30]\n      };\n      navigator.vibrate(patterns[intensity]);\n    }\n  }, [enableHapticFeedback]);\n\n  // Voice announcement helper\n  const announceGesture = useCallback((gesture: string) => {\n    if (!enableVoiceAnnouncements) return;\n    \n    const messages = {\n      'swipe-left': 'Deslizar para a esquerda',\n      'swipe-right': 'Deslizar para a direita', \n      'swipe-up': 'Deslizar para cima',\n      'swipe-down': 'Deslizar para baixo',\n      'long-press': 'PressÃ£o longa',\n      'double-tap': 'Toque duplo',\n      'pinch-in': 'Beliscar para dentro',\n      'pinch-out': 'Beliscar para fora'\n    };\n    \n    const message = messages[gesture as keyof typeof messages];\n    if (message && 'speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(message);\n      utterance.lang = 'pt-PT';\n      speechSynthesis.speak(utterance);\n    }\n  }, [enableVoiceAnnouncements]);\n\n  // Get distance between two points\n  const getDistance = (point1: TouchPoint, point2: TouchPoint): number => {\n    return Math.sqrt(\n      Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2)\n    );\n  };\n\n  // Get gesture direction\n  const getSwipeDirection = (start: TouchPoint, end: TouchPoint): 'left' | 'right' | 'up' | 'down' => {\n    const deltaX = end.x - start.x;\n    const deltaY = end.y - start.y;\n    \n    if (Math.abs(deltaX) > Math.abs(deltaY)) {\n      return deltaX > 0 ? 'right' : 'left';\n    } else {\n      return deltaY > 0 ? 'down' : 'up';\n    }\n  };\n\n  // Handle touch start\n  const handleTouchStart = useCallback((e: React.TouchEvent) => {\n    if (disabled) return;\n    \n    const newTouches = new Map(touches);\n    \n    Array.from(e.touches).forEach((touch) => {\n      const touchPoint: TouchPoint = {\n        x: touch.clientX,\n        y: touch.clientY,\n        time: Date.now(),\n        id: touch.identifier\n      };\n      \n      newTouches.set(touch.identifier, touchPoint);\n      createRipple(touch.clientX, touch.clientY);\n      \n      // Set swipe start for single touch\n      if (e.touches.length === 1) {\n        swipeStartRef.current = touchPoint;\n        \n        // Start long press timer\n        longPressTimer.current = setTimeout(() => {\n          setIsLongPressing(true);\n          onLongPress?.(touchPoint);\n          triggerHapticFeedback('heavy');\n          announceGesture('long-press');\n        }, longPressDelay);\n      }\n      \n      // Handle pinch start for two touches\n      if (e.touches.length === 2 && newTouches.size >= 2) {\n        const touchArray = Array.from(newTouches.values());\n        const distance = getDistance(touchArray[0], touchArray[1]);\n        initialDistance.current = distance;\n        initialScale.current = 1;\n      }\n    });\n    \n    setTouches(newTouches);\n  }, [disabled, touches, createRipple, onLongPress, triggerHapticFeedback, announceGesture, longPressDelay]);\n\n  // Handle touch move\n  const handleTouchMove = useCallback((e: React.TouchEvent) => {\n    if (disabled) return;\n    \n    // Clear long press if finger moves too much\n    if (longPressTimer.current && swipeStartRef.current) {\n      const currentTouch = e.touches[0];\n      const distance = getDistance(swipeStartRef.current, {\n        x: currentTouch.clientX,\n        y: currentTouch.clientY,\n        time: Date.now()\n      });\n      \n      if (distance > 10) {\n        clearTimeout(longPressTimer.current);\n        setIsLongPressing(false);\n      }\n    }\n    \n    // Handle pinch gesture\n    if (e.touches.length === 2 && touches.size >= 2) {\n      const touch1 = e.touches[0];\n      const touch2 = e.touches[1];\n      \n      const currentDistance = getDistance(\n        { x: touch1.clientX, y: touch1.clientY, time: Date.now() },\n        { x: touch2.clientX, y: touch2.clientY, time: Date.now() }\n      );\n      \n      if (initialDistance.current > 0) {\n        const scaleChange = currentDistance / initialDistance.current;\n        const scaleDelta = Math.abs(scaleChange - initialScale.current);\n        \n        if (scaleDelta > pinchThreshold) {\n          const center = {\n            x: (touch1.clientX + touch2.clientX) / 2,\n            y: (touch1.clientY + touch2.clientY) / 2\n          };\n          \n          onPinch?.({\n            scale: scaleChange,\n            center,\n            velocity: scaleDelta\n          });\n          \n          // Visual feedback\n          scale.set(scaleChange);\n          \n          // Haptic feedback for significant pinch\n          if (scaleDelta > 0.3) {\n            triggerHapticFeedback('light');\n            announceGesture(scaleChange > 1 ? 'pinch-out' : 'pinch-in');\n          }\n          \n          initialScale.current = scaleChange;\n        }\n      }\n    }\n    \n    // Handle swipe visual feedback\n    if (e.touches.length === 1 && swipeStartRef.current) {\n      const currentTouch = e.touches[0];\n      const deltaX = currentTouch.clientX - swipeStartRef.current.x;\n      const deltaY = currentTouch.clientY - swipeStartRef.current.y;\n      \n      x.set(deltaX * 0.3); // Damped movement\n      y.set(deltaY * 0.3);\n      \n      // Show swipe direction indicator\n      if (Math.abs(deltaX) > swipeThreshold || Math.abs(deltaY) > swipeThreshold) {\n        const direction = getSwipeDirection(swipeStartRef.current, {\n          x: currentTouch.clientX,\n          y: currentTouch.clientY,\n          time: Date.now()\n        });\n        setSwipeDirection(direction);\n      }\n    }\n  }, [disabled, touches, onPinch, swipeThreshold, pinchThreshold, scale, x, y, triggerHapticFeedback, announceGesture]);\n\n  // Handle touch end\n  const handleTouchEnd = useCallback((e: React.TouchEvent) => {\n    if (disabled) return;\n    \n    // Clear long press timer\n    if (longPressTimer.current) {\n      clearTimeout(longPressTimer.current);\n      setIsLongPressing(false);\n    }\n    \n    // Handle swipe gesture\n    if (swipeStartRef.current && e.changedTouches.length === 1) {\n      const endTouch = e.changedTouches[0];\n      const endPoint: TouchPoint = {\n        x: endTouch.clientX,\n        y: endTouch.clientY,\n        time: Date.now()\n      };\n      \n      const distance = getDistance(swipeStartRef.current, endPoint);\n      const duration = endPoint.time - swipeStartRef.current.time;\n      const velocity = distance / duration;\n      \n      if (distance > swipeThreshold) {\n        const direction = getSwipeDirection(swipeStartRef.current, endPoint);\n        \n        onSwipe?.({\n          direction,\n          distance,\n          velocity,\n          duration\n        });\n        \n        triggerHapticFeedback('medium');\n        announceGesture(`swipe-${direction}`);\n        setSwipeDirection(direction);\n        \n        // Visual feedback\n        const targetX = direction === 'left' ? -100 : direction === 'right' ? 100 : 0;\n        const targetY = direction === 'up' ? -100 : direction === 'down' ? 100 : 0;\n        \n        animate(x, targetX, { duration: 0.2, ease: 'easeOut' }).then(() => {\n          animate(x, 0, { duration: 0.3, ease: 'easeInOut' });\n        });\n        \n        animate(y, targetY, { duration: 0.2, ease: 'easeOut' }).then(() => {\n          animate(y, 0, { duration: 0.3, ease: 'easeInOut' });\n        });\n      } else {\n        // Handle tap and double tap\n        const currentTime = Date.now();\n        \n        if (lastTap && currentTime - lastTap.time < doubleTapDelay) {\n          // Double tap\n          onDoubleTap?.(endPoint);\n          triggerHapticFeedback('heavy');\n          announceGesture('double-tap');\n          setLastTap(null);\n        } else {\n          // Single tap\n          onTap?.(endPoint);\n          setLastTap(endPoint);\n          \n          // Clear single tap if no double tap follows\n          setTimeout(() => {\n            setLastTap(null);\n          }, doubleTapDelay);\n        }\n      }\n      \n      swipeStartRef.current = null;\n    }\n    \n    // Reset visual state\n    setTimeout(() => {\n      setSwipeDirection(null);\n      animate(scale, 1, { duration: 0.3, ease: 'easeInOut' });\n    }, 200);\n    \n    // Update touches map\n    const newTouches = new Map(touches);\n    Array.from(e.changedTouches).forEach((touch) => {\n      newTouches.delete(touch.identifier);\n    });\n    setTouches(newTouches);\n  }, [disabled, touches, onSwipe, onDoubleTap, onTap, swipeThreshold, doubleTapDelay, lastTap, triggerHapticFeedback, announceGesture, x, y, scale]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (longPressTimer.current) {\n        clearTimeout(longPressTimer.current);\n      }\n    };\n  }, []);\n\n  return (\n    <motion.div\n      ref={containerRef}\n      className={`relative overflow-hidden ${className}`}\n      style={{\n        touchAction: 'manipulation',\n        x,\n        y,\n        opacity,\n        scale\n      }}\n      onTouchStart={handleTouchStart}\n      onTouchMove={handleTouchMove}\n      onTouchEnd={handleTouchEnd}\n      onTouchCancel={handleTouchEnd}\n    >\n      {/* Swipe Direction Indicator */}\n      {showSwipeIndicators && swipeDirection && (\n        <motion.div\n          initial={{ opacity: 0, scale: 0.5 }}\n          animate={{ opacity: 1, scale: 1 }}\n          exit={{ opacity: 0, scale: 0.5 }}\n          className=\"absolute inset-0 flex items-center justify-center pointer-events-none z-10\"\n        >\n          <div className=\"bg-black/20 backdrop-blur-sm rounded-full p-4\">\n            <div className=\"text-white text-2xl\">\n              {swipeDirection === 'left' && 'â'}\n              {swipeDirection === 'right' && 'â'}\n              {swipeDirection === 'up' && 'â'}\n              {swipeDirection === 'down' && 'â'}\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Touch Ripples */}\n      {touchRipples.map((ripple) => (\n        <motion.div\n          key={ripple.id}\n          initial={{ \n            scale: 0, \n            opacity: 0.8,\n            x: ripple.x - 25,\n            y: ripple.y - 25\n          }}\n          animate={{ \n            scale: 2, \n            opacity: 0 \n          }}\n          transition={{ duration: 0.6, ease: 'easeOut' }}\n          className=\"absolute w-12 h-12 bg-blue-400 rounded-full pointer-events-none z-10\"\n          style={{\n            background: 'radial-gradient(circle, rgba(59,130,246,0.3) 0%, transparent 70%)'\n          }}\n        />\n      ))}\n\n      {/* Long Press Indicator */}\n      {isLongPressing && (\n        <motion.div\n          initial={{ scale: 0, opacity: 0 }}\n          animate={{ scale: 1, opacity: 1 }}\n          className=\"absolute inset-0 flex items-center justify-center pointer-events-none z-10\"\n        >\n          <div className=\"bg-red-500/20 backdrop-blur-sm rounded-full p-6\">\n            <div className=\"w-8 h-8 border-4 border-white border-t-transparent rounded-full animate-spin\" />\n          </div>\n        </motion.div>\n      )}\n\n      {children}\n    </motion.div>\n  );\n}\n\n// Lusophone Cultural Gesture Patterns Hook\nexport function usePortugueseGestures() {\n  const [gestureHistory, setGestureHistory] = useState<SwipeGesture[]>([]);\n  \n  const detectCulturalPattern = useCallback((gesture: SwipeGesture) => {\n    setGestureHistory(prev => [...prev.slice(-4), gesture]);\n    \n    // Portuguese flag pattern: right-down-left-up\n    const flagPattern = ['right', 'down', 'left', 'up'];\n    const recentGestures = gestureHistory.slice(-3).map(g => g.direction);\n    recentGestures.push(gesture.direction);\n    \n    if (JSON.stringify(recentGestures) === JSON.stringify(flagPattern)) {\n      // Easter egg: Portuguese flag gesture detected\n      if ('navigator' in window && 'vibrate' in navigator) {\n        navigator.vibrate([200, 100, 200, 100, 200]);\n      }\n      \n      return 'portuguese-flag';\n    }\n    \n    // Fado pattern: slow swipes in circle\n    if (gestureHistory.length >= 4) {\n      const speeds = gestureHistory.slice(-4).map(g => g.velocity);\n      const avgSpeed = speeds.reduce((a, b) => a + b) / speeds.length;\n      \n      if (avgSpeed < 0.5) { // Slow, contemplative gestures\n        return 'fado-rhythm';\n      }\n    }\n    \n    return null;\n  }, [gestureHistory]);\n  \n  return { detectCulturalPattern, gestureHistory };\n}\n\nexport default EnhancedMobileGestures;"],"names":["EnhancedMobileGestures","usePortugueseGestures","children","onSwipe","onPinch","onLongPress","onDoubleTap","onTap","swipeThreshold","longPressDelay","doubleTapDelay","pinchThreshold","enablePortugueseGestures","enableHapticFeedback","enableVoiceAnnouncements","showSwipeIndicators","showTouchRipples","className","disabled","containerRef","useRef","touches","setTouches","useState","Map","isLongPressing","setIsLongPressing","lastTap","setLastTap","swipeDirection","setSwipeDirection","touchRipples","setTouchRipples","longPressTimer","swipeStartRef","initialDistance","initialScale","x","useMotionValue","y","opacity","useTransform","scale","createRipple","useCallback","rippleId","Date","now","prev","id","setTimeout","filter","ripple","triggerHapticFeedback","intensity","navigator","patterns","light","medium","heavy","vibrate","announceGesture","gesture","messages","message","window","utterance","SpeechSynthesisUtterance","lang","speechSynthesis","speak","getDistance","point1","point2","Math","sqrt","pow","getSwipeDirection","start","end","deltaX","deltaY","abs","handleTouchStart","e","newTouches","Array","from","forEach","touch","touchPoint","clientX","clientY","time","identifier","set","length","current","size","touchArray","values","distance","handleTouchMove","currentTouch","clearTimeout","touch1","touch2","currentDistance","scaleChange","scaleDelta","center","velocity","direction","handleTouchEnd","changedTouches","endTouch","endPoint","duration","targetX","targetY","animate","ease","then","currentTime","delete","useEffect","motion","div","ref","style","touchAction","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","initial","exit","map","transition","background","gestureHistory","setGestureHistory","detectCulturalPattern","slice","flagPattern","recentGestures","g","push","JSON","stringify","speeds","avgSpeed","reduce","a","b"],"mappings":"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"}