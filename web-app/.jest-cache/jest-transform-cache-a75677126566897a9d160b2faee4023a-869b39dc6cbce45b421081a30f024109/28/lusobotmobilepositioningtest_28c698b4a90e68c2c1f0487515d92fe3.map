{"version":3,"sources":["/workspaces/LusoTown/web-app/__tests__/lusobot/lusobot-mobile-positioning.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport { LanguageProvider } from '@/context/LanguageContext';\nimport LusoBotWidget from '@/components/LusoBotWidget';\n\n// Mock framer-motion for testing\njest.mock('framer-motion', () => ({\n  motion: {\n    div: ({ children, className, ...props }: any) => (\n      <div className={className} {...props}>{children}</div>\n    ),\n    button: ({ children, className, onClick, ...props }: any) => (\n      <button className={className} onClick={onClick} {...props}>{children}</button>\n    )\n  },\n  AnimatePresence: ({ children }: any) => <>{children}</>\n}));\n\n// Mock window.visualViewport for keyboard detection testing\nconst mockVisualViewport = {\n  height: 800,\n  addEventListener: jest.fn(),\n  removeEventListener: jest.fn()\n};\n\nObject.defineProperty(window, 'visualViewport', {\n  value: mockVisualViewport,\n  writable: true\n});\n\n// Helper function to render LusoBotWidget with providers\nconst renderWithProviders = (props = {}) => {\n  return render(\n    <LanguageProvider>\n      <LusoBotWidget {...props} />\n    </LanguageProvider>\n  );\n};\n\n// Mock window dimensions for mobile testing\nconst mockWindowDimensions = (width: number, height: number) => {\n  Object.defineProperty(window, 'innerWidth', {\n    writable: true,\n    configurable: true,\n    value: width,\n  });\n  Object.defineProperty(window, 'innerHeight', {\n    writable: true,\n    configurable: true,\n    value: height,\n  });\n  \n  // Trigger resize event\n  fireEvent(window, new Event('resize'));\n};\n\ndescribe('LusoBotWidget Mobile Positioning', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    // Reset to desktop dimensions\n    mockWindowDimensions(1024, 768);\n  });\n\n  describe('Mobile Positioning', () => {\n    it('should use mobile-safe positioning on mobile devices', async () => {\n      // Set mobile dimensions (iPhone SE width)\n      mockWindowDimensions(375, 667);\n      \n      renderWithProviders({ position: 'bottom-right' });\n      \n      // Wait for mobile detection to trigger\n      await waitFor(() => {\n        const widget = document.querySelector('[class*=\"fixed\"]');\n        expect(widget).toHaveClass('bottom-24'); // Above mobile nav\n        expect(widget).toHaveClass('right-16'); // Avoid FloatingNavigation FAB\n        expect(widget).toHaveClass('safe-area-bottom'); // iOS safe area\n      });\n    });\n\n    it('should use desktop positioning on larger screens', () => {\n      mockWindowDimensions(1024, 768);\n      \n      renderWithProviders({ position: 'bottom-right' });\n      \n      const widget = document.querySelector('[class*=\"fixed\"]');\n      expect(widget).toHaveClass('bottom-6');\n      expect(widget).toHaveClass('right-6');\n    });\n\n    it('should have proper z-index to avoid navigation conflicts', () => {\n      renderWithProviders();\n      \n      const widget = document.querySelector('[class*=\"fixed\"]');\n      expect(widget).toHaveClass('z-40'); // Below mobile nav z-50\n    });\n  });\n\n  describe('Mobile Chat Window', () => {\n    it('should use mobile-optimized dimensions on small screens', async () => {\n      mockWindowDimensions(375, 667);\n      \n      renderWithProviders();\n      \n      const chatButton = screen.getByRole('button');\n      fireEvent.click(chatButton);\n      \n      await waitFor(() => {\n        const chatWindow = document.querySelector('[class*=\"w-\\\\[90vw\\\\]\"]');\n        expect(chatWindow).toBeInTheDocument();\n        expect(chatWindow).toHaveClass('max-w-sm'); // Mobile max width\n        expect(chatWindow).toHaveClass('h-[70vh]'); // Mobile height\n        expect(chatWindow).toHaveClass('max-h-[500px]'); // Mobile max height\n      });\n    });\n\n    it('should use desktop dimensions on larger screens', () => {\n      mockWindowDimensions(1024, 768);\n      \n      renderWithProviders();\n      \n      const chatButton = screen.getByRole('button');\n      fireEvent.click(chatButton);\n      \n      const chatWindow = document.querySelector('[class*=\"w-96\"]');\n      expect(chatWindow).toBeInTheDocument();\n      expect(chatWindow).toHaveClass('h-[600px]'); // Desktop height\n    });\n  });\n\n  describe('Mobile Keyboard Detection', () => {\n    it('should hide widget when mobile keyboard is open', async () => {\n      mockWindowDimensions(375, 667);\n      \n      renderWithProviders();\n      \n      const chatButton = screen.getByRole('button');\n      expect(chatButton).toBeInTheDocument();\n      \n      // Simulate keyboard opening (viewport height reduces significantly)\n      mockVisualViewport.height = 400; // Keyboard reduces viewport by 400px\n      const resizeCallback = mockVisualViewport.addEventListener.mock.calls\n        .find(([event]) => event === 'resize')?.[1];\n      \n      if (resizeCallback) {\n        resizeCallback();\n      }\n      \n      await waitFor(() => {\n        expect(chatButton).not.toBeInTheDocument();\n      });\n    });\n  });\n\n  describe('Touch Target Accessibility', () => {\n    it('should have minimum touch target size on mobile', async () => {\n      mockWindowDimensions(375, 667);\n      \n      renderWithProviders();\n      \n      await waitFor(() => {\n        const chatButton = screen.getByRole('button');\n        expect(chatButton).toHaveClass('min-h-[44px]'); // WCAG minimum\n        expect(chatButton).toHaveClass('min-w-[44px]');\n      });\n    });\n\n    it('should use smaller button on mobile while maintaining touch targets', async () => {\n      mockWindowDimensions(375, 667);\n      \n      renderWithProviders();\n      \n      await waitFor(() => {\n        const chatButton = screen.getByRole('button');\n        expect(chatButton).toHaveClass('w-14'); // Mobile size\n        expect(chatButton).toHaveClass('h-14');\n        expect(chatButton).toHaveClass('min-h-[44px]'); // Still meets WCAG\n      });\n    });\n  });\n\n  describe('Portuguese Community Branding', () => {\n    it('should include Portuguese flag indicator', () => {\n      renderWithProviders();\n      \n      const flagIndicator = screen.getByText('ðŸ‡µðŸ‡¹');\n      expect(flagIndicator).toBeInTheDocument();\n    });\n\n    it('should have proper Portuguese accessibility labels', () => {\n      renderWithProviders();\n      \n      const chatButton = screen.getByLabelText(/LusoBot.*PortuguÃªs/i);\n      expect(chatButton).toBeInTheDocument();\n    });\n\n    it('should support keyboard navigation with Portuguese context', () => {\n      renderWithProviders();\n      \n      const chatButton = screen.getByRole('button');\n      \n      // Test Enter key\n      fireEvent.keyDown(chatButton, { key: 'Enter' });\n      expect(chatButton).toHaveAttribute('tabIndex', '0');\n      \n      // Test Space key\n      fireEvent.keyDown(chatButton, { key: ' ' });\n      expect(chatButton).toHaveAttribute('role', 'button');\n    });\n  });\n\n  describe('Conflict Avoidance', () => {\n    it('should position away from FloatingNavigation FAB on mobile', async () => {\n      mockWindowDimensions(375, 667);\n      \n      renderWithProviders({ position: 'bottom-right' });\n      \n      await waitFor(() => {\n        const widget = document.querySelector('[class*=\"fixed\"]');\n        expect(widget).toHaveClass('right-16'); // Moved left to avoid FAB at right-6\n      });\n    });\n\n    it('should not conflict with mobile navigation z-index', () => {\n      renderWithProviders();\n      \n      const widget = document.querySelector('[class*=\"fixed\"]');\n      expect(widget).toHaveClass('z-40'); // Below mobile nav z-50\n    });\n  });\n});"],"names":["jest","mock","motion","div","children","className","props","button","onClick","AnimatePresence","mockVisualViewport","height","addEventListener","fn","removeEventListener","Object","defineProperty","window","value","writable","renderWithProviders","render","LanguageProvider","LusoBotWidget","mockWindowDimensions","width","configurable","fireEvent","Event","describe","beforeEach","clearAllMocks","it","position","waitFor","widget","document","querySelector","expect","toHaveClass","chatButton","screen","getByRole","click","chatWindow","toBeInTheDocument","resizeCallback","calls","find","event","not","flagIndicator","getByText","getByLabelText","keyDown","key","toHaveAttribute"],"mappings":"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"}