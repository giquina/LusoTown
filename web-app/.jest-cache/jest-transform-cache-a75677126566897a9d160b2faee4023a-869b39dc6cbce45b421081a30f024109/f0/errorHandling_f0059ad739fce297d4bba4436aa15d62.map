{"version":3,"sources":["/workspaces/LusoTown/web-app/src/lib/errorHandling.tsx"],"sourcesContent":["/**\n * Comprehensive error handling utilities for LusoTown platform\n * Provides secure error handling, logging, and user-friendly error messages\n */\n\nimport React from 'react'\nimport { toast } from 'react-hot-toast'\n\n// Error types for categorization\nexport enum ErrorType {\n  AUTHENTICATION = 'authentication',\n  AUTHORIZATION = 'authorization',\n  NETWORK = 'network',\n  VALIDATION = 'validation',\n  NOT_FOUND = 'not_found',\n  SERVER_ERROR = 'server_error',\n  CLIENT_ERROR = 'client_error',\n  UNKNOWN = 'unknown'\n}\n\n// Custom error class with additional context\nexport class LusoTownError extends Error {\n  public readonly type: ErrorType\n  public readonly code?: string\n  public readonly context?: Record<string, any>\n  public readonly userMessage?: string\n  public readonly timestamp: Date\n\n  constructor(\n    message: string,\n    type: ErrorType = ErrorType.UNKNOWN,\n    code?: string,\n    context?: Record<string, any>,\n    userMessage?: string\n  ) {\n    super(message)\n    this.name = 'LusoTownError'\n    this.type = type\n    this.code = code\n    this.context = context\n    this.userMessage = userMessage\n    this.timestamp = new Date()\n  }\n}\n\n// Safe async operation wrapper\nexport async function safeAsync<T>(\n  operation: () => Promise<T>,\n  errorContext?: {\n    operationName?: string\n    showToast?: boolean\n    fallbackValue?: T\n    onError?: (error: Error) => void\n  }\n): Promise<{ data?: T; error?: LusoTownError; success: boolean }> {\n  try {\n    const data = await operation()\n    return { data, success: true }\n  } catch (error) {\n    console.error(`Error in ${errorContext?.operationName || 'async operation'}:`, error)\n    \n    const lusoError = error instanceof LusoTownError \n      ? error \n      : new LusoTownError(\n          error instanceof Error ? error.message : 'Unknown error occurred',\n          categorizeError(error),\n          undefined,\n          { originalError: error, operation: errorContext?.operationName }\n        )\n\n    // Show user-friendly toast if requested\n    if (errorContext?.showToast) {\n      const userMessage = lusoError.userMessage || getErrorMessage(lusoError.type)\n      toast.error(userMessage)\n    }\n\n    // Call custom error handler if provided\n    if (errorContext?.onError) {\n      errorContext.onError(lusoError)\n    }\n\n    // Log to error tracking service in production\n    if (process.env.NODE_ENV === 'production') {\n      logError(lusoError, errorContext)\n    }\n\n    return { \n      error: lusoError, \n      success: false,\n      data: errorContext?.fallbackValue\n    }\n  }\n}\n\n// Categorize errors based on type and message\nfunction categorizeError(error: any): ErrorType {\n  if (!error) return ErrorType.UNKNOWN\n\n  const message = error.message?.toLowerCase() || ''\n  const status = error.status || error.statusCode\n\n  // HTTP status codes\n  if (status === 401) return ErrorType.AUTHENTICATION\n  if (status === 403) return ErrorType.AUTHORIZATION\n  if (status === 404) return ErrorType.NOT_FOUND\n  if (status >= 400 && status < 500) return ErrorType.CLIENT_ERROR\n  if (status >= 500) return ErrorType.SERVER_ERROR\n\n  // Network errors\n  if (message.includes('network') || message.includes('fetch') || message.includes('connection')) {\n    return ErrorType.NETWORK\n  }\n\n  // Authentication errors\n  if (message.includes('unauthorized') || message.includes('login') || message.includes('token')) {\n    return ErrorType.AUTHENTICATION\n  }\n\n  // Validation errors\n  if (message.includes('validation') || message.includes('invalid') || message.includes('required')) {\n    return ErrorType.VALIDATION\n  }\n\n  return ErrorType.UNKNOWN\n}\n\n// Get user-friendly error messages\nfunction getErrorMessage(type: ErrorType): string {\n  const messages = {\n    [ErrorType.AUTHENTICATION]: 'Sessão expirada. Por favor, faça login novamente.',\n    [ErrorType.AUTHORIZATION]: 'Não tem permissão para realizar esta ação.',\n    [ErrorType.NETWORK]: 'Problema de conexão. Verifique sua internet e tente novamente.',\n    [ErrorType.VALIDATION]: 'Dados inválidos. Verifique as informações e tente novamente.',\n    [ErrorType.NOT_FOUND]: 'Recurso não encontrado.',\n    [ErrorType.SERVER_ERROR]: 'Erro do servidor. Tente novamente em alguns minutos.',\n    [ErrorType.CLIENT_ERROR]: 'Erro na solicitação. Verifique os dados e tente novamente.',\n    [ErrorType.UNKNOWN]: 'Ocorreu um erro inesperado. Tente novamente.'\n  }\n  \n  return messages[type] || messages[ErrorType.UNKNOWN]\n}\n\n// Log error to external service in production\nfunction logError(error: LusoTownError, context?: any) {\n  // In production, this would send to your error tracking service\n  // For now, we'll just structure the error for logging\n  const errorReport = {\n    message: error.message,\n    type: error.type,\n    code: error.code,\n    stack: error.stack,\n    timestamp: error.timestamp,\n    context: error.context,\n    operationContext: context,\n    userAgent: typeof window !== 'undefined' ? window.navigator.userAgent : undefined,\n    url: typeof window !== 'undefined' ? window.location.href : undefined\n  }\n\n  console.error('Production Error Report:', errorReport)\n}\n\n// Safe localStorage operations\nexport const safeLocalStorage = {\n  getItem: (key: string): string | null => {\n    try {\n      return localStorage.getItem(key)\n    } catch (error) {\n      console.error('Error reading from localStorage:', error)\n      return null\n    }\n  },\n\n  setItem: (key: string, value: string): boolean => {\n    try {\n      localStorage.setItem(key, value)\n      return true\n    } catch (error) {\n      console.error('Error writing to localStorage:', error)\n      return false\n    }\n  },\n\n  removeItem: (key: string): boolean => {\n    try {\n      localStorage.removeItem(key)\n      return true\n    } catch (error) {\n      console.error('Error removing from localStorage:', error)\n      return false\n    }\n  },\n\n  getJSON: <T extends unknown>(key: string): T | null => {\n    try {\n      const item = localStorage.getItem(key)\n      return item ? JSON.parse(item) : null\n    } catch (error) {\n      console.error('Error parsing JSON from localStorage:', error)\n      return null\n    }\n  },\n\n  setJSON: <T extends unknown>(key: string, value: T): boolean => {\n    try {\n      localStorage.setItem(key, JSON.stringify(value))\n      return true\n    } catch (error) {\n      console.error('Error storing JSON to localStorage:', error)\n      return false\n    }\n  }\n}\n\n// Safe DOM operations\nexport const safeDOMOperations = {\n  querySelector: (selector: string): Element | null => {\n    try {\n      return document.querySelector(selector)\n    } catch (error) {\n      console.error('Error with querySelector:', error)\n      return null\n    }\n  },\n\n  getElementById: (id: string): HTMLElement | null => {\n    try {\n      return document.getElementById(id)\n    } catch (error) {\n      console.error('Error with getElementById:', error)\n      return null\n    }\n  },\n\n  addEventListener: (\n    element: Element | Window | Document,\n    event: string,\n    handler: EventListener,\n    options?: boolean | AddEventListenerOptions\n  ): boolean => {\n    try {\n      element.addEventListener(event, handler, options)\n      return true\n    } catch (error) {\n      console.error('Error adding event listener:', error)\n      return false\n    }\n  },\n\n  removeEventListener: (\n    element: Element | Window | Document,\n    event: string,\n    handler: EventListener,\n    options?: boolean | EventListenerOptions\n  ): boolean => {\n    try {\n      element.removeEventListener(event, handler, options)\n      return true\n    } catch (error) {\n      console.error('Error removing event listener:', error)\n      return false\n    }\n  }\n}\n\n// Input validation helpers\nexport const inputValidation = {\n  email: (email: string): boolean => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    return emailRegex.test(email)\n  },\n\n  sanitizeString: (input: string): string => {\n    // Basic XSS prevention - remove potentially dangerous characters\n    return input\n      .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '')\n      .replace(/<iframe\\b[^<]*(?:(?!<\\/iframe>)<[^<]*)*<\\/iframe>/gi, '')\n      .replace(/javascript:/gi, '')\n      .replace(/on\\w+\\s*=\\s*\"[^\"]*\"/gi, '')\n      .replace(/on\\w+\\s*=\\s*'[^']*'/gi, '')\n  },\n\n  isValidLength: (input: string, min: number = 0, max: number = Infinity): boolean => {\n    return input.length >= min && input.length <= max\n  },\n\n  containsOnlyAllowedChars: (input: string, allowedChars: RegExp): boolean => {\n    return allowedChars.test(input)\n  }\n}\n\n// Network request helpers with error handling\nexport async function safeFetch(\n  url: string,\n  options?: RequestInit,\n  errorContext?: {\n    operationName?: string\n    showToast?: boolean\n    retries?: number\n  }\n): Promise<{ data?: Response; error?: LusoTownError; success: boolean }> {\n  const maxRetries = errorContext?.retries ?? 0\n  let attempt = 0\n\n  while (attempt <= maxRetries) {\n    const result = await safeAsync(\n      () => fetch(url, options),\n      {\n        operationName: errorContext?.operationName || `fetch ${url}`,\n        showToast: errorContext?.showToast && attempt === maxRetries // Only show toast on last attempt\n      }\n    )\n\n    if (result.success) {\n      return result\n    }\n\n    attempt++\n    if (attempt <= maxRetries) {\n      // Wait before retrying (exponential backoff)\n      await new Promise(resolve => setTimeout(resolve, Math.pow(2, attempt) * 1000))\n    }\n  }\n\n  return { \n    error: new LusoTownError(\n      'Network request failed after retries',\n      ErrorType.NETWORK\n    ), \n    success: false \n  }\n}\n\n// React component error wrapper\nexport function withErrorHandling<P extends object>(\n  Component: React.ComponentType<P>,\n  errorContext?: {\n    componentName?: string\n    fallbackRender?: (error: Error) => React.ReactNode\n  }\n) {\n  return function WrappedComponent(props: P) {\n    try {\n      return <Component {...props} />\n    } catch (error) {\n      console.error(`Error in component ${errorContext?.componentName || 'Unknown'}:`, error)\n      \n      if (errorContext?.fallbackRender) {\n        return errorContext.fallbackRender(error as Error)\n      }\n\n      return (\n        <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\n          <p className=\"text-red-800 text-sm\">\n            Erro ao carregar componente{errorContext?.componentName ? ` ${errorContext.componentName}` : ''}.\n            <button \n              onClick={() => window.location.reload()} \n              className=\"ml-2 text-red-600 hover:text-red-700 underline\"\n            >\n              Recarregar página\n            </button>\n          </p>\n        </div>\n      )\n    }\n  }\n}\n\nexport default {\n  safeAsync,\n  safeLocalStorage,\n  safeDOMOperations,\n  inputValidation,\n  safeFetch,\n  withErrorHandling,\n  LusoTownError,\n  ErrorType\n}"],"names":["LusoTownError","inputValidation","safeAsync","safeDOMOperations","safeFetch","safeLocalStorage","withErrorHandling","ErrorType","Error","constructor","message","type","code","context","userMessage","name","timestamp","Date","operation","errorContext","data","success","error","console","operationName","lusoError","categorizeError","undefined","originalError","showToast","getErrorMessage","toast","onError","process","env","NODE_ENV","logError","fallbackValue","toLowerCase","status","statusCode","includes","messages","errorReport","stack","operationContext","userAgent","window","navigator","url","location","href","getItem","key","localStorage","setItem","value","removeItem","getJSON","item","JSON","parse","setJSON","stringify","querySelector","selector","document","getElementById","id","addEventListener","element","event","handler","options","removeEventListener","email","emailRegex","test","sanitizeString","input","replace","isValidLength","min","max","Infinity","length","containsOnlyAllowedChars","allowedChars","maxRetries","retries","attempt","result","fetch","Promise","resolve","setTimeout","Math","pow","Component","WrappedComponent","props","componentName","fallbackRender","div","className","p","button","onClick","reload"],"mappings":"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"}