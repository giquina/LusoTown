b0e7ea9dd055c119fa9703daf9a1b1e7
/**
 * Centralized Pricing Configuration and Helpers
 * 
 * All pricing, currency, and payment-related constants and utilities
 * to eliminate hardcoded price strings throughout the application.
 * 
 * Environment variables support for dynamic pricing:
 * - NEXT_PUBLIC_COMMUNITY_PRICE_MONTHLY
 * - NEXT_PUBLIC_AMBASSADOR_PRICE_MONTHLY
 * - NEXT_PUBLIC_STUDENT_DISCOUNT_RATE
 * - NEXT_PUBLIC_ANNUAL_DISCOUNT_RATE
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    BUSINESS_PRICING: function() {
        return BUSINESS_PRICING;
    },
    CULTURAL_VALUE_PROPOSITIONS: function() {
        return CULTURAL_VALUE_PROPOSITIONS;
    },
    CURRENCIES: function() {
        return CURRENCIES;
    },
    DISCOUNTS: function() {
        return DISCOUNTS;
    },
    EVENTS_PRICING: function() {
        return EVENTS_PRICING;
    },
    EVENT_PRICING: function() {
        return EVENT_PRICING;
    },
    LEGACY_TRANSPORT_PRICING: function() {
        return LEGACY_TRANSPORT_PRICING;
    },
    PAYMENT_FEES: function() {
        return PAYMENT_FEES;
    },
    PAYMENT_PREFERENCES: function() {
        return PAYMENT_PREFERENCES;
    },
    PORTUGUESE_PREMIUM_BENEFITS: function() {
        return PORTUGUESE_PREMIUM_BENEFITS;
    },
    PRICE_DISPLAY: function() {
        return PRICE_DISPLAY;
    },
    REVENUE_OPTIMIZATION: function() {
        return REVENUE_OPTIMIZATION;
    },
    STREAMING_PRICING: function() {
        return STREAMING_PRICING;
    },
    STUDENT_PRICING: function() {
        return STUDENT_PRICING;
    },
    SUBSCRIPTION_PLANS: function() {
        return SUBSCRIPTION_PLANS;
    },
    TOURS_PRICING: function() {
        return TOURS_PRICING;
    },
    TRANSPORT_PRICING: function() {
        return TRANSPORT_PRICING;
    },
    annualMembershipPrice: function() {
        return annualMembershipPrice;
    },
    calculateDiscount: function() {
        return calculateDiscount;
    },
    calculateSubscriptionSavings: function() {
        return calculateSubscriptionSavings;
    },
    comparePrices: function() {
        return comparePrices;
    },
    convertPrice: function() {
        return convertPrice;
    },
    creator: function() {
        return creator;
    },
    currency: function() {
        return currency;
    },
    currencySymbol: function() {
        return currencySymbol;
    },
    formatPrice: function() {
        return formatPrice;
    },
    formatPriceRange: function() {
        return formatPriceRange;
    },
    getCommunityMembershipPrice: function() {
        return getCommunityMembershipPrice;
    },
    getCulturalAmbassadorPrice: function() {
        return getCulturalAmbassadorPrice;
    },
    getFormattedPlanPrice: function() {
        return getFormattedPlanPrice;
    },
    getFormattedSavings: function() {
        return getFormattedSavings;
    },
    getFormattedStudentPrice: function() {
        return getFormattedStudentPrice;
    },
    getPlanLabel: function() {
        return getPlanLabel;
    },
    getPlanPrice: function() {
        return getPlanPrice;
    },
    getPriceForStripe: function() {
        return getPriceForStripe;
    },
    getSavingsAmount: function() {
        return getSavingsAmount;
    },
    getSavingsPercentage: function() {
        return getSavingsPercentage;
    },
    getStudentPrice: function() {
        return getStudentPrice;
    },
    getTransportQuote: function() {
        return getTransportQuote;
    },
    groupAnnualPrice: function() {
        return groupAnnualPrice;
    },
    isPriceValid: function() {
        return isPriceValid;
    },
    legacyFormatPrice: function() {
        return legacyFormatPrice;
    },
    membership: function() {
        return membership;
    },
    monthlyPrice: function() {
        return monthlyPrice;
    },
    planPriceLabel: function() {
        return planPriceLabel;
    },
    plans: function() {
        return plans;
    },
    studentAnnualPrice: function() {
        return studentAnnualPrice;
    },
    toursPricing: function() {
        return toursPricing;
    },
    validateCurrency: function() {
        return validateCurrency;
    },
    validateSubscriptionTier: function() {
        return validateSubscriptionTier;
    }
});
const CURRENCIES = {
    GBP: {
        symbol: "\xa3",
        code: "GBP",
        name: "British Pound",
        locale: "en-GB"
    },
    EUR: {
        symbol: "â‚¬",
        code: "EUR",
        name: "Euro",
        locale: "de-DE"
    },
    USD: {
        symbol: "$",
        code: "USD",
        name: "US Dollar",
        locale: "en-US"
    },
    BRL: {
        symbol: "R$",
        code: "BRL",
        name: "Brazilian Real",
        locale: "pt-BR"
    }
};
const currency = "GBP";
const currencySymbol = "\xa3";
// Environment variable overrides for dynamic pricing
const getEnvPrice = (key, defaultValue)=>{
    if (typeof window !== "undefined") {
        const envValue = process.env[`NEXT_PUBLIC_${key}`];
        return envValue ? parseFloat(envValue) : defaultValue;
    }
    return defaultValue;
};
const SUBSCRIPTION_PLANS = {
    free: {
        id: "free",
        monthly: 0,
        annual: 0,
        monthlyStripe: 0,
        annualStripe: 0,
        labelEn: "Free",
        labelPt: "Gr\xe1tis",
        culturalValueEn: "Explore Community",
        culturalValuePt: "Explorar Comunidade",
        features: {
            matches: 2,
            messages: 3,
            events: true,
            basicSupport: true,
            culturalEvents: 2,
            businessDirectory: false
        },
        limitations: {
            noPortugueseBusinessDiscount: true,
            noPremiumCulturalEvents: true,
            noFamilyPlans: true,
            noPersonalConcierge: true
        }
    },
    community: {
        id: "community",
        monthly: getEnvPrice("COMMUNITY_PRICE_MONTHLY", 15.99),
        annual: getEnvPrice("COMMUNITY_PRICE_ANNUAL", 159.99),
        monthlyStripe: 1599,
        annualStripe: 15999,
        labelEn: "Community Member",
        labelPt: "Membro da Comunidade",
        culturalValueEn: "Full Cultural Access",
        culturalValuePt: "Acesso Cultural Completo",
        features: {
            matches: -1,
            messages: -1,
            events: true,
            prioritySupport: true,
            networking: true,
            culturalEvents: -1,
            businessDirectory: true,
            portugueseBusinessDiscount: 10,
            monthlyNewsletter: true,
            familySupport: 4,
            culturalResources: true // Portuguese learning resources
        },
        portugalSpecific: {
            fadoNightsPriority: true,
            portugueseRestaurantNetwork: true,
            culturalFestivalAccess: true,
            languageLearningResources: true
        }
    },
    ambassador: {
        id: "ambassador",
        monthly: getEnvPrice("AMBASSADOR_PRICE_MONTHLY", 29.99),
        annual: getEnvPrice("AMBASSADOR_PRICE_ANNUAL", 299.99),
        monthlyStripe: 2999,
        annualStripe: 29999,
        labelEn: "Cultural Ambassador",
        labelPt: "Embaixador Cultural",
        culturalValueEn: "Community Leadership",
        culturalValuePt: "Lideran\xe7a Comunit\xe1ria",
        features: {
            matches: -1,
            messages: -1,
            events: true,
            prioritySupport: true,
            networking: true,
            premiumEvents: true,
            eventHosting: true,
            businessDirectory: true,
            culturalEvents: -1,
            portugueseBusinessDiscount: 20,
            monthlyNewsletter: true,
            familySupport: 4,
            culturalResources: true,
            personalConcierge: true,
            monthlyPortugueseCulturalBox: true,
            vipNetworkingEvents: true,
            culturalAmbassadorBadge: true
        },
        portugalSpecific: {
            fadoNightsPriority: true,
            portugueseRestaurantNetwork: true,
            culturalFestivalAccess: true,
            languageLearningResources: true,
            exclusivePortugueseBusinessEvents: true,
            culturalPreservationProjects: true,
            communityLeadershipOpportunities: true,
            monthlyPortugueseWineDelivery: true
        }
    },
    familia: {
        id: "familia",
        monthly: getEnvPrice("FAMILIA_PRICE_MONTHLY", 39.99),
        annual: getEnvPrice("FAMILIA_PRICE_ANNUAL", 399.99),
        monthlyStripe: 3999,
        annualStripe: 39999,
        labelEn: "Fam\xedlia (Family)",
        labelPt: "Fam\xedlia",
        culturalValueEn: "Multi-Generational Connection",
        culturalValuePt: "Liga\xe7\xe3o Multi-Geracional",
        features: {
            matches: -1,
            messages: -1,
            events: true,
            prioritySupport: true,
            networking: true,
            premiumEvents: true,
            eventHosting: true,
            businessDirectory: true,
            culturalEvents: -1,
            portugueseBusinessDiscount: 15,
            monthlyNewsletter: true,
            familySupport: 8,
            culturalResources: true,
            familyEventPriority: true,
            childrenPortugueseClasses: true,
            familyNetworking: true // Family playdate coordination
        },
        portugalSpecific: {
            fadoNightsPriority: true,
            portugueseRestaurantNetwork: true,
            culturalFestivalAccess: true,
            languageLearningResources: true,
            familyPortugueseEducation: true,
            culturalHeritagePreservation: true,
            grandparentInclusionPrograms: true,
            familyTraditionalCelebrations: true
        }
    }
};
const PORTUGUESE_PREMIUM_BENEFITS = {
    cultural: {
        fadoNightsAccess: {
            name: "Fado Nights Access",
            namePt: "Acesso a Noites de Fado",
            description: "Priority booking for authentic Fado performances",
            descriptionPt: "Reserva priorit\xe1ria para espet\xe1culos de Fado aut\xeanticos",
            tier: "community"
        },
        portugueseRestaurantNetwork: {
            name: "Portuguese Restaurant Network",
            namePt: "Rede de Restaurantes Portugueses",
            description: "Exclusive discounts at Portuguese restaurants across the United Kingdom",
            descriptionPt: "Descontos exclusivos em restaurantes portugueses por todo o Reino Unido",
            tier: "community"
        },
        culturalFestivalPriority: {
            name: "Cultural Festival Priority",
            namePt: "Prioridade em Festivais Culturais",
            description: "VIP access to Santos Populares, Portugal Day celebrations",
            descriptionPt: "Acesso VIP aos Santos Populares, celebra\xe7\xf5es do Dia de Portugal",
            tier: "ambassador"
        },
        monthlyPortugueseWineBox: {
            name: "Monthly Portuguese Wine Delivery",
            namePt: "Entrega Mensal de Vinhos Portugueses",
            description: "Curated Portuguese wines and specialty products delivered monthly",
            descriptionPt: "Vinhos portugueses selecionados e produtos especiais entregues mensalmente",
            tier: "ambassador"
        }
    },
    family: {
        childrenPortugueseClasses: {
            name: "Children's Portuguese Classes",
            namePt: "Aulas de Portugu\xeas para Crian\xe7as",
            description: "Weekly Portuguese language and culture classes for children",
            descriptionPt: "Aulas semanais de l\xedngua e cultura portuguesa para crian\xe7as",
            tier: "familia"
        },
        familyPlaydateNetwork: {
            name: "Family Playdate Network",
            namePt: "Rede de Encontros Familiares",
            description: "Connect families for Portuguese cultural playdates",
            descriptionPt: "Conectar fam\xedlias para encontros culturais portugueses",
            tier: "familia"
        },
        grandparentInclusion: {
            name: "Grandparent Inclusion Programs",
            namePt: "Programas de Inclus\xe3o de Av\xf3s",
            description: "Senior-friendly Portuguese cultural activities and support",
            descriptionPt: "Atividades culturais portuguesas e apoio adaptado para seniores",
            tier: "familia"
        }
    },
    business: {
        portugueseNetworking: {
            name: "Portuguese Business Networking",
            namePt: "Networking de Neg\xf3cios Portugueses",
            description: "Exclusive networking events for Portuguese entrepreneurs",
            descriptionPt: "Eventos exclusivos de networking para empreendedores portugueses",
            tier: "ambassador"
        },
        businessDiscountNetwork: {
            name: "Business Discount Network",
            namePt: "Rede de Descontos Empresariais",
            description: "Discounts at Portuguese-owned businesses nationwide",
            descriptionPt: "Descontos em empresas de propriet\xe1rios portugueses em todo o pa\xeds",
            tier: "community"
        }
    }
};
const REVENUE_OPTIMIZATION = {
    conversionTactics: {
        trialPeriods: {
            community: 14,
            ambassador: 7,
            familia: 21 // 21-day trial for Family plans
        },
        urgencyTriggers: {
            limitedTimeOffers: true,
            eventBasedUpgrades: true,
            culturalMomentMarketing: true // Santos Populares, Portugal Day offers
        },
        psychologicalPricing: {
            anchoring: true,
            bundlePerception: true,
            socialProof: true // "Join 750+ Portuguese speakers"
        }
    },
    retentionStrategies: {
        culturalMilestones: {
            onboardingCultural: 3,
            communityIntegration: 30,
            valueRealization: 60 // 60 days to experience key benefits
        },
        engagementHooks: {
            monthlyNewsletterValue: true,
            exclusiveEventInvitations: true,
            culturalCalendarHighlights: true,
            memberSpotlights: true
        },
        winBackCampaigns: {
            pauseOptions: true,
            culturalEventReminders: true,
            communityMissedYouMessages: true,
            discountedReactivation: 0.5 // 50% off first month back
        }
    },
    pricingOptimization: {
        annualDiscountIncentive: 0.20,
        familyPlanEfficiency: 0.60,
        studentDiscountRate: 0.50,
        seniorDiscountRate: 0.30,
        culturalEventBundling: true // Event tickets bundled with membership upgrades
    }
};
const PAYMENT_PREFERENCES = {
    preferredMethods: {
        bankTransfer: 0.45,
        creditCard: 0.35,
        paypal: 0.15,
        other: 0.05 // 5% other methods
    },
    billingCycles: {
        monthly: {
            preference: 0.60,
            culturalReason: "Portuguese families manage budgets monthly"
        },
        quarterly: {
            preference: 0.25,
            incentive: 0.10 // 10% discount for quarterly
        },
        annual: {
            preference: 0.15,
            incentive: 0.20 // 20% discount for annual (Portuguese savings culture)
        }
    },
    familyBilling: {
        householdDecisionMaking: true,
        childrenConsideration: true,
        groupDiscountExpectation: true // Expect discount for multiple family members
    }
};
const CULTURAL_VALUE_PROPOSITIONS = {
    emotional: {
        saudadeConnection: {
            headline: "Understanding Saudade",
            headlinePt: "Compreender a Saudade",
            description: "Connect with others who understand this uniquely Portuguese emotion",
            descriptionPt: "Conecte-se com outros que compreendem esta emo\xe7\xe3o unicamente portuguesa"
        },
        culturalPreservation: {
            headline: "Preserving Portuguese Heritage",
            headlinePt: "Preservar o Patrim\xf3nio Portugu\xeas",
            description: "Keep Portuguese traditions alive for future generations in the United Kingdom",
            descriptionPt: "Manter as tradi\xe7\xf5es portuguesas vivas para futuras gera\xe7\xf5es no Reino Unido"
        },
        homeAwayFromHome: {
            headline: "Home Away From Home",
            headlinePt: "Casa Longe de Casa",
            description: "Find your Portuguese family in the United Kingdom",
            descriptionPt: "Encontre a sua fam\xedlia portuguesa no Reino Unido"
        }
    },
    practical: {
        businessOpportunities: {
            headline: "Portuguese Business Network",
            headlinePt: "Rede de Neg\xf3cios Portuguesa",
            value: "Access to 200+ Portuguese business owners across the United Kingdom"
        },
        culturalEducation: {
            headline: "Authentic Cultural Learning",
            headlinePt: "Aprendizagem Cultural Aut\xeantica",
            value: "Portuguese language classes, cultural workshops, traditional celebrations"
        },
        communitySupport: {
            headline: "Newcomer Integration Support",
            headlinePt: "Apoio \xe0 Integra\xe7\xe3o de Rec\xe9m-chegados",
            value: "Mentorship, practical advice, cultural bridge-building"
        }
    }
};
const plans = {
    community: SUBSCRIPTION_PLANS.community,
    ambassador: SUBSCRIPTION_PLANS.ambassador,
    familia: SUBSCRIPTION_PLANS.familia
};
const creator = {
    proMonthly: 24.99,
    ticketFeePercent: 8,
    ticketFeeFlat: 0.4
};
const legacyFormatPrice = (amount)=>new Intl.NumberFormat("en-GB", {
        style: "currency",
        currency: "GBP"
    }).format(amount);
const planPriceLabel = (plan, locale = "en")=>{
    const p = plans[plan];
    const label = locale === "pt" ? p.labelPt : p.labelEn;
    return `${label} ${legacyFormatPrice(p.monthly)}/month`;
};
const monthlyPrice = (plan)=>plans[plan].monthly;
const getCommunityMembershipPrice = ()=>plans.community.monthly;
const getCulturalAmbassadorPrice = ()=>plans.ambassador.monthly;
const TRANSPORT_PRICING = {
    luxury: {
        baseRate: 45,
        minimumBooking: 2,
        extraPassenger: 5,
        waitTime: 25,
        airportSurcharge: 15
    },
    group: {
        baseRate: 35,
        minimumBooking: 3,
        maxPassengers: 8,
        extraHour: 30
    },
    student: {
        baseRate: 25,
        discount: 0.5,
        verificationRequired: true
    },
    // Security services
    security: {
        basicProtection: 400,
        enhancedProtection: 800,
        closeProtection: 65 // per hour
    },
    // Premium transport packages
    packages: {
        premium4Hours: 320,
        premium6Hours: 380,
        premium6HoursPlus: 450,
        premium8Hours: 520,
        group4Hours: 280,
        group8Hours: 580,
        VIPWeekend: 1480,
        specialEvent5Hours: 420,
        airportPickup2Hours: 145,
        airportTransfer4Hours: 320,
        eventTransport3Hours: 380
    }
};
const EVENT_PRICING = {
    ticketFeePercent: 8,
    ticketFeeFlat: 0.4,
    minimumTicketFee: 0.5,
    maximumTicketFee: 25,
    creatorRevenueSplit: 0.85,
    premiumEventFee: 15 // flat fee for premium event features
};
const BUSINESS_PRICING = {
    basicListing: 0,
    premiumListing: 29.99,
    featuredListing: 49.99,
    verificationFee: 15,
    additionalPhotos: 5,
    socialMediaBoost: 19.99 // per month
};
const STREAMING_PRICING = {
    creatorMonthly: 24.99,
    donationFee: 0.03,
    subscriptionFee: 0.05,
    minimumDonation: 1,
    maximumDonation: 500,
    creatorRevenueSplit: 0.85 // 85% to creator
};
const PAYMENT_FEES = {
    stripe: {
        cardRate: 0.014,
        cardFee: 0.2,
        europeanCardRate: 0.025,
        paymentIntentFee: 0.2
    },
    paypal: {
        domesticRate: 0.034,
        internationalRate: 0.044,
        fixedFee: 0.2
    }
};
const DISCOUNTS = {
    student: getEnvPrice("STUDENT_DISCOUNT_RATE", 0.5),
    annual: getEnvPrice("ANNUAL_DISCOUNT_RATE", 0.17),
    earlyBird: 0.2,
    referral: 0.1,
    groupBooking: 0.15,
    portuguese: 0.05 // 5% off for Portuguese cultural events
};
const STUDENT_PRICING = {
    community: {
        monthly: 9.99,
        annual: 99.99,
        monthlyStripe: 999,
        annualStripe: 9999
    },
    ambassador: {
        monthly: 19.99,
        annual: 199.99,
        monthlyStripe: 1999,
        annualStripe: 19999
    }
};
const LEGACY_TRANSPORT_PRICING = {
    annual: getEnvPrice("TRANSPORT_ANNUAL_PRICE", 25),
    studentAnnual: getEnvPrice("TRANSPORT_STUDENT_ANNUAL_PRICE", 12.5),
    groupAnnual: 20 // Legacy group pricing
};
const membership = {
    annual: LEGACY_TRANSPORT_PRICING.annual,
    studentAnnual: LEGACY_TRANSPORT_PRICING.studentAnnual,
    groupAnnual: LEGACY_TRANSPORT_PRICING.groupAnnual
};
const PRICE_DISPLAY = {
    fromLabel: "From",
    fromLabelPt: "A partir de",
    perMonthLabel: "/month",
    perMonthLabelPt: "/m\xeas",
    perYearLabel: "/year",
    perYearLabelPt: "/ano",
    perHourLabel: "/hour",
    perHourLabelPt: "/hora",
    freeLabel: "Free",
    freeLabelPt: "Gr\xe1tis",
    popularLabel: "Most Popular",
    popularLabelPt: "Mais Popular",
    saveLabel: "Save",
    saveLabelPt: "Economize"
};
const formatPrice = (amount, currencyCode = "GBP", locale)=>{
    const defaultLocale = locale || CURRENCIES[currencyCode].locale;
    return new Intl.NumberFormat(defaultLocale, {
        style: "currency",
        currency: currencyCode
    }).format(amount);
};
const formatPriceRange = (minAmount, maxAmount, currencyCode = "GBP")=>{
    const min = formatPrice(minAmount, currencyCode);
    const max = formatPrice(maxAmount, currencyCode);
    return `${min} - ${max}`;
};
const calculateDiscount = (originalPrice, discountType)=>{
    const discountRate = DISCOUNTS[discountType];
    return originalPrice * (1 - discountRate);
};
const calculateSubscriptionSavings = (monthlyPrice)=>{
    const annualPrice = monthlyPrice * 12;
    const discountedAnnual = calculateDiscount(annualPrice, "annual");
    return annualPrice - discountedAnnual;
};
const getPlanPrice = (planId, billing = "monthly")=>{
    return SUBSCRIPTION_PLANS[planId][billing];
};
const getPlanLabel = (planId, locale = "en")=>{
    const plan = SUBSCRIPTION_PLANS[planId];
    return locale === "pt" ? plan.labelPt : plan.labelEn;
};
const getFormattedPlanPrice = (planId, billing = "monthly", locale = "en")=>{
    const price = getPlanPrice(planId, billing);
    const formattedPrice = formatPrice(price);
    if (price === 0) {
        return locale === "pt" ? PRICE_DISPLAY.freeLabelPt : PRICE_DISPLAY.freeLabel;
    }
    const periodLabel = billing === "annual" ? locale === "pt" ? PRICE_DISPLAY.perYearLabelPt : PRICE_DISPLAY.perYearLabel : locale === "pt" ? PRICE_DISPLAY.perMonthLabelPt : PRICE_DISPLAY.perMonthLabel;
    return `${formattedPrice}${periodLabel}`;
};
const getTransportQuote = (serviceType, hours, passengers = 1)=>{
    const service = TRANSPORT_PRICING[serviceType];
    const baseRate = service.baseRate;
    // Handle different service types
    let minimumHours = 1;
    if ("minimumBooking" in service) {
        minimumHours = service.minimumBooking;
    }
    const billingHours = Math.max(hours, minimumHours);
    let totalPrice = baseRate * billingHours;
    // Add extra passenger fee if applicable
    if ("extraPassenger" in service && passengers > 4) {
        totalPrice += (passengers - 4) * service.extraPassenger;
    }
    return totalPrice;
};
const annualMembershipPrice = ()=>membership.annual;
const studentAnnualPrice = ()=>membership.studentAnnual;
const groupAnnualPrice = ()=>membership.groupAnnual;
const getStudentPrice = (planId, billing = "monthly")=>{
    return STUDENT_PRICING[planId][billing];
};
const getFormattedStudentPrice = (planId, billing = "monthly", locale = "en")=>{
    const price = getStudentPrice(planId, billing);
    const formattedPrice = formatPrice(price);
    if (price === 0) {
        return locale === "pt" ? PRICE_DISPLAY.freeLabelPt : PRICE_DISPLAY.freeLabel;
    }
    const periodLabel = billing === "annual" ? locale === "pt" ? PRICE_DISPLAY.perYearLabelPt : PRICE_DISPLAY.perYearLabel : locale === "pt" ? PRICE_DISPLAY.perMonthLabelPt : PRICE_DISPLAY.perMonthLabel;
    return `${formattedPrice}${periodLabel}`;
};
const getPriceForStripe = (planId, billing = "monthly", isStudent = false)=>{
    if (isStudent) {
        return STUDENT_PRICING[planId][`${billing}Stripe`];
    }
    return SUBSCRIPTION_PLANS[planId][`${billing}Stripe`];
};
const getSavingsAmount = (planId)=>{
    const monthly = SUBSCRIPTION_PLANS[planId].monthly * 12;
    const annual = SUBSCRIPTION_PLANS[planId].annual;
    return monthly - annual;
};
const getSavingsPercentage = (planId)=>{
    const monthly = SUBSCRIPTION_PLANS[planId].monthly * 12;
    const annual = SUBSCRIPTION_PLANS[planId].annual;
    return Math.round((monthly - annual) / monthly * 100);
};
const getFormattedSavings = (planId, locale = "en")=>{
    const percentage = getSavingsPercentage(planId);
    const saveLabel = locale === "pt" ? PRICE_DISPLAY.saveLabelPt : PRICE_DISPLAY.saveLabel;
    return `${saveLabel} ${percentage}%`;
};
const comparePrices = (price1, price2, currencyCode = "GBP")=>{
    const difference = Math.abs(price1 - price2);
    const percentageDifference = price1 !== 0 ? Math.round(difference / price1 * 100) : 0;
    const formattedDifference = formatPrice(difference, currencyCode);
    let cheaperOption;
    if (price1 < price2) cheaperOption = "first";
    else if (price2 < price1) cheaperOption = "second";
    else cheaperOption = "equal";
    return {
        difference,
        percentageDifference,
        formattedDifference,
        cheaperOption
    };
};
const convertPrice = (amount, fromCurrency, toCurrency, exchangeRate)=>{
    if (fromCurrency === toCurrency) return amount;
    // Placeholder for exchange rate logic
    // In production, this would use real-time exchange rates
    const defaultRates = {
        "GBP-EUR": 1.17,
        "GBP-USD": 1.27,
        "GBP-BRL": 6.54,
        "EUR-GBP": 0.85,
        "USD-GBP": 0.79,
        "BRL-GBP": 0.15
    };
    const rateKey = `${fromCurrency}-${toCurrency}`;
    const rate = exchangeRate || defaultRates[rateKey] || 1;
    return amount * rate;
};
const isPriceValid = (price)=>{
    return typeof price === "number" && price >= 0 && Number.isFinite(price);
};
const validateSubscriptionTier = (tier)=>{
    return tier in SUBSCRIPTION_PLANS;
};
const validateCurrency = (currency)=>{
    return currency in CURRENCIES;
};
const TOURS_PRICING = {
    // Women-focused events
    womenNetworking: {
        wine30Plus: 85,
        professional40Plus: 165
    },
    // Professional development
    professional: {
        websiteCreation: 125,
        businessNetworking: 165
    },
    // Cultural experiences
    cultural: {
        languageExchange: 75,
        fadoNight: 95,
        cookingWorkshop: 95
    },
    // Tours and experiences  
    tours: {
        canterburyHeritage: 145,
        walkingTour: 35
    },
    // Social activities
    social: {
        fridayNight: 25,
        bookClub: 20
    }
};
const EVENTS_PRICING = {
    // Cultural events
    cultural: {
        fadoEvening: 45,
        portugalFestival: 55,
        traditionalDinner: 35,
        capeVerdeanNight: 30
    },
    // Sports and entertainment  
    sports: {
        footballViewing: 15,
        quadradoShow: 25
    },
    // Professional and networking
    professional: {
        businessNetworking: 25,
        businessBreakfast: 45,
        womenNetworking: 38,
        aiCodingWorkshop: 85
    },
    // Premium experiences
    premium: {
        royalCulturalTour: 58,
        luxuryNightOut: 65,
        photographyExperience: 45,
        culinaryTour: 52
    },
    // Community events
    community: {
        languageCafe: 8,
        carnivalCelebration: 20,
        freeEvents: 0 // Free events
    }
};
const toursPricing = {
    walkingTours: {
        standard: TOURS_PRICING.tours.walkingTour,
        heritage: TOURS_PRICING.tours.canterburyHeritage
    },
    womenEvents: {
        wine30Plus: TOURS_PRICING.womenNetworking.wine30Plus,
        professional40Plus: TOURS_PRICING.womenNetworking.professional40Plus
    },
    professionalEvents: {
        websiteWorkshop: TOURS_PRICING.professional.websiteCreation,
        networking: TOURS_PRICING.professional.businessNetworking
    },
    culturalEvents: {
        languageExchange: TOURS_PRICING.cultural.languageExchange,
        fadoNight: TOURS_PRICING.cultural.fadoNight,
        cooking: TOURS_PRICING.cultural.cookingWorkshop
    },
    socialEvents: {
        fridayNight: TOURS_PRICING.social.fridayNight,
        bookClub: TOURS_PRICING.social.bookClub
    }
};
// Development helpers and validation
if (typeof window === "undefined") {
    // Server-side validation during build
    console.log("[Pricing Config] Centralized pricing system loaded successfully");
    // Validate pricing consistency
    const communityMonthly = SUBSCRIPTION_PLANS.community.monthly;
    const ambassadorMonthly = SUBSCRIPTION_PLANS.ambassador.monthly;
    if (communityMonthly <= 0 || ambassadorMonthly <= communityMonthly) {
        console.warn("[Pricing Config] Warning: Price hierarchy may be incorrect");
    }
    // Validate student pricing
    const studentCommunity = STUDENT_PRICING.community.monthly;
    if (studentCommunity >= communityMonthly) {
        console.warn("[Pricing Config] Warning: Student pricing should be lower than regular pricing");
    }
}

//# sourceMappingURL=data:application/json;base64,