{"version":3,"sources":["/workspaces/LusoTown/web-app/__tests__/setup-verification.test.js"],"sourcesContent":["/**\n * Basic test to verify Jest setup is working correctly\n */\n\ndescribe('LusoTown Testing Framework Setup', () => {\n  it('should have Jest configured correctly', () => {\n    expect(true).toBe(true)\n  })\n\n  it('should have Portuguese test utilities available', () => {\n    expect(global.testUtils).toBeDefined()\n    expect(global.testUtils.mockPortugueseUser).toBeDefined()\n    expect(global.testUtils.mockPortugueseUser.name).toBe('João Silva')\n  })\n\n  it('should have localStorage mock available', () => {\n    expect(global.localStorage).toBeDefined()\n    expect(typeof global.localStorage.setItem).toBe('function')\n    expect(typeof global.localStorage.getItem).toBe('function')\n  })\n\n  it('should support Portuguese text', () => {\n    const portugueseText = 'Bem-vindo à comunidade de falantes de português em Londres'\n    expect(portugueseText).toContain('à')\n    expect(portugueseText).toContain('Bem-vindo')\n    expect(portugueseText.length).toBeGreaterThan(0)\n  })\n\n  it('should have mobile testing support', () => {\n    expect(global.matchMedia).toBeDefined()\n    expect(global.IntersectionObserver).toBeDefined()\n    expect(global.ResizeObserver).toBeDefined()\n  })\n\n  it('should mock Framer Motion correctly', () => {\n    const { motion } = require('framer-motion')\n    expect(motion.div).toBeDefined()\n    expect(typeof motion.div).toBe('function')\n  })\n\n  it('should mock react-hot-toast correctly', () => {\n    const toast = require('react-hot-toast')\n    expect(toast.default.success).toBeDefined()\n    expect(typeof toast.default.success).toBe('function')\n  })\n\n  it('should support Portuguese event data', () => {\n    const event = global.testUtils.mockPortugueseEvent\n    expect(event.title).toBe('Noite de Fado')\n    expect(event.location).toContain('Portuguese Cultural Centre')\n    expect(event.category).toBe('cultural')\n  })\n})\n"],"names":["describe","it","expect","toBe","global","testUtils","toBeDefined","mockPortugueseUser","name","localStorage","setItem","getItem","portugueseText","toContain","length","toBeGreaterThan","matchMedia","IntersectionObserver","ResizeObserver","motion","require","div","toast","default","success","event","mockPortugueseEvent","title","location","category"],"mappings":"AAAA;;CAEC;AAEDA,SAAS,oCAAoC;IAC3CC,GAAG,yCAAyC;QAC1CC,OAAO,MAAMC,IAAI,CAAC;IACpB;IAEAF,GAAG,mDAAmD;QACpDC,OAAOE,OAAOC,SAAS,EAAEC,WAAW;QACpCJ,OAAOE,OAAOC,SAAS,CAACE,kBAAkB,EAAED,WAAW;QACvDJ,OAAOE,OAAOC,SAAS,CAACE,kBAAkB,CAACC,IAAI,EAAEL,IAAI,CAAC;IACxD;IAEAF,GAAG,2CAA2C;QAC5CC,OAAOE,OAAOK,YAAY,EAAEH,WAAW;QACvCJ,OAAO,OAAOE,OAAOK,YAAY,CAACC,OAAO,EAAEP,IAAI,CAAC;QAChDD,OAAO,OAAOE,OAAOK,YAAY,CAACE,OAAO,EAAER,IAAI,CAAC;IAClD;IAEAF,GAAG,kCAAkC;QACnC,MAAMW,iBAAiB;QACvBV,OAAOU,gBAAgBC,SAAS,CAAC;QACjCX,OAAOU,gBAAgBC,SAAS,CAAC;QACjCX,OAAOU,eAAeE,MAAM,EAAEC,eAAe,CAAC;IAChD;IAEAd,GAAG,sCAAsC;QACvCC,OAAOE,OAAOY,UAAU,EAAEV,WAAW;QACrCJ,OAAOE,OAAOa,oBAAoB,EAAEX,WAAW;QAC/CJ,OAAOE,OAAOc,cAAc,EAAEZ,WAAW;IAC3C;IAEAL,GAAG,uCAAuC;QACxC,MAAM,EAAEkB,MAAM,EAAE,GAAGC,QAAQ;QAC3BlB,OAAOiB,OAAOE,GAAG,EAAEf,WAAW;QAC9BJ,OAAO,OAAOiB,OAAOE,GAAG,EAAElB,IAAI,CAAC;IACjC;IAEAF,GAAG,yCAAyC;QAC1C,MAAMqB,QAAQF,QAAQ;QACtBlB,OAAOoB,MAAMC,OAAO,CAACC,OAAO,EAAElB,WAAW;QACzCJ,OAAO,OAAOoB,MAAMC,OAAO,CAACC,OAAO,EAAErB,IAAI,CAAC;IAC5C;IAEAF,GAAG,wCAAwC;QACzC,MAAMwB,QAAQrB,OAAOC,SAAS,CAACqB,mBAAmB;QAClDxB,OAAOuB,MAAME,KAAK,EAAExB,IAAI,CAAC;QACzBD,OAAOuB,MAAMG,QAAQ,EAAEf,SAAS,CAAC;QACjCX,OAAOuB,MAAMI,QAAQ,EAAE1B,IAAI,CAAC;IAC9B;AACF"}