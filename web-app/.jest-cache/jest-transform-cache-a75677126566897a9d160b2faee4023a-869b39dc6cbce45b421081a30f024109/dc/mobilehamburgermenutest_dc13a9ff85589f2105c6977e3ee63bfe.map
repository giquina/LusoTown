{"version":3,"sources":["/workspaces/LusoTown/web-app/__tests__/mobile-hamburger-menu.test.tsx"],"sourcesContent":["/**\n * @jest-environment jsdom\n */\nimport React from 'react'\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react'\nimport Header from '@/components/Header'\nimport { LanguageProvider } from '@/context/LanguageContext'\nimport { HeritageProvider } from '@/context/HeritageContext'\n\n// Mock framer-motion to avoid animation issues in tests\njest.mock('framer-motion', () => ({\n  motion: {\n    div: ({ children, className, onClick, ...props }: any) => (\n      <div className={className} onClick={onClick} {...props}>\n        {children}\n      </div>\n    ),\n    a: ({ children, className, href, onClick, ...props }: any) => (\n      <a className={className} href={href} onClick={onClick} {...props}>\n        {children}\n      </a>\n    ),\n    button: ({ children, className, onClick, ...props }: any) => (\n      <button className={className} onClick={onClick} {...props}>\n        {children}\n      </button>\n    ),\n  },\n  AnimatePresence: ({ children }: any) => children,\n}))\n\n// Mock Next.js router\njest.mock('next/navigation', () => ({\n  useRouter: () => ({\n    push: jest.fn(),\n    back: jest.fn(),\n    forward: jest.fn(),\n  }),\n}))\n\nconst TestWrapper = ({ children }: { children: React.ReactNode }) => (\n  <LanguageProvider>\n    <HeritageProvider>\n      {children}\n    </HeritageProvider>\n  </LanguageProvider>\n)\n\ndescribe('Mobile Hamburger Menu', () => {\n  beforeEach(() => {\n    // Mock window.innerWidth for mobile viewport\n    Object.defineProperty(window, 'innerWidth', {\n      writable: true,\n      configurable: true,\n      value: 375,\n    })\n    \n    // Mock matchMedia for responsive design\n    Object.defineProperty(window, 'matchMedia', {\n      writable: true,\n      value: jest.fn().mockImplementation(query => ({\n        matches: query.includes('(max-width: 768px)'),\n        media: query,\n        onchange: null,\n        addListener: jest.fn(),\n        removeListener: jest.fn(),\n        addEventListener: jest.fn(),\n        removeEventListener: jest.fn(),\n        dispatchEvent: jest.fn(),\n      })),\n    })\n  })\n\n  test('renders mobile menu button correctly', () => {\n    render(\n      <TestWrapper>\n        <Header />\n      </TestWrapper>\n    )\n\n    // Check if mobile menu button exists\n    const menuButton = screen.getByTestId('mobile-menu-button')\n    expect(menuButton).toBeInTheDocument()\n  })\n\n  test('mobile menu button has proper accessibility attributes', () => {\n    render(\n      <TestWrapper>\n        <Header />\n      </TestWrapper>\n    )\n\n    const menuButton = screen.getByTestId('mobile-menu-button')\n    \n    // Check accessibility attributes\n    expect(menuButton).toHaveAttribute('aria-label')\n    expect(menuButton.getAttribute('aria-label')).toContain('menu')\n  })\n\n  test('mobile menu opens and closes correctly', async () => {\n    render(\n      <TestWrapper>\n        <Header />\n      </TestWrapper>\n    )\n\n    const menuButton = screen.getByTestId('mobile-menu-button')\n    \n    // Initially, menu should be closed\n    expect(screen.queryByText('What\\'s Happening')).not.toBeInTheDocument()\n    \n    // Click to open menu\n    fireEvent.click(menuButton)\n    \n    // Menu content should appear\n    await waitFor(() => {\n      expect(screen.getByText('What\\'s Happening')).toBeInTheDocument()\n    })\n    \n    // Click to close menu\n    fireEvent.click(menuButton)\n    \n    // Menu should disappear\n    await waitFor(() => {\n      expect(screen.queryByText('What\\'s Happening')).not.toBeInTheDocument()\n    })\n  })\n\n  test('mobile menu has proper z-index layering', () => {\n    render(\n      <TestWrapper>\n        <Header />\n      </TestWrapper>\n    )\n\n    const menuButton = screen.getByTestId('mobile-menu-button')\n    fireEvent.click(menuButton)\n\n    // Check if backdrop and content have proper z-index classes\n    const backdrop = document.querySelector('.z-\\\\[9998\\\\]')\n    const content = document.querySelector('.z-\\\\[9999\\\\]')\n    \n    expect(backdrop).toBeInTheDocument()\n    expect(content).toBeInTheDocument()\n  })\n\n  test('mobile menu items have proper touch targets', async () => {\n    render(\n      <TestWrapper>\n        <Header />\n      </TestWrapper>\n    )\n\n    const menuButton = screen.getByTestId('mobile-menu-button')\n    fireEvent.click(menuButton)\n\n    await waitFor(() => {\n      const menuItems = document.querySelectorAll('.min-h-\\\\[56px\\\\]')\n      expect(menuItems.length).toBeGreaterThan(0)\n    })\n  })\n\n  test('mobile menu includes Portuguese cultural theming', async () => {\n    render(\n      <TestWrapper>\n        <Header />\n      </TestWrapper>\n    )\n\n    const menuButton = screen.getByTestId('mobile-menu-button')\n    fireEvent.click(menuButton)\n\n    await waitFor(() => {\n      // Check for Portuguese cultural elements\n      const menuContent = document.querySelector('.bg-white\\\\/98')\n      const menuItems = document.querySelectorAll('.luxury-touch-target')\n      \n      expect(menuContent).toBeInTheDocument()\n      expect(menuItems.length).toBeGreaterThan(0)\n    })\n  })\n\n  test('mobile menu supports Portuguese community navigation', async () => {\n    render(\n      <TestWrapper>\n        <Header />\n      </TestWrapper>\n    )\n\n    const menuButton = screen.getByTestId('mobile-menu-button')\n    fireEvent.click(menuButton)\n\n    await waitFor(() => {\n      // Check for community navigation sections\n      expect(screen.getByText('Community Actions')).toBeInTheDocument()\n      expect(screen.getByText('Business Solutions')).toBeInTheDocument()\n      expect(screen.getByText('Find Your Match')).toBeInTheDocument()\n    })\n  })\n\n  test('mobile menu has enhanced animations and interactions', () => {\n    render(\n      <TestWrapper>\n        <Header />\n      </TestWrapper>\n    )\n\n    const menuButton = screen.getByTestId('mobile-menu-button')\n    \n    // Check if button has enhanced styling classes\n    expect(menuButton).toHaveClass('luxury-touch-target')\n    expect(menuButton).toHaveClass('min-h-[56px]')\n    expect(menuButton).toHaveClass('min-w-[56px]')\n  })\n\n  test('mobile menu backdrop closes menu when clicked', async () => {\n    render(\n      <TestWrapper>\n        <Header />\n      </TestWrapper>\n    )\n\n    const menuButton = screen.getByTestId('mobile-menu-button')\n    \n    // Open menu\n    fireEvent.click(menuButton)\n    \n    await waitFor(() => {\n      expect(screen.getByText('What\\'s Happening')).toBeInTheDocument()\n    })\n\n    // Click backdrop to close\n    const backdrop = document.querySelector('.fixed.inset-0')\n    if (backdrop) {\n      fireEvent.click(backdrop)\n    }\n\n    await waitFor(() => {\n      expect(screen.queryByText('What\\'s Happening')).not.toBeInTheDocument()\n    })\n  })\n})"],"names":["jest","mock","motion","div","children","className","onClick","props","a","href","button","AnimatePresence","useRouter","push","fn","back","forward","TestWrapper","LanguageProvider","HeritageProvider","describe","beforeEach","Object","defineProperty","window","writable","configurable","value","mockImplementation","query","matches","includes","media","onchange","addListener","removeListener","addEventListener","removeEventListener","dispatchEvent","test","render","Header","menuButton","screen","getByTestId","expect","toBeInTheDocument","toHaveAttribute","getAttribute","toContain","queryByText","not","fireEvent","click","waitFor","getByText","backdrop","document","querySelector","content","menuItems","querySelectorAll","length","toBeGreaterThan","menuContent","toHaveClass"],"mappings":"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"}