8916264189dce7a814573574793e145d
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    /**
 * Bottom App Download Bar - Dismissible promotion for mobile app
 * Features:
 * - Clear dismiss options (X button + "Skip for now" link)
 * - Dynamic z-index positioning
 * - State management with localStorage
 * - Smooth animations
 * - Adjusts other widget positions when visible
 */ default: function() {
        return AppDownloadBar;
    },
    useAppDownloadBarVisible: function() {
        return useAppDownloadBarVisible;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _framermotion = require("framer-motion");
const _outline = require("@heroicons/react/24/outline");
const _LanguageContext = require("../context/LanguageContext");
const _zindexlayers = require("../config/z-index-layers");
const _useAriaAnnouncements = require("../hooks/useAriaAnnouncements");
const _useFocusManagement = require("../hooks/useFocusManagement");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function AppDownloadBar({ className = "", autoShow = true, showDelay = 5000, position = "bottom" }) {
    const { language } = (0, _LanguageContext.useLanguage)();
    const [isVisible, setIsVisible] = (0, _react.useState)(false);
    const [isAnimating, setIsAnimating] = (0, _react.useState)(false);
    const [isMobile, setIsMobile] = (0, _react.useState)(false);
    // ARIA and Focus Management
    const { announcePolite } = (0, _useAriaAnnouncements.useAriaAnnouncements)();
    const { addFocusClasses } = (0, _useFocusManagement.useFocusIndicator)();
    const barRef = (0, _react.useRef)(null);
    const downloadButtonRef = (0, _react.useRef)(null);
    const skipButtonRef = (0, _react.useRef)(null);
    const closeButtonRef = (0, _react.useRef)(null);
    const STORAGE_KEY = "lusotown_app_download_bar_dismissed";
    const SESSION_KEY = "lusotown_app_download_shown";
    // Check if user is on mobile device
    (0, _react.useEffect)(()=>{
        const checkMobile = ()=>{
            const userAgent = navigator.userAgent.toLowerCase();
            const isMobileDevice = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(userAgent);
            const isSmallScreen = window.innerWidth < 768;
            setIsMobile(isMobileDevice || isSmallScreen);
        };
        checkMobile();
        window.addEventListener("resize", checkMobile);
        return ()=>window.removeEventListener("resize", checkMobile);
    }, []);
    // Auto-show logic
    (0, _react.useEffect)(()=>{
        if (!autoShow || !isMobile) return;
        const isDismissed = localStorage.getItem(STORAGE_KEY);
        const hasShownInSession = sessionStorage.getItem(SESSION_KEY);
        if (isDismissed || hasShownInSession) return;
        const timer = setTimeout(()=>{
            setIsVisible(true);
            sessionStorage.setItem(SESSION_KEY, "true");
            // Announce to screen readers
            announcePolite(_useAriaAnnouncements.ARIA_MESSAGES.appDownloadBar.shown, true);
            // Emit event for widget manager
            window.dispatchEvent(new CustomEvent("appDownloadBarShown"));
        }, showDelay);
        return ()=>clearTimeout(timer);
    }, [
        autoShow,
        showDelay,
        isMobile
    ]);
    // Dismiss handlers
    const handleDismiss = (permanent = false)=>{
        setIsAnimating(true);
        // Announce dismissal
        announcePolite(_useAriaAnnouncements.ARIA_MESSAGES.appDownloadBar.dismissed);
        setTimeout(()=>{
            setIsVisible(false);
            setIsAnimating(false);
            if (permanent) {
                localStorage.setItem(STORAGE_KEY, "true");
            }
            // Emit custom event for other widgets to reposition
            window.dispatchEvent(new CustomEvent("appDownloadBarDismissed"));
        }, 150);
    };
    const handleSkip = ()=>{
        handleDismiss(false) // Temporary dismiss for session only
        ;
    };
    const handleClose = ()=>{
        handleDismiss(true) // Permanent dismiss
        ;
    };
    const handleDownloadClick = ()=>{
        // Announce download started
        announcePolite(_useAriaAnnouncements.ARIA_MESSAGES.appDownloadBar.downloadStarted);
        // Track download attempt
        if (typeof gtag !== "undefined") {
            gtag("event", "app_download_click", {
                source: "bottom_bar",
                platform: navigator.userAgent.includes("iPhone") ? "ios" : "android"
            });
        }
    };
    if (!isVisible || !isMobile) return null;
    const isPortuguese = language === "pt";
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_framermotion.AnimatePresence, {
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_framermotion.motion.div, {
            ref: barRef,
            initial: {
                y: position === "bottom" ? 100 : -100,
                opacity: 0
            },
            animate: {
                y: 0,
                opacity: 1
            },
            exit: {
                y: position === "bottom" ? 100 : -100,
                opacity: 0
            },
            transition: {
                type: "spring",
                stiffness: 300,
                damping: 30,
                duration: 0.4
            },
            className: `fixed ${position === "bottom" ? "bottom-0" : "top-0"} left-2 right-2 sm:left-4 sm:right-4 max-w-sm sm:max-w-md mx-auto
          bg-gradient-to-r from-primary-500 to-secondary-500 text-white shadow-2xl rounded-t-2xl 
          ${position === "bottom" ? "border-t border-primary-400" : "border-b border-primary-400 rounded-b-2xl rounded-t-none"}
          ${className}`,
            style: {
                zIndex: _zindexlayers.COMPONENT_Z_INDEX.appDownloadBar
            },
            role: "banner",
            "aria-labelledby": "app-download-title",
            "aria-describedby": "app-download-description",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "absolute inset-0 opacity-10",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "absolute top-2 left-4 w-2 h-2 bg-white rounded-full animate-pulse"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "absolute bottom-2 right-8 w-1 h-1 bg-white/60 rounded-full animate-pulse",
                            style: {
                                animationDelay: "1s"
                            }
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "absolute top-1/2 left-1/3 w-1 h-1 bg-white/40 rounded-full animate-pulse",
                            style: {
                                animationDelay: "2s"
                            }
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "relative z-10 py-3 px-4",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center justify-between gap-4",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center gap-3 flex-1 min-w-0",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "flex-shrink-0",
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "w-10 h-10 bg-white/20 rounded-xl flex items-center justify-center",
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.DevicePhoneMobileIcon, {
                                                className: "w-5 h-5 text-white"
                                            })
                                        })
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "flex-1 min-w-0",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                className: "flex items-center gap-2 mb-1",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.SparklesIcon, {
                                                        className: "w-4 h-4 text-white",
                                                        "aria-hidden": "true"
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                        id: "app-download-title",
                                                        className: "font-bold text-sm",
                                                        children: isPortuguese ? "App LusoTown Dispon\xedvel!" : "LusoTown App Available!"
                                                    })
                                                ]
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                id: "app-download-description",
                                                className: "text-xs text-white/90 leading-tight",
                                                children: isPortuguese ? "Conecte-se com a comunidade lus\xf3fona no Reino Unido, descubra eventos culturais e encontre a sua rede. Descarregue agora." : "Connect with the Portuguese-speaking community across the UK, discover cultural events, and build your network. Download now."
                                            })
                                        ]
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center gap-2 flex-shrink-0",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("a", {
                                        ref: downloadButtonRef,
                                        href: navigator.userAgent.includes("iPhone") || navigator.userAgent.includes("iPad") ? "https://apps.apple.com/app/lusotown-london" : "https://play.google.com/store/apps/details?id=com.lusotown.london",
                                        className: "bg-white text-primary-600 px-3 py-2 rounded-lg font-semibold text-xs hover:bg-white/95 transition-colors shadow-sm flex-shrink-0 min-h-[44px] min-w-[60px] flex items-center justify-center whitespace-nowrap",
                                        target: "_blank",
                                        rel: "noopener noreferrer",
                                        onClick: handleDownloadClick,
                                        onFocus: ()=>{
                                            if (downloadButtonRef.current) {
                                                addFocusClasses(downloadButtonRef.current, "button");
                                            }
                                        },
                                        onBlur: ()=>{
                                            if (downloadButtonRef.current) {
                                                downloadButtonRef.current.classList.remove("lusotown-button-focus", "lusotown-focus-smooth");
                                            }
                                        },
                                        "aria-label": isPortuguese ? `Descarregar app LusoTown para ${navigator.userAgent.includes("iPhone") ? "iOS" : "Android"}. Abre numa nova janela.` : `Download LusoTown app for ${navigator.userAgent.includes("iPhone") ? "iOS" : "Android"}. Opens in a new window.`,
                                        children: isPortuguese ? "App" : "Get"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                        ref: skipButtonRef,
                                        onClick: handleSkip,
                                        className: "text-white/80 hover:text-white transition-colors px-2 py-1 text-xs underline underline-offset-2 flex-shrink-0 min-h-[44px] min-w-[44px] flex items-center justify-center whitespace-nowrap",
                                        onFocus: ()=>{
                                            if (skipButtonRef.current) {
                                                addFocusClasses(skipButtonRef.current, "button");
                                            }
                                        },
                                        onBlur: ()=>{
                                            if (skipButtonRef.current) {
                                                skipButtonRef.current.classList.remove("lusotown-button-focus", "lusotown-focus-smooth");
                                            }
                                        },
                                        "aria-label": isPortuguese ? "Saltar por agora. Banner ser\xe1 mostrado novamente noutra sess\xe3o." : "Skip for now. Banner will be shown again in another session.",
                                        children: isPortuguese ? "Agora n\xe3o" : "Later"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                        ref: closeButtonRef,
                                        onClick: handleClose,
                                        className: "w-8 h-8 bg-white/20 hover:bg-white/30 rounded-lg flex items-center  justify-center transition-colors flex-shrink-0 ml-1 min-h-[44px] min-w-[44px]",
                                        onFocus: ()=>{
                                            if (closeButtonRef.current) {
                                                addFocusClasses(closeButtonRef.current, "button");
                                            }
                                        },
                                        onBlur: ()=>{
                                            if (closeButtonRef.current) {
                                                closeButtonRef.current.classList.remove("lusotown-button-focus", "lusotown-focus-smooth");
                                            }
                                        },
                                        "aria-label": isPortuguese ? "Fechar permanentemente. Banner n\xe3o ser\xe1 mostrado novamente." : "Close permanently. Banner will not be shown again.",
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_outline.XMarkIcon, {
                                            className: "w-4 h-4 text-white",
                                            "aria-hidden": "true"
                                        })
                                    })
                                ]
                            })
                        ]
                    })
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "absolute bottom-0 left-0 right-0 h-0.5 bg-gradient-to-r from-green-400 via-yellow-300 to-red-400"
                })
            ]
        })
    });
}
function useAppDownloadBarVisible() {
    const [isVisible, setIsVisible] = (0, _react.useState)(false);
    (0, _react.useEffect)(()=>{
        const handleDismiss = ()=>setIsVisible(false);
        const handleShow = ()=>setIsVisible(true);
        // Listen for visibility changes
        window.addEventListener("appDownloadBarDismissed", handleDismiss);
        window.addEventListener("appDownloadBarShown", handleShow);
        // Check initial state
        const isDismissed = localStorage.getItem("lusotown_app_download_bar_dismissed");
        const hasShownInSession = sessionStorage.getItem("lusotown_app_download_shown");
        setIsVisible(!isDismissed && hasShownInSession === "true");
        return ()=>{
            window.removeEventListener("appDownloadBarDismissed", handleDismiss);
            window.removeEventListener("appDownloadBarShown", handleShow);
        };
    }, []);
    return isVisible;
}

//# sourceMappingURL=data:application/json;base64,