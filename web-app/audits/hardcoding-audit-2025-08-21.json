{
  "summary": {
    "totalViolations": 103303,
    "byCategory": {
      "hardcoded_text": 100953,
      "console_logs": 193,
      "hardcoded_routes": 865,
      "hardcoded_colors": 401,
      "hardcoded_urls": 649,
      "hardcoded_prices": 176,
      "hardcoded_analytics": 66
    },
    "bySeverity": {
      "high": 101778,
      "medium": 1332,
      "low": 193
    },
    "filesAffected": 542,
    "timestamp": "2025-08-21T21:07:46.131Z",
    "recommendations": [
      "üö® CRITICAL: Implement bilingual system with t() function",
      "üîß Create config/cdn.ts for URL management",
      "üí∞ Create formatPrice() utility function",
      "‚ö†Ô∏è Schedule immediate cleanup sprint"
    ]
  },
  "violations": [
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 8,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'@testing-library/react'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 9,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'@/utils/mobile-ux-validator'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 10,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'@/config/mobile-ux-agent'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 11,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'@/config/mobile-development-standards'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 15,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'innerWidth'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 20,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'innerHeight'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 27,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'resize'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 33,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'touches'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 46,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'Eventos'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 47,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'Comunidade Portuguesa em Londres'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 48,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'Descubra a vibrante comunidade portuguesa em Londres atrav√©s dos nossos eventos culturais aut√™nticos'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 49,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'Participe em experi√™ncias √∫nicas da cultura portuguesa, incluindo noites de fado tradicional, workshops de culin√°ria portuguesa, festivais culturais e oportunidades de networking profissional'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 53,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'In√≠cio'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 46,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'Eventos'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 55,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'Comunidade'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 56,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'Combina√ß√µes'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 57,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'Mensagens'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 58,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'Perfil'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 62,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'Participar no Evento'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 63,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'Enviar Mensagem'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 64,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'Guardar nos Favoritos'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 65,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'Partilhar Evento'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 66,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'Reservar Transporte'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 70,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'Nome Completo'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 71,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'Endere√ßo de Email'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 72,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'N√∫mero de Telefone'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 73,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'Data de Nascimento'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 74,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'Localiza√ß√£o'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 75,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'Interesses Culturais'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 89,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'üöÄ Starting Mobile UX Test Suite for LusoTown...\\n'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 121,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'iPhone SE'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 121,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'critical'",
      "timestamp": "2025-08-21T21:07:42.623Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 122,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'iPhone 12'",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 121,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'critical'",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 123,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'iPhone 13'",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 123,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'high'",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 124,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'iPad Portrait'",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 124,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'medium'",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 128,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "`üì± Testing ${breakpoint.name} (${breakpoint.width}x${breakpoint.height}px)...`",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 145,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n      const overflowElements = Array.from(elements).filter(el => {\n        if (el instanceof HTMLElement) {\n          const rect = el.getBoundingClientRect();\n          return rect.right > breakpoint.width;\n        }\n        return false;\n      });\n\n      const testResult = {\n        name: `",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 155,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "`,\n        breakpoint,\n        validationScore: result.score,\n        hasHorizontalScroll,\n        overflowElements: overflowElements.length,\n        issues: result.issues,\n        passed: result.passed && !hasHorizontalScroll && overflowElements.length === 0\n      };\n\n      this.testResults.push(testResult);\n      \n      if (testResult.passed) {\n        console.log(`",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 167,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "`);\n      } else {\n        console.log(`",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 169,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "`);\n        if (hasHorizontalScroll) console.log('",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 170,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n        if (overflowElements.length > 0) console.log(`",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 171,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "`);\n      }\n    }\n  }\n\n  /**\n   * Test touch target sizes and interactions\n   */\n  async testTouchInteractions(component: React.ReactElement): Promise<void> {\n    console.log('",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 180,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n    \n    mockViewport(375, 667); // Test on smallest critical viewport\n    const { container } = render(component);\n    \n    // Find all interactive elements\n    const interactiveElements = container.querySelectorAll(\n      '",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 187,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "\"button\"",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 230,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'touchstart'",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 239,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'Touch Interactions'",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 250,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'‚úÖ Touch interactions test passed'",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 252,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'‚ùå Touch interactions test failed'",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 253,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "`);\n      if (spacingIssues > 0) console.log(`",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 254,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "`);\n    }\n  }\n\n  /**\n   * Test Portuguese text handling and overflow\n   */\n  async testPortugueseTextHandling(component: React.ReactElement): Promise<void> {\n    console.log('",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 262,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n    \n    // Test different text lengths\n    const textTests = [\n      { name: '",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 266,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "', content: PORTUGUESE_TEST_CONTENT.shortText },\n      { name: '",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 267,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "', content: PORTUGUESE_TEST_CONTENT.mediumText },\n      { name: '",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 268,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "', content: PORTUGUESE_TEST_CONTENT.longText },\n      { name: '",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 269,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "', content: PORTUGUESE_TEST_CONTENT.veryLongText },\n    ];\n\n    let overflowIssues = 0;\n    let fontSizeIssues = 0;\n\n    for (const textTest of textTests) {\n      // Create test component with Portuguese text\n      const TestComponent = () => (\n        <div>\n          {React.cloneElement(component)}\n          <div data-testid=\"",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 280,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "\">\n            <p>{textTest.content}</p>\n            <button>{PORTUGUESE_TEST_CONTENT.buttons.joinEvent}</button>\n            <label>{PORTUGUESE_TEST_CONTENT.forms.fullName}</label>\n          </div>\n        </div>\n      );\n\n      mockViewport(375, 667);\n      const { container } = render(<TestComponent />);\n      \n      // Check for text overflow\n      const textElements = container.querySelectorAll('",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 292,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n      Array.from(textElements).forEach((element) => {\n        if (element instanceof HTMLElement) {\n          if (element.scrollWidth > element.clientWidth || \n              element.scrollHeight > element.clientHeight) {\n            overflowIssues++;\n          }\n          \n          // Check font size\n          const fontSize = parseInt(window.getComputedStyle(element).fontSize);\n          if (fontSize < 14) {\n            fontSizeIssues++;\n          }\n        }\n      });\n    }\n\n    const testResult = {\n      name: '",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 310,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "',\n      overflowIssues,\n      fontSizeIssues,\n      passed: overflowIssues === 0 && fontSizeIssues === 0\n    };\n\n    this.testResults.push(testResult);\n    \n    if (testResult.passed) {\n      console.log('",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 250,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n    } else {\n      console.log('",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 321,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n      if (overflowIssues > 0) console.log(`",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 322,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "`);\n      if (fontSizeIssues > 0) console.log(`",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 323,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "`);\n    }\n  }\n\n  /**\n   * Test mobile accessibility compliance\n   */\n  async testMobileAccessibility(component: React.ReactElement): Promise<void> {\n    console.log('",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 331,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n    \n    mockViewport(375, 667);\n    const { container } = render(component);\n    \n    // Check for proper heading structure\n    const headings = container.querySelectorAll('",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 337,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n    const hasHeadings = headings.length > 0;\n    \n    // Check for alt text on images\n    const images = container.querySelectorAll('",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 341,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n    const imagesWithoutAlt = Array.from(images).filter(img => \n      !img.alt && !img.getAttribute('",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 343,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "')\n    ).length;\n    \n    // Check for form labels\n    const inputs = container.querySelectorAll('",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 347,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n    const inputsWithoutLabels = Array.from(inputs).filter(input => {\n      const label = container.querySelector(`",
      "timestamp": "2025-08-21T21:07:42.624Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 349,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "\"${input.id}\"",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 349,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "`);\n      const ariaLabel = input.getAttribute('",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 350,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n      const ariaLabelledBy = input.getAttribute('",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 351,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n      return !label && !ariaLabel && !ariaLabelledBy;\n    }).length;\n    \n    // Check for Portuguese lang attributes\n    const portugueseElements = container.querySelectorAll('",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 356,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "\"], [lang=\"",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 356,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n    const hasPortugueseLangAttributes = portugueseElements.length > 0;\n\n    const testResult = {\n      name: '",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 360,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "',\n      hasHeadings,\n      imagesWithoutAlt,\n      inputsWithoutLabels,\n      hasPortugueseLangAttributes,\n      passed: hasHeadings && imagesWithoutAlt === 0 && inputsWithoutLabels === 0\n    };\n\n    this.testResults.push(testResult);\n    \n    if (testResult.passed) {\n      console.log('",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 250,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n    } else {\n      console.log('",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 373,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n      if (!hasHeadings) console.log('",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 374,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n      if (imagesWithoutAlt > 0) console.log(`",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 375,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "`);\n      if (inputsWithoutLabels > 0) console.log(`",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 376,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "`);\n    }\n  }\n\n  /**\n   * Test mobile performance considerations\n   */\n  async testMobilePerformance(component: React.ReactElement): Promise<void> {\n    console.log('",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 384,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n    \n    const { container } = render(component);\n    \n    // Check for lazy loading\n    const images = container.querySelectorAll('",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 389,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n    const imagesWithoutLazyLoading = Array.from(images).filter(img => \n      !img.loading || img.loading !== '",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 400,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "'[class*=\"",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 400,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n    const tooManyAnimations = animatedElements.length > 5;\n    \n    // Check bundle size considerations (simplified)\n    const totalElements = container.querySelectorAll('",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 404,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "').length;\n    const complexLayout = totalElements > 100;\n\n    const testResult = {\n      name: '",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 408,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "',\n      imagesWithoutLazyLoading,\n      imagesWithoutResponsive,\n      tooManyAnimations,\n      complexLayout,\n      totalElements,\n      passed: imagesWithoutLazyLoading <= 2 && !tooManyAnimations && !complexLayout\n    };\n\n    this.testResults.push(testResult);\n    \n    if (testResult.passed) {\n      console.log('",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 250,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n    } else {\n      console.log('",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 422,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n      if (imagesWithoutLazyLoading > 2) console.log(`",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 423,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "`);\n      if (tooManyAnimations) console.log('",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 424,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n      if (complexLayout) console.log(`",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 425,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "`);\n    }\n  }\n\n  /**\n   * Test gesture support\n   */\n  async testGestureSupport(component: React.ReactElement): Promise<void> {\n    console.log('",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 433,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n    \n    const { container } = render(component);\n    \n    // Check for swipeable elements\n    const swipeElements = container.querySelectorAll('",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 438,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "\"swipe\"",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 438,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n    const hasSwipeSupport = swipeElements.length > 0;\n    \n    // Test basic touch events\n    let touchEventSupported = false;\n    try {\n      const touchEvent = createTouchEvent('",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 444,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "', [{ clientX: 100, clientY: 100 }]);\n      container.dispatchEvent(touchEvent);\n      touchEventSupported = true;\n    } catch (error) {\n      // Touch events not supported\n    }\n\n    const testResult = {\n      name: '",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 452,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "',\n      hasSwipeSupport,\n      touchEventSupported,\n      swipeElementsCount: swipeElements.length,\n      passed: hasSwipeSupport || touchEventSupported\n    };\n\n    this.testResults.push(testResult);\n    \n    if (testResult.passed) {\n      console.log('",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 250,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n    } else {\n      console.log('",
      "timestamp": "2025-08-21T21:07:42.625Z"
    },
    {
      "file": "src/__tests__/mobile-ux-tests.ts",
      "line": 464,
      "category": "hardcoded_text",
      "severity": "high",
      "message": "Hardcoded text detected - should use t() function",
      "code": "');\n    }\n  }\n\n  /**\n   * Test cultural compliance for Portuguese community\n   */\n  async testCulturalCompliance(component: React.ReactElement): Promise<void> {\n    console.log('",
      "timestamp": "2025-08-21T21:07:42.625Z"
    }
  ],
  "fullViolationCount": 103303
}