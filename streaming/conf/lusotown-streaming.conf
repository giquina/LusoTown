# LusoTown Streaming Server Configuration
# Optimized for Portuguese-speaking community in London & UK

upstream srs_server {
    server 127.0.0.1:8080;
    keepalive 32;
}

upstream srs_api {
    server 127.0.0.1:1985;
    keepalive 16;
}

# Main streaming server
server {
    listen 80;
    listen [::]:80;
    server_name stream.lusotown.com *.stream.lusotown.com;

    # Security headers for Portuguese-speaking community
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # CORS for Portuguese-speaking community cross-origin access
    location ~* \.(m3u8|ts|key)$ {
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
        add_header Access-Control-Allow-Headers "Range";
        add_header Access-Control-Expose-Headers "Content-Length, Content-Range";
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        
        # Proxy to SRS server
        proxy_pass http://srs_server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Optimize for streaming
        proxy_buffering off;
        proxy_cache off;
        proxy_request_buffering off;
    }
    
    # HLS streaming endpoint
    location /live/ {
        # CORS headers
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
        
        # Cache control for live streaming
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        
        # Proxy to SRS
        proxy_pass http://srs_server/live/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Streaming optimizations
        proxy_buffering off;
        proxy_cache off;
        proxy_request_buffering off;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }
    
    # API endpoints for Portuguese-speaking community management
    location /api/ {
        # CORS for API access
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
        
        # Handle preflight requests
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
            add_header Access-Control-Max-Age 86400;
            add_header Content-Type "text/plain charset=UTF-8";
            add_header Content-Length 0;
            return 204;
        }
        
        # Proxy to SRS API
        proxy_pass http://srs_api/api/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API optimizations
        proxy_connect_timeout 5s;
        proxy_read_timeout 30s;
        proxy_send_timeout 30s;
    }
    
    # Stats endpoint for Portuguese-speaking community analytics
    location /stats {
        add_header Access-Control-Allow-Origin "*";
        proxy_pass http://srs_api/api/v1/summaries;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
    }
    
    # Health check endpoint
    location /health {
        add_header Content-Type "application/json";
        return 200 '{"status":"healthy","service":"lusotown-streaming","timestamp":"$time_iso8601"}';
    }
    
    # CDN integration for BunnyCDN
    location /cdn/ {
        # Portuguese market CDN optimization
        add_header Access-Control-Allow-Origin "*";
        add_header Cache-Control "public, max-age=86400";
        
        # Rewrite for CDN endpoint
        rewrite ^/cdn/(.*)$ /$1 break;
        
        # Proxy to BunnyCDN if configured
        set $cdn_endpoint "${CDN_ENDPOINT}";
        if ($cdn_endpoint != "") {
            proxy_pass $cdn_endpoint;
        }
        
        # Fallback to local SRS
        proxy_pass http://srs_server;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_buffering off;
        proxy_cache off;
    }
    
    # Static assets for Portuguese streaming UI
    location /static/ {
        root /usr/local/srs;
        add_header Cache-Control "public, max-age=3600";
        add_header Access-Control-Allow-Origin "*";
        expires 1h;
    }
    
    # Default location
    location / {
        proxy_pass http://srs_server;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

# HTTPS configuration (production)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name stream.lusotown.com *.stream.lusotown.com;

    # SSL configuration
    ssl_certificate /etc/ssl/certs/lusotown-streaming.crt;
    ssl_certificate_key /etc/ssl/private/lusotown-streaming.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozTLS:10m;
    ssl_session_tickets off;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # HSTS for security
    add_header Strict-Transport-Security "max-age=63072000" always;
    
    # Same configuration as HTTP server
    include /etc/nginx/sites-available/lusotown-streaming-common.conf;
}