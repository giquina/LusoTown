name: Claude PR Review for Portuguese Community Platform

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  claude-review:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.pull_request.title, '[skip-claude]') }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'web-app/package-lock.json'

    - name: Install dependencies
      run: |
        cd web-app
        npm ci

    - name: Run Quality Gates
      id: quality-gates
      run: |
        cd web-app
        
        echo "## üîç LusoTown Community Platform Quality Analysis" >> $GITHUB_STEP_SUMMARY
        echo "**Portuguese Community Focus**: Serving 750+ members across UK" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Hardcoding Audit (Critical for Community Platform)
        echo "### üö® Zero-Hardcoding Policy Check" >> $GITHUB_STEP_SUMMARY
        if npm run audit:hardcoding > hardcoding-results.txt 2>&1; then
          echo "‚úÖ **Hardcoding Audit**: PASSED - Community data properly centralized" >> $GITHUB_STEP_SUMMARY
          echo "HARDCODING_STATUS=passed" >> $GITHUB_OUTPUT
        else
          echo "‚ùå **Hardcoding Audit**: FAILED - Import from /src/config/ required" >> $GITHUB_STEP_SUMMARY
          echo "HARDCODING_STATUS=failed" >> $GITHUB_OUTPUT
        fi
        
        # ESLint (Code Quality)
        echo "### üìù Code Quality Analysis" >> $GITHUB_STEP_SUMMARY  
        if npm run lint > lint-results.txt 2>&1; then
          echo "‚úÖ **ESLint**: PASSED - Code quality meets community standards" >> $GITHUB_STEP_SUMMARY
          echo "LINT_STATUS=passed" >> $GITHUB_OUTPUT
        else
          echo "‚ö†Ô∏è **ESLint**: Issues found - Review needed for community platform" >> $GITHUB_STEP_SUMMARY
          echo "LINT_STATUS=failed" >> $GITHUB_OUTPUT
        fi
        
        # TypeScript Compilation
        echo "### üîß TypeScript Validation" >> $GITHUB_STEP_SUMMARY
        if npx tsc --noEmit > typescript-results.txt 2>&1; then
          echo "‚úÖ **TypeScript**: PASSED - Type safety maintained" >> $GITHUB_STEP_SUMMARY
          echo "TYPESCRIPT_STATUS=passed" >> $GITHUB_OUTPUT
        else
          echo "‚ö†Ô∏è **TypeScript**: Compilation issues found" >> $GITHUB_STEP_SUMMARY
          echo "TYPESCRIPT_STATUS=failed" >> $GITHUB_OUTPUT
        fi
        
        # Build Test
        echo "### üèóÔ∏è Production Build Test" >> $GITHUB_STEP_SUMMARY
        if npm run build > build-results.txt 2>&1; then
          echo "‚úÖ **Build**: PASSED - Ready for Portuguese community deployment" >> $GITHUB_STEP_SUMMARY
          echo "BUILD_STATUS=passed" >> $GITHUB_OUTPUT
        else
          echo "‚ùå **Build**: FAILED - Deployment blocked" >> $GITHUB_STEP_SUMMARY
          echo "BUILD_STATUS=failed" >> $GITHUB_OUTPUT
        fi

    - name: Claude PR Analysis
      if: ${{ secrets.ANTHROPIC_API_KEY != '' }}
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          // Read quality gate results
          const hardcodingStatus = '${{ steps.quality-gates.outputs.HARDCODING_STATUS }}';
          const lintStatus = '${{ steps.quality-gates.outputs.LINT_STATUS }}';
          const typescriptStatus = '${{ steps.quality-gates.outputs.TYPESCRIPT_STATUS }}';
          const buildStatus = '${{ steps.quality-gates.outputs.BUILD_STATUS }}';
          
          // Get PR diff for context
          const { data: prData } = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });
          
          const { data: files } = await github.rest.pulls.listFiles({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });
          
          // Claude analysis prompt
          const claudePrompt = `# Portuguese Community Platform PR Analysis
          
          You are analyzing a pull request for LusoTown, a Portuguese-speaking community platform serving 750+ members across the UK with event discovery, business directory, transport coordination, and university partnerships.
          
          ## Quality Gate Results:
          - Hardcoding Audit: ${hardcodingStatus}
          - ESLint: ${lintStatus} 
          - TypeScript: ${typescriptStatus}
          - Build: ${buildStatus}
          
          ## PR Context:
          - Title: ${prData.title}
          - Description: ${prData.body || 'No description provided'}
          - Files changed: ${files.length}
          
          ## Changed Files:
          ${files.map(f => `- ${f.filename} (+${f.additions}/-${f.deletions})`).join('\n')}
          
          ## Community Focus Requirements:
          1. Use "Portuguese-speaking community" (not "Portuguese community")
          2. Reference "United Kingdom" (not just "London") 
          3. Import all data from /src/config/ (zero hardcoding)
          4. Maintain bilingual EN/PT support
          5. Ensure mobile-first design (375px, 768px, 1024px)
          6. Focus on community needs over technology showcase
          
          Provide a focused review addressing:
          1. Community impact and alignment with Portuguese diaspora needs
          2. Code quality issues and recommendations
          3. Cultural authenticity and terminology
          4. Mobile accessibility for community members
          5. Integration with existing Portuguese cultural features
          
          Keep recommendations practical and community-focused.`;
          
          // Post Claude analysis comment (if API key available)
          if ('${{ secrets.ANTHROPIC_API_KEY }}') {
            const comment = `## üáµüáπ Claude Analysis: Portuguese Community Platform Review
            
            ### Quality Gate Summary
            ${hardcodingStatus === 'passed' ? '‚úÖ' : '‚ùå'} **Hardcoding Audit**: ${hardcodingStatus} - ${hardcodingStatus === 'passed' ? 'Community data properly centralized in /src/config/' : 'Import from /src/config/ required for community platform'}
            ${lintStatus === 'passed' ? '‚úÖ' : '‚ö†Ô∏è'} **Code Quality**: ${lintStatus} - ${lintStatus === 'passed' ? 'Meets Portuguese community standards' : 'Review recommended'}
            ${typescriptStatus === 'passed' ? '‚úÖ' : '‚ö†Ô∏è'} **Type Safety**: ${typescriptStatus} - ${typescriptStatus === 'passed' ? 'Type safety maintained' : 'Compilation issues found'}
            ${buildStatus === 'passed' ? '‚úÖ' : '‚ùå'} **Production Build**: ${buildStatus} - ${buildStatus === 'passed' ? 'Ready for community deployment' : 'Deployment blocked'}
            
            ### üéØ Community Impact Assessment
            This PR affects **${files.length} files** in the Portuguese community platform serving 750+ members across the UK.
            
            **Changed Areas:**
            ${files.map(f => `- \`${f.filename}\` (+${f.additions}/-${f.deletions})`).join('\n')}
            
            ### üìã Community-Focused Review Checklist
            Please verify:
            - [ ] Uses "Portuguese-speaking community" terminology
            - [ ] References UK-wide scope (not London-only)
            - [ ] Imports data from \`/src/config/\` (zero hardcoding)
            - [ ] Maintains bilingual EN/PT support
            - [ ] Follows mobile-first design (375px breakpoint)
            - [ ] Serves practical community needs
            
            ### üöÄ Next Steps
            ${buildStatus === 'passed' ? '‚úÖ **Ready for deployment** - All quality gates passed!' : '‚ö†Ô∏è **Address quality gate issues** before deployment to Portuguese community'}
            
            *Analysis focused on Portuguese diaspora community needs across the United Kingdom*`;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}

    - name: Set PR Status
      uses: actions/github-script@v7
      with:
        script: |
          const hardcodingStatus = '${{ steps.quality-gates.outputs.HARDCODING_STATUS }}';
          const buildStatus = '${{ steps.quality-gates.outputs.BUILD_STATUS }}';
          
          // Set overall status based on critical gates
          const overallStatus = (hardcodingStatus === 'passed' && buildStatus === 'passed') ? 'success' : 'failure';
          const description = overallStatus === 'success' ? 
            '‚úÖ Ready for Portuguese community deployment' : 
            '‚ùå Quality gates failed - Review required';
          
          await github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: context.payload.pull_request.head.sha,
            state: overallStatus,
            target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
            description: description,
            context: 'Claude PR Review / Portuguese Community Platform'
          });