name: Quality Gate with Claude Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      analysis_type:
        description: 'Type of analysis to run'
        required: true
        default: 'comprehensive'
        type: choice
        options:
        - comprehensive
        - security
        - performance
        - cultural

permissions:
  contents: read
  issues: write
  pull-requests: write
  checks: write

jobs:
  quality-analysis:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'web-app/package-lock.json'

    - name: Install dependencies
      run: |
        cd web-app
        npm ci

    - name: Run Comprehensive Quality Gates
      id: quality-gates
      run: |
        cd web-app
        
        echo "## 🏗️ LusoTown Quality Gate Analysis" > quality-report.md
        echo "**Target**: 750+ Portuguese-speaking community members across UK" >> quality-report.md
        echo "**Focus**: Community-first platform serving Portuguese diaspora" >> quality-report.md
        echo "" >> quality-report.md
        
        # Community Score Calculator
        COMMUNITY_SCORE=100
        
        # Critical: Zero Hardcoding Policy (40 points)
        echo "### 🚨 Zero-Hardcoding Policy (Critical - 40 points)" >> quality-report.md
        if npm run audit:hardcoding > hardcoding-output.txt 2>&1; then
          echo "✅ **PASSED**: All community data properly centralized in /src/config/" >> quality-report.md
          echo "HARDCODING_SCORE=40" >> $GITHUB_OUTPUT
        else
          violations=$(grep -o "Total violations: [0-9]*" hardcoding-output.txt | grep -o "[0-9]*" || echo "0")
          if [ "$violations" -lt 1000 ]; then
            score=$((40 - violations/50))
            echo "⚠️ **PARTIAL**: $violations violations found (-$(((violations+49)/50)) points)" >> quality-report.md
            echo "HARDCODING_SCORE=$score" >> $GITHUB_OUTPUT
          else
            echo "❌ **FAILED**: Too many hardcoding violations (${violations}+)" >> quality-report.md
            echo "HARDCODING_SCORE=0" >> $GITHUB_OUTPUT
            COMMUNITY_SCORE=$((COMMUNITY_SCORE - 40))
          fi
        fi
        
        # Code Quality (20 points) 
        echo "### 📝 Code Quality Standards (20 points)" >> quality-report.md
        if npm run lint > lint-output.txt 2>&1; then
          echo "✅ **PASSED**: Code meets Portuguese community platform standards" >> quality-report.md
          echo "LINT_SCORE=20" >> $GITHUB_OUTPUT
        else
          errors=$(grep -c "Error:" lint-output.txt || echo "0")
          if [ "$errors" -lt 5 ]; then
            score=$((20 - errors * 2))
            echo "⚠️ **PARTIAL**: $errors errors found (-$((errors * 2)) points)" >> quality-report.md
            echo "LINT_SCORE=$score" >> $GITHUB_OUTPUT
          else
            echo "❌ **FAILED**: Multiple ESLint errors blocking community deployment" >> quality-report.md
            echo "LINT_SCORE=0" >> $GITHUB_OUTPUT
          fi
        fi
        
        # TypeScript Compilation (20 points)
        echo "### 🔧 TypeScript Type Safety (20 points)" >> quality-report.md
        if npx tsc --noEmit > typescript-output.txt 2>&1; then
          echo "✅ **PASSED**: Type safety maintained for Portuguese community features" >> quality-report.md
          echo "TYPESCRIPT_SCORE=20" >> $GITHUB_OUTPUT
        else
          echo "⚠️ **PARTIAL**: Type compilation issues found" >> quality-report.md
          echo "TYPESCRIPT_SCORE=10" >> $GITHUB_OUTPUT
        fi
        
        # Production Build (20 points - Critical)
        echo "### 🏗️ Production Deployment Readiness (20 points)" >> quality-report.md
        if npm run build > build-output.txt 2>&1; then
          echo "✅ **PASSED**: Ready for Portuguese community deployment" >> quality-report.md
          echo "BUILD_SCORE=20" >> $GITHUB_OUTPUT
        else
          echo "❌ **FAILED**: Build errors prevent community deployment" >> quality-report.md  
          echo "BUILD_SCORE=0" >> $GITHUB_OUTPUT
          COMMUNITY_SCORE=$((COMMUNITY_SCORE - 20))
        fi
        
        # Calculate final score
        hardcoding_score=$(echo "$GITHUB_OUTPUT" | grep "HARDCODING_SCORE" | cut -d'=' -f2 || echo "0")
        lint_score=$(echo "$GITHUB_OUTPUT" | grep "LINT_SCORE" | cut -d'=' -f2 || echo "0")
        typescript_score=$(echo "$GITHUB_OUTPUT" | grep "TYPESCRIPT_SCORE" | cut -d'=' -f2 || echo "0")  
        build_score=$(echo "$GITHUB_OUTPUT" | grep "BUILD_SCORE" | cut -d'=' -f2 || echo "0")
        
        final_score=$((hardcoding_score + lint_score + typescript_score + build_score))
        echo "FINAL_SCORE=$final_score" >> $GITHUB_OUTPUT
        
        echo "" >> quality-report.md
        echo "### 🎯 Community Platform Quality Score: $final_score/100" >> quality-report.md
        
        if [ "$final_score" -ge 90 ]; then
          echo "🏆 **EXCELLENT**: Ready for Portuguese community deployment!" >> quality-report.md
          echo "STATUS=excellent" >> $GITHUB_OUTPUT
        elif [ "$final_score" -ge 75 ]; then
          echo "✅ **GOOD**: Minor improvements recommended for community platform" >> quality-report.md
          echo "STATUS=good" >> $GITHUB_OUTPUT
        elif [ "$final_score" -ge 60 ]; then
          echo "⚠️ **NEEDS IMPROVEMENT**: Address issues before serving Portuguese community" >> quality-report.md
          echo "STATUS=needs_improvement" >> $GITHUB_OUTPUT
        else
          echo "❌ **CRITICAL**: Major issues must be fixed for community deployment" >> quality-report.md
          echo "STATUS=critical" >> $GITHUB_OUTPUT
        fi
        
        cat quality-report.md >> $GITHUB_STEP_SUMMARY

    - name: Mobile UX Validation
      run: |
        cd web-app
        echo "### 📱 Mobile UX Validation for Portuguese Community" >> $GITHUB_STEP_SUMMARY
        
        # Check mobile-first CSS
        mobile_breakpoints=$(grep -r "375px\|768px\|1024px" src/ --include="*.css" --include="*.tsx" | wc -l)
        echo "- **Mobile Breakpoints Found**: $mobile_breakpoints responsive implementations" >> $GITHUB_STEP_SUMMARY
        
        # Check Portuguese cultural elements
        cultural_elements=$(grep -r "Portuguese\|Portugal\|Brasil\|Cape Verde" src/components/ --include="*.tsx" | wc -l) 
        echo "- **Cultural Elements**: $cultural_elements Portuguese community references" >> $GITHUB_STEP_SUMMARY
        
        # Check bilingual support
        translation_keys=$(grep -r "t(" src/ --include="*.tsx" | wc -l)
        echo "- **Translation Integration**: $translation_keys bilingual text implementations" >> $GITHUB_STEP_SUMMARY

    - name: Create Quality Report Issue
      if: ${{ steps.quality-gates.outputs.STATUS == 'critical' || steps.quality-gates.outputs.STATUS == 'needs_improvement' }}
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const qualityReport = fs.readFileSync('web-app/quality-report.md', 'utf8');
          const score = '${{ steps.quality-gates.outputs.FINAL_SCORE }}';
          const status = '${{ steps.quality-gates.outputs.STATUS }}';
          
          const issueBody = `# 🚨 Quality Gate Alert: Portuguese Community Platform
          
          **Current Score**: ${score}/100 (${status.toUpperCase()})
          **Community Impact**: May affect service to 750+ Portuguese speakers across UK
          
          ${qualityReport}
          
          ## 🎯 Priority Actions Required:
          
          ${parseInt(score) < 60 ? '- ❌ **CRITICAL**: Fix build and hardcoding issues immediately' : ''}
          ${parseInt(score) < 75 ? '- ⚠️ **Important**: Address code quality issues for community platform' : ''}
          - 📱 **Mobile Priority**: Ensure 375px breakpoint works for Portuguese community
          - 🇵🇹 **Cultural Check**: Verify Portuguese-speaking terminology throughout
          - 📊 **Config Import**: Import all data from /src/config/ (zero hardcoding)
          
          ## 🌍 Community Context:
          This affects the Portuguese-speaking community platform serving members across the United Kingdom with event discovery, business directory, transport coordination, and university partnerships.
          
          **Next Steps**: Address issues above, then re-run quality gates for community deployment readiness.
          
          ---
          *Automated quality analysis for Portuguese community platform*`;
          
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `🚨 Quality Gate Alert: Score ${score}/100 - Portuguese Community Platform`,
            body: issueBody,
            labels: ['quality-gate', 'community-platform', 'portuguese-focus']
          });