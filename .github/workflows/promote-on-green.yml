name: Promote Preview to Production (Vercel) - DISABLED

on:
  # Disabled this workflow as it was causing failures
  # The main deploy.yml workflow handles all deployments properly
  workflow_dispatch:

jobs:
  promote:
    name: Promote latest READY Preview to Production
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_TEAM_ID: ${{ secrets.VERCEL_TEAM_ID }}
      GIT_SHA: ${{ github.sha }}
    steps:
      - name: Validate env
        run: |
          [ -n "$VERCEL_TOKEN" ] || { echo "Missing VERCEL_TOKEN"; exit 1; }
          [ -n "$VERCEL_PROJECT_ID" ] || { echo "Missing VERCEL_PROJECT_ID"; exit 1; }
          echo "Env OK"

      - name: Wait for Preview build to be READY
        id: wait
        shell: bash
        run: |
          set -euo pipefail
          base="https://api.vercel.com"
          auth="Authorization: Bearer $VERCEL_TOKEN"
          teamQS=""; [ -n "${VERCEL_TEAM_ID:-}" ] && teamQS="&teamId=$VERCEL_TEAM_ID"

          # Poll up to ~15 minutes
          for i in {1..90}; do
            # Prefer commit SHA match; fallback to branch if needed
            url="$base/v13/deployments?projectId=$VERCEL_PROJECT_ID&target=preview&limit=20&meta-githubCommitSha=$GIT_SHA$teamQS"
            resp=$(curl -sfSL -H "$auth" "$url") || resp="{}"
            id=$(echo "$resp" | jq -r '.deployments[] | select(.readyState=="READY") | .uid' | head -n1)

            if [ -z "$id" ]; then
              # Fallback by branch (main)
              url2="$base/v13/deployments?projectId=$VERCEL_PROJECT_ID&target=preview&limit=20&meta-githubCommitRef=main$teamQS"
              resp2=$(curl -sfSL -H "$auth" "$url2") || resp2="{}"
              id=$(echo "$resp2" | jq -r '.deployments[] | select(.readyState=="READY") | .uid' | head -n1)
            fi

            if [ -n "$id" ] && [ "$id" != "null" ]; then
              echo "deployment_id=$id" >> "$GITHUB_OUTPUT"
              echo "Found READY preview: $id"
              exit 0
            fi

            echo "Waiting for Preview to be READY... ($i)"
            sleep 10
          done
          echo "Timed out waiting for READY Preview" >&2
          exit 1

      - name: Promote to Production
        if: success()
        shell: bash
        run: |
          set -euo pipefail
          base="https://api.vercel.com"
          auth="Authorization: Bearer $VERCEL_TOKEN"
          teamQS=""; [ -n "${VERCEL_TEAM_ID:-}" ] && teamQS="?teamId=$VERCEL_TEAM_ID"
          dep_id="${{ steps.wait.outputs.deployment_id }}"
          echo "Promoting $dep_id to Production..."
          curl -sfSL -X POST -H "$auth" -H 'Content-Type: application/json' \
            -d '{"target":"production"}' \
            "$base/v13/deployments/$dep_id/promote$teamQS" >/dev/null
          echo "Promotion requested."
