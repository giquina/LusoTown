version: '3.8'

services:
  # Web Application (Next.js)
  web-app:
    build:
      context: .
      dockerfile: web-app/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_STREAMING_SERVER_URL=http://streaming-server:8080
    depends_on:
      - streaming-server
      - postgres
      - redis
    networks:
      - lusotown-network

  # Streaming Server with Ad Revenue System
  streaming-server:
    build:
      context: .
      dockerfile: Dockerfile.streaming
    ports:
      - "8080:8080"  # HTTP/API
      - "1935:1935"  # RTMP
    environment:
      - NODE_ENV=production
      - PORT=8080
      - RTMP_PORT=1935
      - REDIS_URL=redis://redis:6379
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - GOOGLE_ADSENSE_PUBLISHER_ID=${GOOGLE_ADSENSE_PUBLISHER_ID}
      - EZOIC_SITE_ID=${EZOIC_SITE_ID}
      - PROPELLER_ZONE_ID=${PROPELLER_ZONE_ID}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
    volumes:
      - streaming-media:/app/streaming/media
      - streaming-logs:/app/streaming/logs
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - lusotown-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: lusotown
      POSTGRES_USER: lusotown
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-lusotown_db_2025}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./supabase/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - lusotown-network

  # Redis for Caching and Real-time Features
  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD:-lusotown_redis_2025}
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - lusotown-network

  # Ad Revenue Automation (Cron Jobs)
  ad-automation:
    build:
      context: .
      dockerfile: Dockerfile.streaming
    command: ["node", "streaming/scripts/ad-automation.js"]
    environment:
      - NODE_ENV=production
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - lusotown-network

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  streaming-media:
    driver: local
  streaming-logs:
    driver: local

networks:
  lusotown-network:
    driver: bridge